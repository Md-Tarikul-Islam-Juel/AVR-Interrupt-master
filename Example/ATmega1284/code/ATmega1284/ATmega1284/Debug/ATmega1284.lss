
ATmega1284.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000008be  00000952  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  0080012a  0080012a  0000097c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000009d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000302  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000208  00000000  00000000  00000d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037f  00000000  00000000  00000f52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  000012d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000268  00000000  00000000  00001474  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004fc  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001bd8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	34 c1       	rjmp	.+616    	; 0x26e <__vector_1>
   6:	00 00       	nop
   8:	5d c1       	rjmp	.+698    	; 0x2c4 <__vector_2>
   a:	00 00       	nop
   c:	86 c1       	rjmp	.+780    	; 0x31a <__vector_3>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee eb       	ldi	r30, 0xBE	; 190
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 32       	cpi	r26, 0x2A	; 42
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e2       	ldi	r26, 0x2A	; 42
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 33       	cpi	r26, 0x33	; 51
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	09 d0       	rcall	.+18     	; 0xd6 <main>
  c4:	fa c3       	rjmp	.+2036   	; 0x8ba <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <JUEL_ISR>:
    }
}

void JUEL_ISR(void)
{
	state ^=(1<<0);
  c8:	90 91 2a 01 	lds	r25, 0x012A
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	89 27       	eor	r24, r25
  d0:	80 93 2a 01 	sts	0x012A, r24
  d4:	08 95       	ret

000000d6 <main>:
void JUEL_ISR(void);//declaration of JUEL_ISR function

uint8_t state=0x00;
int main(void)
{
	attachInterrupt(INT1,JUEL_ISR,CHANGE);
  d6:	43 e3       	ldi	r20, 0x33	; 51
  d8:	64 e6       	ldi	r22, 0x64	; 100
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	a5 d0       	rcall	.+330    	; 0x22a <attachInterrupt>
	DDRC|=(1<<PC0);// OUTPUT bit set
  e0:	38 9a       	sbi	0x07, 0	; 7

    while(1)
    {
        if(state)
  e2:	80 91 2a 01 	lds	r24, 0x012A
  e6:	88 23       	and	r24, r24
  e8:	11 f0       	breq	.+4      	; 0xee <main+0x18>
		{
			PORTC |=(1<<PC0);
  ea:	40 9a       	sbi	0x08, 0	; 8
  ec:	fa cf       	rjmp	.-12     	; 0xe2 <main+0xc>
		}
		else
		{
			PORTC &=~(1<<PC0);
  ee:	40 98       	cbi	0x08, 0	; 8
  f0:	f8 cf       	rjmp	.-16     	; 0xe2 <main+0xc>

000000f2 <digitalPinToInterrupt>:
	    || defined(__AVR_ATmega164__) || defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || defined(__AVR_ATmega164PA__)\
	    || defined(__AVR_ATmega324__) || defined(__AVR_ATmega324A__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__)\
		|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
		|| defined(__AVR_ATmega8535__)
			switch(pin)
  f2:	81 30       	cpi	r24, 0x01	; 1
  f4:	69 f0       	breq	.+26     	; 0x110 <digitalPinToInterrupt+0x1e>
  f6:	50 f0       	brcs	.+20     	; 0x10c <digitalPinToInterrupt+0x1a>
  f8:	82 30       	cpi	r24, 0x02	; 2
  fa:	59 f0       	breq	.+22     	; 0x112 <digitalPinToInterrupt+0x20>
								break;
				case INT1: return INT1;  //by default for atmega16,32=INT1=7-----atmega164=INT1=1
								break;
				case INT2: return INT2;  //by default for atmega16,32=INT2=5-----atmega164=INT2=2
								break;
				default: printf("Error: please choose the right sense mode");
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	91 e0       	ldi	r25, 0x01	; 1
 100:	9f 93       	push	r25
 102:	8f 93       	push	r24
 104:	35 d1       	rcall	.+618    	; 0x370 <printf>
				case INT1: return INT1;  //by default for atmega8=INT1=7
						   break;
				default: printf("Error: please choose the right sense mode");
			}
	#endif
}
 106:	0f 90       	pop	r0
 108:	0f 90       	pop	r0
 10a:	08 95       	ret
		|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
		|| defined(__AVR_ATmega8535__)
			switch(pin)
			{
				case INT0: return INT0;  //by default for atmega16,32=INT0=6-----atmega164=INT0=0
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	08 95       	ret
								break;
				case INT1: return INT1;  //by default for atmega16,32=INT1=7-----atmega164=INT1=1
 110:	81 e0       	ldi	r24, 0x01	; 1
				case INT1: return INT1;  //by default for atmega8=INT1=7
						   break;
				default: printf("Error: please choose the right sense mode");
			}
	#endif
}
 112:	08 95       	ret

00000114 <INTERRUPT_SENSE_CONTROL>:
	#if defined(__AVR_ATmega164__) || defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || defined(__AVR_ATmega164PA__)\
		|| defined(__AVR_ATmega324__) || defined(__AVR_ATmega324A__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__)\
		|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)
		
		if(pin==INT0)
 114:	81 11       	cpse	r24, r1
 116:	2d c0       	rjmp	.+90     	; 0x172 <INTERRUPT_SENSE_CONTROL+0x5e>
		{
			if(DETECT_SENSE==LOW)
 118:	61 11       	cpse	r22, r1
 11a:	09 c0       	rjmp	.+18     	; 0x12e <INTERRUPT_SENSE_CONTROL+0x1a>
			{
				EICRA &= ~(1<<ISC01);
 11c:	e9 e6       	ldi	r30, 0x69	; 105
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	8d 7f       	andi	r24, 0xFD	; 253
 124:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC00);
 126:	80 81       	ld	r24, Z
 128:	8e 7f       	andi	r24, 0xFE	; 254
 12a:	80 83       	st	Z, r24
 12c:	08 95       	ret
			}
			else if(DETECT_SENSE==CHANGE)
 12e:	63 33       	cpi	r22, 0x33	; 51
 130:	49 f4       	brne	.+18     	; 0x144 <INTERRUPT_SENSE_CONTROL+0x30>
			{
				EICRA &= ~(1<<ISC01);
 132:	e9 e6       	ldi	r30, 0x69	; 105
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	8d 7f       	andi	r24, 0xFD	; 253
 13a:	80 83       	st	Z, r24
				EICRA |= (1<<ISC00);
 13c:	80 81       	ld	r24, Z
 13e:	81 60       	ori	r24, 0x01	; 1
 140:	80 83       	st	Z, r24
 142:	08 95       	ret
			}
			else if(DETECT_SENSE==FALLING)
 144:	65 33       	cpi	r22, 0x35	; 53
 146:	49 f4       	brne	.+18     	; 0x15a <INTERRUPT_SENSE_CONTROL+0x46>
			{
				EICRA |= (1<<ISC01);
 148:	e9 e6       	ldi	r30, 0x69	; 105
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	82 60       	ori	r24, 0x02	; 2
 150:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC00);
 152:	80 81       	ld	r24, Z
 154:	8e 7f       	andi	r24, 0xFE	; 254
 156:	80 83       	st	Z, r24
 158:	08 95       	ret
			}
			else if(DETECT_SENSE==RISING)
 15a:	64 33       	cpi	r22, 0x34	; 52
 15c:	09 f0       	breq	.+2      	; 0x160 <INTERRUPT_SENSE_CONTROL+0x4c>
 15e:	64 c0       	rjmp	.+200    	; 0x228 <INTERRUPT_SENSE_CONTROL+0x114>
			{
				EICRA |= (1<<ISC01);
 160:	e9 e6       	ldi	r30, 0x69	; 105
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	82 60       	ori	r24, 0x02	; 2
 168:	80 83       	st	Z, r24
				EICRA |= (1<<ISC00);
 16a:	80 81       	ld	r24, Z
 16c:	81 60       	ori	r24, 0x01	; 1
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret
			{
				//static_assert(0, "please choose the right sense mod");
			}
		}
		
		else if(pin==INT1)
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	61 f5       	brne	.+88     	; 0x1ce <INTERRUPT_SENSE_CONTROL+0xba>
		{
			if(DETECT_SENSE==LOW)
 176:	61 11       	cpse	r22, r1
 178:	09 c0       	rjmp	.+18     	; 0x18c <INTERRUPT_SENSE_CONTROL+0x78>
			{
				EICRA &= ~(1<<ISC11);
 17a:	e9 e6       	ldi	r30, 0x69	; 105
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	80 81       	ld	r24, Z
 180:	87 7f       	andi	r24, 0xF7	; 247
 182:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC10);
 184:	80 81       	ld	r24, Z
 186:	8b 7f       	andi	r24, 0xFB	; 251
 188:	80 83       	st	Z, r24
 18a:	08 95       	ret
			}
			else if(DETECT_SENSE==CHANGE)
 18c:	63 33       	cpi	r22, 0x33	; 51
 18e:	49 f4       	brne	.+18     	; 0x1a2 <INTERRUPT_SENSE_CONTROL+0x8e>
			{
				EICRA &= ~(1<<ISC11);
 190:	e9 e6       	ldi	r30, 0x69	; 105
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	87 7f       	andi	r24, 0xF7	; 247
 198:	80 83       	st	Z, r24
				EICRA |= (1<<ISC10);
 19a:	80 81       	ld	r24, Z
 19c:	84 60       	ori	r24, 0x04	; 4
 19e:	80 83       	st	Z, r24
 1a0:	08 95       	ret
			}
			else if(DETECT_SENSE==FALLING)
 1a2:	65 33       	cpi	r22, 0x35	; 53
 1a4:	49 f4       	brne	.+18     	; 0x1b8 <INTERRUPT_SENSE_CONTROL+0xa4>
			{
				EICRA |= (1<<ISC11);
 1a6:	e9 e6       	ldi	r30, 0x69	; 105
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	88 60       	ori	r24, 0x08	; 8
 1ae:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC10);
 1b0:	80 81       	ld	r24, Z
 1b2:	8b 7f       	andi	r24, 0xFB	; 251
 1b4:	80 83       	st	Z, r24
 1b6:	08 95       	ret
			}
			else if(DETECT_SENSE==RISING)
 1b8:	64 33       	cpi	r22, 0x34	; 52
 1ba:	b1 f5       	brne	.+108    	; 0x228 <INTERRUPT_SENSE_CONTROL+0x114>
			{
				EICRA |= (1<<ISC11);
 1bc:	e9 e6       	ldi	r30, 0x69	; 105
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	88 60       	ori	r24, 0x08	; 8
 1c4:	80 83       	st	Z, r24
				EICRA |= (1<<ISC10);
 1c6:	80 81       	ld	r24, Z
 1c8:	84 60       	ori	r24, 0x04	; 4
 1ca:	80 83       	st	Z, r24
 1cc:	08 95       	ret
			{
				//static_assert(0, "please choose the right sense mode");
			}
		}
		
		else if(pin==INT2)
 1ce:	82 30       	cpi	r24, 0x02	; 2
 1d0:	59 f5       	brne	.+86     	; 0x228 <INTERRUPT_SENSE_CONTROL+0x114>
		{
			if(DETECT_SENSE==LOW)
 1d2:	61 11       	cpse	r22, r1
 1d4:	09 c0       	rjmp	.+18     	; 0x1e8 <INTERRUPT_SENSE_CONTROL+0xd4>
			{
				EICRA &= ~(1<<ISC21);
 1d6:	e9 e6       	ldi	r30, 0x69	; 105
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	8f 7d       	andi	r24, 0xDF	; 223
 1de:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC20);
 1e0:	80 81       	ld	r24, Z
 1e2:	8f 7e       	andi	r24, 0xEF	; 239
 1e4:	80 83       	st	Z, r24
 1e6:	08 95       	ret
			}
			else if(DETECT_SENSE==CHANGE)
 1e8:	63 33       	cpi	r22, 0x33	; 51
 1ea:	49 f4       	brne	.+18     	; 0x1fe <INTERRUPT_SENSE_CONTROL+0xea>
			{
				EICRA &= ~(1<<ISC21);
 1ec:	e9 e6       	ldi	r30, 0x69	; 105
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	8f 7d       	andi	r24, 0xDF	; 223
 1f4:	80 83       	st	Z, r24
				EICRA |= (1<<ISC20);
 1f6:	80 81       	ld	r24, Z
 1f8:	80 61       	ori	r24, 0x10	; 16
 1fa:	80 83       	st	Z, r24
 1fc:	08 95       	ret
			}
			else if(DETECT_SENSE==FALLING)
 1fe:	65 33       	cpi	r22, 0x35	; 53
 200:	49 f4       	brne	.+18     	; 0x214 <INTERRUPT_SENSE_CONTROL+0x100>
			{
				EICRA |= (1<<ISC21);
 202:	e9 e6       	ldi	r30, 0x69	; 105
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	80 62       	ori	r24, 0x20	; 32
 20a:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC20);
 20c:	80 81       	ld	r24, Z
 20e:	8f 7e       	andi	r24, 0xEF	; 239
 210:	80 83       	st	Z, r24
 212:	08 95       	ret
			}
			else if(DETECT_SENSE==RISING)
 214:	64 33       	cpi	r22, 0x34	; 52
 216:	41 f4       	brne	.+16     	; 0x228 <INTERRUPT_SENSE_CONTROL+0x114>
			{
				EICRA |= (1<<ISC21);
 218:	e9 e6       	ldi	r30, 0x69	; 105
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	80 62       	ori	r24, 0x20	; 32
 220:	80 83       	st	Z, r24
				EICRA |= (1<<ISC20);
 222:	80 81       	ld	r24, Z
 224:	80 61       	ori	r24, 0x10	; 16
 226:	80 83       	st	Z, r24
 228:	08 95       	ret

0000022a <attachInterrupt>:
//     Atmega8,48,88,168 :
//  					   INT0(LOW,CHANGE,RISING,FALLING)
//  				   	   INT1(LOW,CHANGE,RISING,FALLING)

void attachInterrupt(uint8_t EXTERNAL_INTERRUPT_PIN, void (*received_function_pointer)(), uint8_t INTERRUPT_SENSE)
{	
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	18 2f       	mov	r17, r24
 234:	eb 01       	movw	r28, r22
 236:	04 2f       	mov	r16, r20
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
		|| defined(__AVR_ATmega48__) || defined(__AVR_ATmega48A__) || defined(__AVR_ATmega48P__) || defined(__AVR_ATmega48PA__) || defined(__AVR_ATmega48PB__)\
		|| defined(__AVR_ATmega88__) || defined(__AVR_ATmega88A__) || defined(__AVR_ATmega88P__) || defined(__AVR_ATmega88PA__) || defined(__AVR_ATmega88PB__)\
		|| defined(__AVR_ATmega168__) || defined(__AVR_ATmega168P__) || defined(__AVR_ATmega168A__) || defined(__AVR_ATmega168PA__) || defined(__AVR_ATmega168PB__)\
		|| defined(__AVR_ATmega328__) || defined(__AVR_ATmega328P__)
		sei();// To enable Global interrupt bit I 
 238:	78 94       	sei
		INTERRUPT_SENSE_CONTROL(digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN), INTERRUPT_SENSE);//this function set the interrupt sense mode(LOW,CHAGNE,RISING,FALLING)
 23a:	5b df       	rcall	.-330    	; 0xf2 <digitalPinToInterrupt>
 23c:	60 2f       	mov	r22, r16
 23e:	6a df       	rcall	.-300    	; 0x114 <INTERRUPT_SENSE_CONTROL>
		EIMSK |= (1<<digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN));// External interrupt pin select (INT0,INT1,INT2)//NB: dont take it before INTERRUPT_SENSE_CONTROL() function because when you will use pull down network initally it call ISR() to take main action. 
 240:	0d b3       	in	r16, 0x1d	; 29
 242:	81 2f       	mov	r24, r17
 244:	56 df       	rcall	.-340    	; 0xf2 <digitalPinToInterrupt>
 246:	21 e0       	ldi	r18, 0x01	; 1
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	a9 01       	movw	r20, r18
 24c:	02 c0       	rjmp	.+4      	; 0x252 <attachInterrupt+0x28>
 24e:	44 0f       	add	r20, r20
 250:	55 1f       	adc	r21, r21
 252:	8a 95       	dec	r24
 254:	e2 f7       	brpl	.-8      	; 0x24e <attachInterrupt+0x24>
 256:	ca 01       	movw	r24, r20
 258:	80 2b       	or	r24, r16
 25a:	8d bb       	out	0x1d, r24	; 29
		pointer_of_received_function_pointer=received_function_pointer;//here we send the address of (received_function_pointer) from main file to (address_of_receive_function) which is a void type function pointer [NB: the purpose is to run the received function inside the ISR() ]
 25c:	d0 93 2c 01 	sts	0x012C, r29
 260:	c0 93 2b 01 	sts	0x012B, r28
	#endif
	
}
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	08 95       	ret

0000026e <__vector_1>:
	|| defined(__AVR_ATmega324__) || defined(__AVR_ATmega324A__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__)\
	|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
	|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
	|| defined(__AVR_ATmega8535__)
	ISR(INT0_vect)
	{
 26e:	1f 92       	push	r1
 270:	0f 92       	push	r0
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	0f 92       	push	r0
 276:	11 24       	eor	r1, r1
 278:	0b b6       	in	r0, 0x3b	; 59
 27a:	0f 92       	push	r0
 27c:	2f 93       	push	r18
 27e:	3f 93       	push	r19
 280:	4f 93       	push	r20
 282:	5f 93       	push	r21
 284:	6f 93       	push	r22
 286:	7f 93       	push	r23
 288:	8f 93       	push	r24
 28a:	9f 93       	push	r25
 28c:	af 93       	push	r26
 28e:	bf 93       	push	r27
 290:	ef 93       	push	r30
 292:	ff 93       	push	r31
		pointer_of_received_function_pointer();
 294:	e0 91 2b 01 	lds	r30, 0x012B
 298:	f0 91 2c 01 	lds	r31, 0x012C
 29c:	09 95       	icall
	}
 29e:	ff 91       	pop	r31
 2a0:	ef 91       	pop	r30
 2a2:	bf 91       	pop	r27
 2a4:	af 91       	pop	r26
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	7f 91       	pop	r23
 2ac:	6f 91       	pop	r22
 2ae:	5f 91       	pop	r21
 2b0:	4f 91       	pop	r20
 2b2:	3f 91       	pop	r19
 2b4:	2f 91       	pop	r18
 2b6:	0f 90       	pop	r0
 2b8:	0b be       	out	0x3b, r0	; 59
 2ba:	0f 90       	pop	r0
 2bc:	0f be       	out	0x3f, r0	; 63
 2be:	0f 90       	pop	r0
 2c0:	1f 90       	pop	r1
 2c2:	18 95       	reti

000002c4 <__vector_2>:

	ISR(INT1_vect)
	{
 2c4:	1f 92       	push	r1
 2c6:	0f 92       	push	r0
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	0f 92       	push	r0
 2cc:	11 24       	eor	r1, r1
 2ce:	0b b6       	in	r0, 0x3b	; 59
 2d0:	0f 92       	push	r0
 2d2:	2f 93       	push	r18
 2d4:	3f 93       	push	r19
 2d6:	4f 93       	push	r20
 2d8:	5f 93       	push	r21
 2da:	6f 93       	push	r22
 2dc:	7f 93       	push	r23
 2de:	8f 93       	push	r24
 2e0:	9f 93       	push	r25
 2e2:	af 93       	push	r26
 2e4:	bf 93       	push	r27
 2e6:	ef 93       	push	r30
 2e8:	ff 93       	push	r31
		pointer_of_received_function_pointer();
 2ea:	e0 91 2b 01 	lds	r30, 0x012B
 2ee:	f0 91 2c 01 	lds	r31, 0x012C
 2f2:	09 95       	icall
	}
 2f4:	ff 91       	pop	r31
 2f6:	ef 91       	pop	r30
 2f8:	bf 91       	pop	r27
 2fa:	af 91       	pop	r26
 2fc:	9f 91       	pop	r25
 2fe:	8f 91       	pop	r24
 300:	7f 91       	pop	r23
 302:	6f 91       	pop	r22
 304:	5f 91       	pop	r21
 306:	4f 91       	pop	r20
 308:	3f 91       	pop	r19
 30a:	2f 91       	pop	r18
 30c:	0f 90       	pop	r0
 30e:	0b be       	out	0x3b, r0	; 59
 310:	0f 90       	pop	r0
 312:	0f be       	out	0x3f, r0	; 63
 314:	0f 90       	pop	r0
 316:	1f 90       	pop	r1
 318:	18 95       	reti

0000031a <__vector_3>:

	ISR(INT2_vect)
	{
 31a:	1f 92       	push	r1
 31c:	0f 92       	push	r0
 31e:	0f b6       	in	r0, 0x3f	; 63
 320:	0f 92       	push	r0
 322:	11 24       	eor	r1, r1
 324:	0b b6       	in	r0, 0x3b	; 59
 326:	0f 92       	push	r0
 328:	2f 93       	push	r18
 32a:	3f 93       	push	r19
 32c:	4f 93       	push	r20
 32e:	5f 93       	push	r21
 330:	6f 93       	push	r22
 332:	7f 93       	push	r23
 334:	8f 93       	push	r24
 336:	9f 93       	push	r25
 338:	af 93       	push	r26
 33a:	bf 93       	push	r27
 33c:	ef 93       	push	r30
 33e:	ff 93       	push	r31
		pointer_of_received_function_pointer();
 340:	e0 91 2b 01 	lds	r30, 0x012B
 344:	f0 91 2c 01 	lds	r31, 0x012C
 348:	09 95       	icall
	}
 34a:	ff 91       	pop	r31
 34c:	ef 91       	pop	r30
 34e:	bf 91       	pop	r27
 350:	af 91       	pop	r26
 352:	9f 91       	pop	r25
 354:	8f 91       	pop	r24
 356:	7f 91       	pop	r23
 358:	6f 91       	pop	r22
 35a:	5f 91       	pop	r21
 35c:	4f 91       	pop	r20
 35e:	3f 91       	pop	r19
 360:	2f 91       	pop	r18
 362:	0f 90       	pop	r0
 364:	0b be       	out	0x3b, r0	; 59
 366:	0f 90       	pop	r0
 368:	0f be       	out	0x3f, r0	; 63
 36a:	0f 90       	pop	r0
 36c:	1f 90       	pop	r1
 36e:	18 95       	reti

00000370 <printf>:
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	cd b7       	in	r28, 0x3d	; 61
 376:	de b7       	in	r29, 0x3e	; 62
 378:	fe 01       	movw	r30, r28
 37a:	35 96       	adiw	r30, 0x05	; 5
 37c:	61 91       	ld	r22, Z+
 37e:	71 91       	ld	r23, Z+
 380:	af 01       	movw	r20, r30
 382:	80 91 2f 01 	lds	r24, 0x012F
 386:	90 91 30 01 	lds	r25, 0x0130
 38a:	03 d0       	rcall	.+6      	; 0x392 <vfprintf>
 38c:	df 91       	pop	r29
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <vfprintf>:
 392:	2f 92       	push	r2
 394:	3f 92       	push	r3
 396:	4f 92       	push	r4
 398:	5f 92       	push	r5
 39a:	6f 92       	push	r6
 39c:	7f 92       	push	r7
 39e:	8f 92       	push	r8
 3a0:	9f 92       	push	r9
 3a2:	af 92       	push	r10
 3a4:	bf 92       	push	r11
 3a6:	cf 92       	push	r12
 3a8:	df 92       	push	r13
 3aa:	ef 92       	push	r14
 3ac:	ff 92       	push	r15
 3ae:	0f 93       	push	r16
 3b0:	1f 93       	push	r17
 3b2:	cf 93       	push	r28
 3b4:	df 93       	push	r29
 3b6:	cd b7       	in	r28, 0x3d	; 61
 3b8:	de b7       	in	r29, 0x3e	; 62
 3ba:	2c 97       	sbiw	r28, 0x0c	; 12
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	cd bf       	out	0x3d, r28	; 61
 3c6:	7c 01       	movw	r14, r24
 3c8:	6b 01       	movw	r12, r22
 3ca:	8a 01       	movw	r16, r20
 3cc:	fc 01       	movw	r30, r24
 3ce:	17 82       	std	Z+7, r1	; 0x07
 3d0:	16 82       	std	Z+6, r1	; 0x06
 3d2:	83 81       	ldd	r24, Z+3	; 0x03
 3d4:	81 ff       	sbrs	r24, 1
 3d6:	b0 c1       	rjmp	.+864    	; 0x738 <vfprintf+0x3a6>
 3d8:	ce 01       	movw	r24, r28
 3da:	01 96       	adiw	r24, 0x01	; 1
 3dc:	4c 01       	movw	r8, r24
 3de:	f7 01       	movw	r30, r14
 3e0:	93 81       	ldd	r25, Z+3	; 0x03
 3e2:	f6 01       	movw	r30, r12
 3e4:	93 fd       	sbrc	r25, 3
 3e6:	85 91       	lpm	r24, Z+
 3e8:	93 ff       	sbrs	r25, 3
 3ea:	81 91       	ld	r24, Z+
 3ec:	6f 01       	movw	r12, r30
 3ee:	88 23       	and	r24, r24
 3f0:	09 f4       	brne	.+2      	; 0x3f4 <vfprintf+0x62>
 3f2:	9e c1       	rjmp	.+828    	; 0x730 <vfprintf+0x39e>
 3f4:	85 32       	cpi	r24, 0x25	; 37
 3f6:	39 f4       	brne	.+14     	; 0x406 <vfprintf+0x74>
 3f8:	93 fd       	sbrc	r25, 3
 3fa:	85 91       	lpm	r24, Z+
 3fc:	93 ff       	sbrs	r25, 3
 3fe:	81 91       	ld	r24, Z+
 400:	6f 01       	movw	r12, r30
 402:	85 32       	cpi	r24, 0x25	; 37
 404:	21 f4       	brne	.+8      	; 0x40e <vfprintf+0x7c>
 406:	b7 01       	movw	r22, r14
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	c7 d1       	rcall	.+910    	; 0x79a <fputc>
 40c:	e8 cf       	rjmp	.-48     	; 0x3de <vfprintf+0x4c>
 40e:	51 2c       	mov	r5, r1
 410:	31 2c       	mov	r3, r1
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	20 32       	cpi	r18, 0x20	; 32
 416:	a0 f4       	brcc	.+40     	; 0x440 <vfprintf+0xae>
 418:	8b 32       	cpi	r24, 0x2B	; 43
 41a:	69 f0       	breq	.+26     	; 0x436 <vfprintf+0xa4>
 41c:	30 f4       	brcc	.+12     	; 0x42a <vfprintf+0x98>
 41e:	80 32       	cpi	r24, 0x20	; 32
 420:	59 f0       	breq	.+22     	; 0x438 <vfprintf+0xa6>
 422:	83 32       	cpi	r24, 0x23	; 35
 424:	69 f4       	brne	.+26     	; 0x440 <vfprintf+0xae>
 426:	20 61       	ori	r18, 0x10	; 16
 428:	2c c0       	rjmp	.+88     	; 0x482 <vfprintf+0xf0>
 42a:	8d 32       	cpi	r24, 0x2D	; 45
 42c:	39 f0       	breq	.+14     	; 0x43c <vfprintf+0xaa>
 42e:	80 33       	cpi	r24, 0x30	; 48
 430:	39 f4       	brne	.+14     	; 0x440 <vfprintf+0xae>
 432:	21 60       	ori	r18, 0x01	; 1
 434:	26 c0       	rjmp	.+76     	; 0x482 <vfprintf+0xf0>
 436:	22 60       	ori	r18, 0x02	; 2
 438:	24 60       	ori	r18, 0x04	; 4
 43a:	23 c0       	rjmp	.+70     	; 0x482 <vfprintf+0xf0>
 43c:	28 60       	ori	r18, 0x08	; 8
 43e:	21 c0       	rjmp	.+66     	; 0x482 <vfprintf+0xf0>
 440:	27 fd       	sbrc	r18, 7
 442:	27 c0       	rjmp	.+78     	; 0x492 <vfprintf+0x100>
 444:	30 ed       	ldi	r19, 0xD0	; 208
 446:	38 0f       	add	r19, r24
 448:	3a 30       	cpi	r19, 0x0A	; 10
 44a:	78 f4       	brcc	.+30     	; 0x46a <vfprintf+0xd8>
 44c:	26 ff       	sbrs	r18, 6
 44e:	06 c0       	rjmp	.+12     	; 0x45c <vfprintf+0xca>
 450:	fa e0       	ldi	r31, 0x0A	; 10
 452:	5f 9e       	mul	r5, r31
 454:	30 0d       	add	r19, r0
 456:	11 24       	eor	r1, r1
 458:	53 2e       	mov	r5, r19
 45a:	13 c0       	rjmp	.+38     	; 0x482 <vfprintf+0xf0>
 45c:	8a e0       	ldi	r24, 0x0A	; 10
 45e:	38 9e       	mul	r3, r24
 460:	30 0d       	add	r19, r0
 462:	11 24       	eor	r1, r1
 464:	33 2e       	mov	r3, r19
 466:	20 62       	ori	r18, 0x20	; 32
 468:	0c c0       	rjmp	.+24     	; 0x482 <vfprintf+0xf0>
 46a:	8e 32       	cpi	r24, 0x2E	; 46
 46c:	21 f4       	brne	.+8      	; 0x476 <vfprintf+0xe4>
 46e:	26 fd       	sbrc	r18, 6
 470:	5f c1       	rjmp	.+702    	; 0x730 <vfprintf+0x39e>
 472:	20 64       	ori	r18, 0x40	; 64
 474:	06 c0       	rjmp	.+12     	; 0x482 <vfprintf+0xf0>
 476:	8c 36       	cpi	r24, 0x6C	; 108
 478:	11 f4       	brne	.+4      	; 0x47e <vfprintf+0xec>
 47a:	20 68       	ori	r18, 0x80	; 128
 47c:	02 c0       	rjmp	.+4      	; 0x482 <vfprintf+0xf0>
 47e:	88 36       	cpi	r24, 0x68	; 104
 480:	41 f4       	brne	.+16     	; 0x492 <vfprintf+0x100>
 482:	f6 01       	movw	r30, r12
 484:	93 fd       	sbrc	r25, 3
 486:	85 91       	lpm	r24, Z+
 488:	93 ff       	sbrs	r25, 3
 48a:	81 91       	ld	r24, Z+
 48c:	6f 01       	movw	r12, r30
 48e:	81 11       	cpse	r24, r1
 490:	c1 cf       	rjmp	.-126    	; 0x414 <vfprintf+0x82>
 492:	98 2f       	mov	r25, r24
 494:	9f 7d       	andi	r25, 0xDF	; 223
 496:	95 54       	subi	r25, 0x45	; 69
 498:	93 30       	cpi	r25, 0x03	; 3
 49a:	28 f4       	brcc	.+10     	; 0x4a6 <vfprintf+0x114>
 49c:	0c 5f       	subi	r16, 0xFC	; 252
 49e:	1f 4f       	sbci	r17, 0xFF	; 255
 4a0:	ff e3       	ldi	r31, 0x3F	; 63
 4a2:	f9 83       	std	Y+1, r31	; 0x01
 4a4:	0d c0       	rjmp	.+26     	; 0x4c0 <vfprintf+0x12e>
 4a6:	83 36       	cpi	r24, 0x63	; 99
 4a8:	31 f0       	breq	.+12     	; 0x4b6 <vfprintf+0x124>
 4aa:	83 37       	cpi	r24, 0x73	; 115
 4ac:	71 f0       	breq	.+28     	; 0x4ca <vfprintf+0x138>
 4ae:	83 35       	cpi	r24, 0x53	; 83
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <vfprintf+0x122>
 4b2:	57 c0       	rjmp	.+174    	; 0x562 <vfprintf+0x1d0>
 4b4:	21 c0       	rjmp	.+66     	; 0x4f8 <vfprintf+0x166>
 4b6:	f8 01       	movw	r30, r16
 4b8:	80 81       	ld	r24, Z
 4ba:	89 83       	std	Y+1, r24	; 0x01
 4bc:	0e 5f       	subi	r16, 0xFE	; 254
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	44 24       	eor	r4, r4
 4c2:	43 94       	inc	r4
 4c4:	51 2c       	mov	r5, r1
 4c6:	54 01       	movw	r10, r8
 4c8:	14 c0       	rjmp	.+40     	; 0x4f2 <vfprintf+0x160>
 4ca:	38 01       	movw	r6, r16
 4cc:	f2 e0       	ldi	r31, 0x02	; 2
 4ce:	6f 0e       	add	r6, r31
 4d0:	71 1c       	adc	r7, r1
 4d2:	f8 01       	movw	r30, r16
 4d4:	a0 80       	ld	r10, Z
 4d6:	b1 80       	ldd	r11, Z+1	; 0x01
 4d8:	26 ff       	sbrs	r18, 6
 4da:	03 c0       	rjmp	.+6      	; 0x4e2 <vfprintf+0x150>
 4dc:	65 2d       	mov	r22, r5
 4de:	70 e0       	ldi	r23, 0x00	; 0
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <vfprintf+0x154>
 4e2:	6f ef       	ldi	r22, 0xFF	; 255
 4e4:	7f ef       	ldi	r23, 0xFF	; 255
 4e6:	c5 01       	movw	r24, r10
 4e8:	2c 87       	std	Y+12, r18	; 0x0c
 4ea:	4c d1       	rcall	.+664    	; 0x784 <strnlen>
 4ec:	2c 01       	movw	r4, r24
 4ee:	83 01       	movw	r16, r6
 4f0:	2c 85       	ldd	r18, Y+12	; 0x0c
 4f2:	2f 77       	andi	r18, 0x7F	; 127
 4f4:	22 2e       	mov	r2, r18
 4f6:	16 c0       	rjmp	.+44     	; 0x524 <vfprintf+0x192>
 4f8:	38 01       	movw	r6, r16
 4fa:	f2 e0       	ldi	r31, 0x02	; 2
 4fc:	6f 0e       	add	r6, r31
 4fe:	71 1c       	adc	r7, r1
 500:	f8 01       	movw	r30, r16
 502:	a0 80       	ld	r10, Z
 504:	b1 80       	ldd	r11, Z+1	; 0x01
 506:	26 ff       	sbrs	r18, 6
 508:	03 c0       	rjmp	.+6      	; 0x510 <vfprintf+0x17e>
 50a:	65 2d       	mov	r22, r5
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	02 c0       	rjmp	.+4      	; 0x514 <vfprintf+0x182>
 510:	6f ef       	ldi	r22, 0xFF	; 255
 512:	7f ef       	ldi	r23, 0xFF	; 255
 514:	c5 01       	movw	r24, r10
 516:	2c 87       	std	Y+12, r18	; 0x0c
 518:	2a d1       	rcall	.+596    	; 0x76e <strnlen_P>
 51a:	2c 01       	movw	r4, r24
 51c:	2c 85       	ldd	r18, Y+12	; 0x0c
 51e:	20 68       	ori	r18, 0x80	; 128
 520:	22 2e       	mov	r2, r18
 522:	83 01       	movw	r16, r6
 524:	23 fc       	sbrc	r2, 3
 526:	19 c0       	rjmp	.+50     	; 0x55a <vfprintf+0x1c8>
 528:	83 2d       	mov	r24, r3
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	48 16       	cp	r4, r24
 52e:	59 06       	cpc	r5, r25
 530:	a0 f4       	brcc	.+40     	; 0x55a <vfprintf+0x1c8>
 532:	b7 01       	movw	r22, r14
 534:	80 e2       	ldi	r24, 0x20	; 32
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	30 d1       	rcall	.+608    	; 0x79a <fputc>
 53a:	3a 94       	dec	r3
 53c:	f5 cf       	rjmp	.-22     	; 0x528 <vfprintf+0x196>
 53e:	f5 01       	movw	r30, r10
 540:	27 fc       	sbrc	r2, 7
 542:	85 91       	lpm	r24, Z+
 544:	27 fe       	sbrs	r2, 7
 546:	81 91       	ld	r24, Z+
 548:	5f 01       	movw	r10, r30
 54a:	b7 01       	movw	r22, r14
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	25 d1       	rcall	.+586    	; 0x79a <fputc>
 550:	31 10       	cpse	r3, r1
 552:	3a 94       	dec	r3
 554:	f1 e0       	ldi	r31, 0x01	; 1
 556:	4f 1a       	sub	r4, r31
 558:	51 08       	sbc	r5, r1
 55a:	41 14       	cp	r4, r1
 55c:	51 04       	cpc	r5, r1
 55e:	79 f7       	brne	.-34     	; 0x53e <vfprintf+0x1ac>
 560:	de c0       	rjmp	.+444    	; 0x71e <vfprintf+0x38c>
 562:	84 36       	cpi	r24, 0x64	; 100
 564:	11 f0       	breq	.+4      	; 0x56a <vfprintf+0x1d8>
 566:	89 36       	cpi	r24, 0x69	; 105
 568:	31 f5       	brne	.+76     	; 0x5b6 <vfprintf+0x224>
 56a:	f8 01       	movw	r30, r16
 56c:	27 ff       	sbrs	r18, 7
 56e:	07 c0       	rjmp	.+14     	; 0x57e <vfprintf+0x1ec>
 570:	60 81       	ld	r22, Z
 572:	71 81       	ldd	r23, Z+1	; 0x01
 574:	82 81       	ldd	r24, Z+2	; 0x02
 576:	93 81       	ldd	r25, Z+3	; 0x03
 578:	0c 5f       	subi	r16, 0xFC	; 252
 57a:	1f 4f       	sbci	r17, 0xFF	; 255
 57c:	08 c0       	rjmp	.+16     	; 0x58e <vfprintf+0x1fc>
 57e:	60 81       	ld	r22, Z
 580:	71 81       	ldd	r23, Z+1	; 0x01
 582:	88 27       	eor	r24, r24
 584:	77 fd       	sbrc	r23, 7
 586:	80 95       	com	r24
 588:	98 2f       	mov	r25, r24
 58a:	0e 5f       	subi	r16, 0xFE	; 254
 58c:	1f 4f       	sbci	r17, 0xFF	; 255
 58e:	2f 76       	andi	r18, 0x6F	; 111
 590:	b2 2e       	mov	r11, r18
 592:	97 ff       	sbrs	r25, 7
 594:	09 c0       	rjmp	.+18     	; 0x5a8 <vfprintf+0x216>
 596:	90 95       	com	r25
 598:	80 95       	com	r24
 59a:	70 95       	com	r23
 59c:	61 95       	neg	r22
 59e:	7f 4f       	sbci	r23, 0xFF	; 255
 5a0:	8f 4f       	sbci	r24, 0xFF	; 255
 5a2:	9f 4f       	sbci	r25, 0xFF	; 255
 5a4:	20 68       	ori	r18, 0x80	; 128
 5a6:	b2 2e       	mov	r11, r18
 5a8:	2a e0       	ldi	r18, 0x0A	; 10
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	a4 01       	movw	r20, r8
 5ae:	27 d1       	rcall	.+590    	; 0x7fe <__ultoa_invert>
 5b0:	a8 2e       	mov	r10, r24
 5b2:	a8 18       	sub	r10, r8
 5b4:	43 c0       	rjmp	.+134    	; 0x63c <vfprintf+0x2aa>
 5b6:	85 37       	cpi	r24, 0x75	; 117
 5b8:	29 f4       	brne	.+10     	; 0x5c4 <vfprintf+0x232>
 5ba:	2f 7e       	andi	r18, 0xEF	; 239
 5bc:	b2 2e       	mov	r11, r18
 5be:	2a e0       	ldi	r18, 0x0A	; 10
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	25 c0       	rjmp	.+74     	; 0x60e <vfprintf+0x27c>
 5c4:	f2 2f       	mov	r31, r18
 5c6:	f9 7f       	andi	r31, 0xF9	; 249
 5c8:	bf 2e       	mov	r11, r31
 5ca:	8f 36       	cpi	r24, 0x6F	; 111
 5cc:	c1 f0       	breq	.+48     	; 0x5fe <vfprintf+0x26c>
 5ce:	18 f4       	brcc	.+6      	; 0x5d6 <vfprintf+0x244>
 5d0:	88 35       	cpi	r24, 0x58	; 88
 5d2:	79 f0       	breq	.+30     	; 0x5f2 <vfprintf+0x260>
 5d4:	ad c0       	rjmp	.+346    	; 0x730 <vfprintf+0x39e>
 5d6:	80 37       	cpi	r24, 0x70	; 112
 5d8:	19 f0       	breq	.+6      	; 0x5e0 <vfprintf+0x24e>
 5da:	88 37       	cpi	r24, 0x78	; 120
 5dc:	21 f0       	breq	.+8      	; 0x5e6 <vfprintf+0x254>
 5de:	a8 c0       	rjmp	.+336    	; 0x730 <vfprintf+0x39e>
 5e0:	2f 2f       	mov	r18, r31
 5e2:	20 61       	ori	r18, 0x10	; 16
 5e4:	b2 2e       	mov	r11, r18
 5e6:	b4 fe       	sbrs	r11, 4
 5e8:	0d c0       	rjmp	.+26     	; 0x604 <vfprintf+0x272>
 5ea:	8b 2d       	mov	r24, r11
 5ec:	84 60       	ori	r24, 0x04	; 4
 5ee:	b8 2e       	mov	r11, r24
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <vfprintf+0x272>
 5f2:	24 ff       	sbrs	r18, 4
 5f4:	0a c0       	rjmp	.+20     	; 0x60a <vfprintf+0x278>
 5f6:	9f 2f       	mov	r25, r31
 5f8:	96 60       	ori	r25, 0x06	; 6
 5fa:	b9 2e       	mov	r11, r25
 5fc:	06 c0       	rjmp	.+12     	; 0x60a <vfprintf+0x278>
 5fe:	28 e0       	ldi	r18, 0x08	; 8
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	05 c0       	rjmp	.+10     	; 0x60e <vfprintf+0x27c>
 604:	20 e1       	ldi	r18, 0x10	; 16
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	02 c0       	rjmp	.+4      	; 0x60e <vfprintf+0x27c>
 60a:	20 e1       	ldi	r18, 0x10	; 16
 60c:	32 e0       	ldi	r19, 0x02	; 2
 60e:	f8 01       	movw	r30, r16
 610:	b7 fe       	sbrs	r11, 7
 612:	07 c0       	rjmp	.+14     	; 0x622 <vfprintf+0x290>
 614:	60 81       	ld	r22, Z
 616:	71 81       	ldd	r23, Z+1	; 0x01
 618:	82 81       	ldd	r24, Z+2	; 0x02
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	0c 5f       	subi	r16, 0xFC	; 252
 61e:	1f 4f       	sbci	r17, 0xFF	; 255
 620:	06 c0       	rjmp	.+12     	; 0x62e <vfprintf+0x29c>
 622:	60 81       	ld	r22, Z
 624:	71 81       	ldd	r23, Z+1	; 0x01
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 5f       	subi	r16, 0xFE	; 254
 62c:	1f 4f       	sbci	r17, 0xFF	; 255
 62e:	a4 01       	movw	r20, r8
 630:	e6 d0       	rcall	.+460    	; 0x7fe <__ultoa_invert>
 632:	a8 2e       	mov	r10, r24
 634:	a8 18       	sub	r10, r8
 636:	fb 2d       	mov	r31, r11
 638:	ff 77       	andi	r31, 0x7F	; 127
 63a:	bf 2e       	mov	r11, r31
 63c:	b6 fe       	sbrs	r11, 6
 63e:	0b c0       	rjmp	.+22     	; 0x656 <vfprintf+0x2c4>
 640:	2b 2d       	mov	r18, r11
 642:	2e 7f       	andi	r18, 0xFE	; 254
 644:	a5 14       	cp	r10, r5
 646:	50 f4       	brcc	.+20     	; 0x65c <vfprintf+0x2ca>
 648:	b4 fe       	sbrs	r11, 4
 64a:	0a c0       	rjmp	.+20     	; 0x660 <vfprintf+0x2ce>
 64c:	b2 fc       	sbrc	r11, 2
 64e:	08 c0       	rjmp	.+16     	; 0x660 <vfprintf+0x2ce>
 650:	2b 2d       	mov	r18, r11
 652:	2e 7e       	andi	r18, 0xEE	; 238
 654:	05 c0       	rjmp	.+10     	; 0x660 <vfprintf+0x2ce>
 656:	7a 2c       	mov	r7, r10
 658:	2b 2d       	mov	r18, r11
 65a:	03 c0       	rjmp	.+6      	; 0x662 <vfprintf+0x2d0>
 65c:	7a 2c       	mov	r7, r10
 65e:	01 c0       	rjmp	.+2      	; 0x662 <vfprintf+0x2d0>
 660:	75 2c       	mov	r7, r5
 662:	24 ff       	sbrs	r18, 4
 664:	0d c0       	rjmp	.+26     	; 0x680 <vfprintf+0x2ee>
 666:	fe 01       	movw	r30, r28
 668:	ea 0d       	add	r30, r10
 66a:	f1 1d       	adc	r31, r1
 66c:	80 81       	ld	r24, Z
 66e:	80 33       	cpi	r24, 0x30	; 48
 670:	11 f4       	brne	.+4      	; 0x676 <vfprintf+0x2e4>
 672:	29 7e       	andi	r18, 0xE9	; 233
 674:	09 c0       	rjmp	.+18     	; 0x688 <vfprintf+0x2f6>
 676:	22 ff       	sbrs	r18, 2
 678:	06 c0       	rjmp	.+12     	; 0x686 <vfprintf+0x2f4>
 67a:	73 94       	inc	r7
 67c:	73 94       	inc	r7
 67e:	04 c0       	rjmp	.+8      	; 0x688 <vfprintf+0x2f6>
 680:	82 2f       	mov	r24, r18
 682:	86 78       	andi	r24, 0x86	; 134
 684:	09 f0       	breq	.+2      	; 0x688 <vfprintf+0x2f6>
 686:	73 94       	inc	r7
 688:	23 fd       	sbrc	r18, 3
 68a:	12 c0       	rjmp	.+36     	; 0x6b0 <vfprintf+0x31e>
 68c:	20 ff       	sbrs	r18, 0
 68e:	06 c0       	rjmp	.+12     	; 0x69c <vfprintf+0x30a>
 690:	5a 2c       	mov	r5, r10
 692:	73 14       	cp	r7, r3
 694:	18 f4       	brcc	.+6      	; 0x69c <vfprintf+0x30a>
 696:	53 0c       	add	r5, r3
 698:	57 18       	sub	r5, r7
 69a:	73 2c       	mov	r7, r3
 69c:	73 14       	cp	r7, r3
 69e:	60 f4       	brcc	.+24     	; 0x6b8 <vfprintf+0x326>
 6a0:	b7 01       	movw	r22, r14
 6a2:	80 e2       	ldi	r24, 0x20	; 32
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	2c 87       	std	Y+12, r18	; 0x0c
 6a8:	78 d0       	rcall	.+240    	; 0x79a <fputc>
 6aa:	73 94       	inc	r7
 6ac:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ae:	f6 cf       	rjmp	.-20     	; 0x69c <vfprintf+0x30a>
 6b0:	73 14       	cp	r7, r3
 6b2:	10 f4       	brcc	.+4      	; 0x6b8 <vfprintf+0x326>
 6b4:	37 18       	sub	r3, r7
 6b6:	01 c0       	rjmp	.+2      	; 0x6ba <vfprintf+0x328>
 6b8:	31 2c       	mov	r3, r1
 6ba:	24 ff       	sbrs	r18, 4
 6bc:	11 c0       	rjmp	.+34     	; 0x6e0 <vfprintf+0x34e>
 6be:	b7 01       	movw	r22, r14
 6c0:	80 e3       	ldi	r24, 0x30	; 48
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	2c 87       	std	Y+12, r18	; 0x0c
 6c6:	69 d0       	rcall	.+210    	; 0x79a <fputc>
 6c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ca:	22 ff       	sbrs	r18, 2
 6cc:	16 c0       	rjmp	.+44     	; 0x6fa <vfprintf+0x368>
 6ce:	21 ff       	sbrs	r18, 1
 6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <vfprintf+0x346>
 6d2:	88 e5       	ldi	r24, 0x58	; 88
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <vfprintf+0x34a>
 6d8:	88 e7       	ldi	r24, 0x78	; 120
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	b7 01       	movw	r22, r14
 6de:	0c c0       	rjmp	.+24     	; 0x6f8 <vfprintf+0x366>
 6e0:	82 2f       	mov	r24, r18
 6e2:	86 78       	andi	r24, 0x86	; 134
 6e4:	51 f0       	breq	.+20     	; 0x6fa <vfprintf+0x368>
 6e6:	21 fd       	sbrc	r18, 1
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <vfprintf+0x35c>
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	01 c0       	rjmp	.+2      	; 0x6f0 <vfprintf+0x35e>
 6ee:	8b e2       	ldi	r24, 0x2B	; 43
 6f0:	27 fd       	sbrc	r18, 7
 6f2:	8d e2       	ldi	r24, 0x2D	; 45
 6f4:	b7 01       	movw	r22, r14
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	50 d0       	rcall	.+160    	; 0x79a <fputc>
 6fa:	a5 14       	cp	r10, r5
 6fc:	30 f4       	brcc	.+12     	; 0x70a <vfprintf+0x378>
 6fe:	b7 01       	movw	r22, r14
 700:	80 e3       	ldi	r24, 0x30	; 48
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	4a d0       	rcall	.+148    	; 0x79a <fputc>
 706:	5a 94       	dec	r5
 708:	f8 cf       	rjmp	.-16     	; 0x6fa <vfprintf+0x368>
 70a:	aa 94       	dec	r10
 70c:	f4 01       	movw	r30, r8
 70e:	ea 0d       	add	r30, r10
 710:	f1 1d       	adc	r31, r1
 712:	80 81       	ld	r24, Z
 714:	b7 01       	movw	r22, r14
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	40 d0       	rcall	.+128    	; 0x79a <fputc>
 71a:	a1 10       	cpse	r10, r1
 71c:	f6 cf       	rjmp	.-20     	; 0x70a <vfprintf+0x378>
 71e:	33 20       	and	r3, r3
 720:	09 f4       	brne	.+2      	; 0x724 <vfprintf+0x392>
 722:	5d ce       	rjmp	.-838    	; 0x3de <vfprintf+0x4c>
 724:	b7 01       	movw	r22, r14
 726:	80 e2       	ldi	r24, 0x20	; 32
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	37 d0       	rcall	.+110    	; 0x79a <fputc>
 72c:	3a 94       	dec	r3
 72e:	f7 cf       	rjmp	.-18     	; 0x71e <vfprintf+0x38c>
 730:	f7 01       	movw	r30, r14
 732:	86 81       	ldd	r24, Z+6	; 0x06
 734:	97 81       	ldd	r25, Z+7	; 0x07
 736:	02 c0       	rjmp	.+4      	; 0x73c <vfprintf+0x3aa>
 738:	8f ef       	ldi	r24, 0xFF	; 255
 73a:	9f ef       	ldi	r25, 0xFF	; 255
 73c:	2c 96       	adiw	r28, 0x0c	; 12
 73e:	0f b6       	in	r0, 0x3f	; 63
 740:	f8 94       	cli
 742:	de bf       	out	0x3e, r29	; 62
 744:	0f be       	out	0x3f, r0	; 63
 746:	cd bf       	out	0x3d, r28	; 61
 748:	df 91       	pop	r29
 74a:	cf 91       	pop	r28
 74c:	1f 91       	pop	r17
 74e:	0f 91       	pop	r16
 750:	ff 90       	pop	r15
 752:	ef 90       	pop	r14
 754:	df 90       	pop	r13
 756:	cf 90       	pop	r12
 758:	bf 90       	pop	r11
 75a:	af 90       	pop	r10
 75c:	9f 90       	pop	r9
 75e:	8f 90       	pop	r8
 760:	7f 90       	pop	r7
 762:	6f 90       	pop	r6
 764:	5f 90       	pop	r5
 766:	4f 90       	pop	r4
 768:	3f 90       	pop	r3
 76a:	2f 90       	pop	r2
 76c:	08 95       	ret

0000076e <strnlen_P>:
 76e:	fc 01       	movw	r30, r24
 770:	05 90       	lpm	r0, Z+
 772:	61 50       	subi	r22, 0x01	; 1
 774:	70 40       	sbci	r23, 0x00	; 0
 776:	01 10       	cpse	r0, r1
 778:	d8 f7       	brcc	.-10     	; 0x770 <strnlen_P+0x2>
 77a:	80 95       	com	r24
 77c:	90 95       	com	r25
 77e:	8e 0f       	add	r24, r30
 780:	9f 1f       	adc	r25, r31
 782:	08 95       	ret

00000784 <strnlen>:
 784:	fc 01       	movw	r30, r24
 786:	61 50       	subi	r22, 0x01	; 1
 788:	70 40       	sbci	r23, 0x00	; 0
 78a:	01 90       	ld	r0, Z+
 78c:	01 10       	cpse	r0, r1
 78e:	d8 f7       	brcc	.-10     	; 0x786 <strnlen+0x2>
 790:	80 95       	com	r24
 792:	90 95       	com	r25
 794:	8e 0f       	add	r24, r30
 796:	9f 1f       	adc	r25, r31
 798:	08 95       	ret

0000079a <fputc>:
 79a:	0f 93       	push	r16
 79c:	1f 93       	push	r17
 79e:	cf 93       	push	r28
 7a0:	df 93       	push	r29
 7a2:	18 2f       	mov	r17, r24
 7a4:	09 2f       	mov	r16, r25
 7a6:	eb 01       	movw	r28, r22
 7a8:	8b 81       	ldd	r24, Y+3	; 0x03
 7aa:	81 fd       	sbrc	r24, 1
 7ac:	03 c0       	rjmp	.+6      	; 0x7b4 <fputc+0x1a>
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	9f ef       	ldi	r25, 0xFF	; 255
 7b2:	20 c0       	rjmp	.+64     	; 0x7f4 <fputc+0x5a>
 7b4:	82 ff       	sbrs	r24, 2
 7b6:	10 c0       	rjmp	.+32     	; 0x7d8 <fputc+0x3e>
 7b8:	4e 81       	ldd	r20, Y+6	; 0x06
 7ba:	5f 81       	ldd	r21, Y+7	; 0x07
 7bc:	2c 81       	ldd	r18, Y+4	; 0x04
 7be:	3d 81       	ldd	r19, Y+5	; 0x05
 7c0:	42 17       	cp	r20, r18
 7c2:	53 07       	cpc	r21, r19
 7c4:	7c f4       	brge	.+30     	; 0x7e4 <fputc+0x4a>
 7c6:	e8 81       	ld	r30, Y
 7c8:	f9 81       	ldd	r31, Y+1	; 0x01
 7ca:	9f 01       	movw	r18, r30
 7cc:	2f 5f       	subi	r18, 0xFF	; 255
 7ce:	3f 4f       	sbci	r19, 0xFF	; 255
 7d0:	39 83       	std	Y+1, r19	; 0x01
 7d2:	28 83       	st	Y, r18
 7d4:	10 83       	st	Z, r17
 7d6:	06 c0       	rjmp	.+12     	; 0x7e4 <fputc+0x4a>
 7d8:	e8 85       	ldd	r30, Y+8	; 0x08
 7da:	f9 85       	ldd	r31, Y+9	; 0x09
 7dc:	81 2f       	mov	r24, r17
 7de:	09 95       	icall
 7e0:	89 2b       	or	r24, r25
 7e2:	29 f7       	brne	.-54     	; 0x7ae <fputc+0x14>
 7e4:	2e 81       	ldd	r18, Y+6	; 0x06
 7e6:	3f 81       	ldd	r19, Y+7	; 0x07
 7e8:	2f 5f       	subi	r18, 0xFF	; 255
 7ea:	3f 4f       	sbci	r19, 0xFF	; 255
 7ec:	3f 83       	std	Y+7, r19	; 0x07
 7ee:	2e 83       	std	Y+6, r18	; 0x06
 7f0:	81 2f       	mov	r24, r17
 7f2:	90 2f       	mov	r25, r16
 7f4:	df 91       	pop	r29
 7f6:	cf 91       	pop	r28
 7f8:	1f 91       	pop	r17
 7fa:	0f 91       	pop	r16
 7fc:	08 95       	ret

000007fe <__ultoa_invert>:
 7fe:	fa 01       	movw	r30, r20
 800:	aa 27       	eor	r26, r26
 802:	28 30       	cpi	r18, 0x08	; 8
 804:	51 f1       	breq	.+84     	; 0x85a <__ultoa_invert+0x5c>
 806:	20 31       	cpi	r18, 0x10	; 16
 808:	81 f1       	breq	.+96     	; 0x86a <__ultoa_invert+0x6c>
 80a:	e8 94       	clt
 80c:	6f 93       	push	r22
 80e:	6e 7f       	andi	r22, 0xFE	; 254
 810:	6e 5f       	subi	r22, 0xFE	; 254
 812:	7f 4f       	sbci	r23, 0xFF	; 255
 814:	8f 4f       	sbci	r24, 0xFF	; 255
 816:	9f 4f       	sbci	r25, 0xFF	; 255
 818:	af 4f       	sbci	r26, 0xFF	; 255
 81a:	b1 e0       	ldi	r27, 0x01	; 1
 81c:	3e d0       	rcall	.+124    	; 0x89a <__ultoa_invert+0x9c>
 81e:	b4 e0       	ldi	r27, 0x04	; 4
 820:	3c d0       	rcall	.+120    	; 0x89a <__ultoa_invert+0x9c>
 822:	67 0f       	add	r22, r23
 824:	78 1f       	adc	r23, r24
 826:	89 1f       	adc	r24, r25
 828:	9a 1f       	adc	r25, r26
 82a:	a1 1d       	adc	r26, r1
 82c:	68 0f       	add	r22, r24
 82e:	79 1f       	adc	r23, r25
 830:	8a 1f       	adc	r24, r26
 832:	91 1d       	adc	r25, r1
 834:	a1 1d       	adc	r26, r1
 836:	6a 0f       	add	r22, r26
 838:	71 1d       	adc	r23, r1
 83a:	81 1d       	adc	r24, r1
 83c:	91 1d       	adc	r25, r1
 83e:	a1 1d       	adc	r26, r1
 840:	20 d0       	rcall	.+64     	; 0x882 <__ultoa_invert+0x84>
 842:	09 f4       	brne	.+2      	; 0x846 <__ultoa_invert+0x48>
 844:	68 94       	set
 846:	3f 91       	pop	r19
 848:	2a e0       	ldi	r18, 0x0A	; 10
 84a:	26 9f       	mul	r18, r22
 84c:	11 24       	eor	r1, r1
 84e:	30 19       	sub	r19, r0
 850:	30 5d       	subi	r19, 0xD0	; 208
 852:	31 93       	st	Z+, r19
 854:	de f6       	brtc	.-74     	; 0x80c <__ultoa_invert+0xe>
 856:	cf 01       	movw	r24, r30
 858:	08 95       	ret
 85a:	46 2f       	mov	r20, r22
 85c:	47 70       	andi	r20, 0x07	; 7
 85e:	40 5d       	subi	r20, 0xD0	; 208
 860:	41 93       	st	Z+, r20
 862:	b3 e0       	ldi	r27, 0x03	; 3
 864:	0f d0       	rcall	.+30     	; 0x884 <__ultoa_invert+0x86>
 866:	c9 f7       	brne	.-14     	; 0x85a <__ultoa_invert+0x5c>
 868:	f6 cf       	rjmp	.-20     	; 0x856 <__ultoa_invert+0x58>
 86a:	46 2f       	mov	r20, r22
 86c:	4f 70       	andi	r20, 0x0F	; 15
 86e:	40 5d       	subi	r20, 0xD0	; 208
 870:	4a 33       	cpi	r20, 0x3A	; 58
 872:	18 f0       	brcs	.+6      	; 0x87a <__ultoa_invert+0x7c>
 874:	49 5d       	subi	r20, 0xD9	; 217
 876:	31 fd       	sbrc	r19, 1
 878:	40 52       	subi	r20, 0x20	; 32
 87a:	41 93       	st	Z+, r20
 87c:	02 d0       	rcall	.+4      	; 0x882 <__ultoa_invert+0x84>
 87e:	a9 f7       	brne	.-22     	; 0x86a <__ultoa_invert+0x6c>
 880:	ea cf       	rjmp	.-44     	; 0x856 <__ultoa_invert+0x58>
 882:	b4 e0       	ldi	r27, 0x04	; 4
 884:	a6 95       	lsr	r26
 886:	97 95       	ror	r25
 888:	87 95       	ror	r24
 88a:	77 95       	ror	r23
 88c:	67 95       	ror	r22
 88e:	ba 95       	dec	r27
 890:	c9 f7       	brne	.-14     	; 0x884 <__ultoa_invert+0x86>
 892:	00 97       	sbiw	r24, 0x00	; 0
 894:	61 05       	cpc	r22, r1
 896:	71 05       	cpc	r23, r1
 898:	08 95       	ret
 89a:	9b 01       	movw	r18, r22
 89c:	ac 01       	movw	r20, r24
 89e:	0a 2e       	mov	r0, r26
 8a0:	06 94       	lsr	r0
 8a2:	57 95       	ror	r21
 8a4:	47 95       	ror	r20
 8a6:	37 95       	ror	r19
 8a8:	27 95       	ror	r18
 8aa:	ba 95       	dec	r27
 8ac:	c9 f7       	brne	.-14     	; 0x8a0 <__ultoa_invert+0xa2>
 8ae:	62 0f       	add	r22, r18
 8b0:	73 1f       	adc	r23, r19
 8b2:	84 1f       	adc	r24, r20
 8b4:	95 1f       	adc	r25, r21
 8b6:	a0 1d       	adc	r26, r0
 8b8:	08 95       	ret

000008ba <_exit>:
 8ba:	f8 94       	cli

000008bc <__stop_program>:
 8bc:	ff cf       	rjmp	.-2      	; 0x8bc <__stop_program>
