
ATtiny24.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  000006da  0000076e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080008a  0080008a  00000798  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000007f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002d4  00000000  00000000  00000854  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000208  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000203  00000000  00000000  00000d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00000f34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000246  00000000  00000000  00001024  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000026c  00000000  00000000  0000126a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000014d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	90 c0       	rjmp	.+288    	; 0x124 <__vector_1>
   4:	27 c0       	rjmp	.+78     	; 0x54 <__bad_interrupt>
   6:	26 c0       	rjmp	.+76     	; 0x54 <__bad_interrupt>
   8:	25 c0       	rjmp	.+74     	; 0x54 <__bad_interrupt>
   a:	24 c0       	rjmp	.+72     	; 0x54 <__bad_interrupt>
   c:	23 c0       	rjmp	.+70     	; 0x54 <__bad_interrupt>
   e:	22 c0       	rjmp	.+68     	; 0x54 <__bad_interrupt>
  10:	21 c0       	rjmp	.+66     	; 0x54 <__bad_interrupt>
  12:	20 c0       	rjmp	.+64     	; 0x54 <__bad_interrupt>
  14:	1f c0       	rjmp	.+62     	; 0x54 <__bad_interrupt>
  16:	1e c0       	rjmp	.+60     	; 0x54 <__bad_interrupt>
  18:	1d c0       	rjmp	.+58     	; 0x54 <__bad_interrupt>
  1a:	1c c0       	rjmp	.+56     	; 0x54 <__bad_interrupt>
  1c:	1b c0       	rjmp	.+54     	; 0x54 <__bad_interrupt>
  1e:	1a c0       	rjmp	.+52     	; 0x54 <__bad_interrupt>
  20:	19 c0       	rjmp	.+50     	; 0x54 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf ed       	ldi	r28, 0xDF	; 223
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_copy_data>:
  2a:	10 e0       	ldi	r17, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	ea ed       	ldi	r30, 0xDA	; 218
  32:	f6 e0       	ldi	r31, 0x06	; 6
  34:	02 c0       	rjmp	.+4      	; 0x3a <__do_copy_data+0x10>
  36:	05 90       	lpm	r0, Z+
  38:	0d 92       	st	X+, r0
  3a:	aa 38       	cpi	r26, 0x8A	; 138
  3c:	b1 07       	cpc	r27, r17
  3e:	d9 f7       	brne	.-10     	; 0x36 <__do_copy_data+0xc>

00000040 <__do_clear_bss>:
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	aa e8       	ldi	r26, 0x8A	; 138
  44:	b0 e0       	ldi	r27, 0x00	; 0
  46:	01 c0       	rjmp	.+2      	; 0x4a <.do_clear_bss_start>

00000048 <.do_clear_bss_loop>:
  48:	1d 92       	st	X+, r1

0000004a <.do_clear_bss_start>:
  4a:	a3 39       	cpi	r26, 0x93	; 147
  4c:	b2 07       	cpc	r27, r18
  4e:	e1 f7       	brne	.-8      	; 0x48 <.do_clear_bss_loop>
  50:	09 d0       	rcall	.+18     	; 0x64 <main>
  52:	41 c3       	rjmp	.+1666   	; 0x6d6 <_exit>

00000054 <__bad_interrupt>:
  54:	d5 cf       	rjmp	.-86     	; 0x0 <__vectors>

00000056 <JUEL_ISR>:
    }
}

void JUEL_ISR(void)
{
	state ^=(1<<0);
  56:	90 91 8a 00 	lds	r25, 0x008A
  5a:	81 e0       	ldi	r24, 0x01	; 1
  5c:	89 27       	eor	r24, r25
  5e:	80 93 8a 00 	sts	0x008A, r24
  62:	08 95       	ret

00000064 <main>:
void JUEL_ISR(void);//declaration of JUEL_ISR function

uint8_t state=0x00;
int main(void)
{
	attachInterrupt(INT0,JUEL_ISR,RISING);
  64:	44 e3       	ldi	r20, 0x34	; 52
  66:	6b e2       	ldi	r22, 0x2B	; 43
  68:	70 e0       	ldi	r23, 0x00	; 0
  6a:	86 e0       	ldi	r24, 0x06	; 6
  6c:	39 d0       	rcall	.+114    	; 0xe0 <attachInterrupt>
	DDRA|=(1<<PA0);// OUTPUT bit set
  6e:	d0 9a       	sbi	0x1a, 0	; 26

    while(1)
    {
        if(state)
  70:	80 91 8a 00 	lds	r24, 0x008A
  74:	88 23       	and	r24, r24
  76:	11 f0       	breq	.+4      	; 0x7c <main+0x18>
		{
			PORTA |=(1<<PA0);
  78:	d8 9a       	sbi	0x1b, 0	; 27
  7a:	fa cf       	rjmp	.-12     	; 0x70 <main+0xc>
		}
		else
		{
			PORTA &=~(1<<PA0);
  7c:	d8 98       	cbi	0x1b, 0	; 27
  7e:	f8 cf       	rjmp	.-16     	; 0x70 <main+0xc>

00000080 <digitalPinToInterrupt>:
		|| defined(__AVR_ATtiny45__ )\
		|| defined(__AVR_ATtiny85__ )\
		|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
		|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
		|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
	switch(pin)
  80:	86 30       	cpi	r24, 0x06	; 6
  82:	39 f0       	breq	.+14     	; 0x92 <digitalPinToInterrupt+0x12>
	{
		case INT0: return INT0;  //by default for ATtiny25,45,85=INT0=6
		break;
		default: printf("Error: please choose the right sense mode");
  84:	80 e6       	ldi	r24, 0x60	; 96
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	9f 93       	push	r25
  8a:	8f 93       	push	r24
  8c:	72 d0       	rcall	.+228    	; 0x172 <printf>
  8e:	0f 90       	pop	r0
  90:	0f 90       	pop	r0
	}
	#endif
}
  92:	08 95       	ret

00000094 <INTERRUPT_SENSE_CONTROL>:
		|| defined(__AVR_ATtiny45__ )\
		|| defined(__AVR_ATtiny85__ )\
		|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
		|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
		|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
			if(pin==INT0)
  94:	86 30       	cpi	r24, 0x06	; 6
  96:	19 f5       	brne	.+70     	; 0xde <INTERRUPT_SENSE_CONTROL+0x4a>
			{
				if(DETECT_SENSE==LOW)
  98:	61 11       	cpse	r22, r1
  9a:	07 c0       	rjmp	.+14     	; 0xaa <INTERRUPT_SENSE_CONTROL+0x16>
				{
					MCUCR &= ~(1<<ISC01);
  9c:	85 b7       	in	r24, 0x35	; 53
  9e:	8d 7f       	andi	r24, 0xFD	; 253
  a0:	85 bf       	out	0x35, r24	; 53
					MCUCR &= ~(1<<ISC00);
  a2:	85 b7       	in	r24, 0x35	; 53
  a4:	8e 7f       	andi	r24, 0xFE	; 254
  a6:	85 bf       	out	0x35, r24	; 53
  a8:	08 95       	ret
				}
				else if(DETECT_SENSE==CHANGE)
  aa:	63 33       	cpi	r22, 0x33	; 51
  ac:	39 f4       	brne	.+14     	; 0xbc <INTERRUPT_SENSE_CONTROL+0x28>
				{
					MCUCR &= ~(1<<ISC01);
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	8d 7f       	andi	r24, 0xFD	; 253
  b2:	85 bf       	out	0x35, r24	; 53
					MCUCR |= (1<<ISC00);
  b4:	85 b7       	in	r24, 0x35	; 53
  b6:	81 60       	ori	r24, 0x01	; 1
  b8:	85 bf       	out	0x35, r24	; 53
  ba:	08 95       	ret
				}
				else if(DETECT_SENSE==FALLING)
  bc:	65 33       	cpi	r22, 0x35	; 53
  be:	39 f4       	brne	.+14     	; 0xce <INTERRUPT_SENSE_CONTROL+0x3a>
				{
					MCUCR |= (1<<ISC01);
  c0:	85 b7       	in	r24, 0x35	; 53
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	85 bf       	out	0x35, r24	; 53
					MCUCR &= ~(1<<ISC00);
  c6:	85 b7       	in	r24, 0x35	; 53
  c8:	8e 7f       	andi	r24, 0xFE	; 254
  ca:	85 bf       	out	0x35, r24	; 53
  cc:	08 95       	ret
				}
				else if(DETECT_SENSE==RISING)
  ce:	64 33       	cpi	r22, 0x34	; 52
  d0:	31 f4       	brne	.+12     	; 0xde <INTERRUPT_SENSE_CONTROL+0x4a>
				{
					MCUCR |= (1<<ISC01);
  d2:	85 b7       	in	r24, 0x35	; 53
  d4:	82 60       	ori	r24, 0x02	; 2
  d6:	85 bf       	out	0x35, r24	; 53
					MCUCR |= (1<<ISC00);
  d8:	85 b7       	in	r24, 0x35	; 53
  da:	81 60       	ori	r24, 0x01	; 1
  dc:	85 bf       	out	0x35, r24	; 53
  de:	08 95       	ret

000000e0 <attachInterrupt>:
//
//     Atmega25,45,85,24,44,84 :
//     		   		       INT0(LOW,CHANGE,RISING,FALLING)

void attachInterrupt(uint8_t EXTERNAL_INTERRUPT_PIN, void (*received_function_pointer)(), uint8_t INTERRUPT_SENSE)
{	
  e0:	0f 93       	push	r16
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	18 2f       	mov	r17, r24
  ea:	eb 01       	movw	r28, r22
  ec:	04 2f       	mov	r16, r20
		|| defined(__AVR_ATtiny45__ )\
	    || defined(__AVR_ATtiny85__ )\
		|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
		|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
		|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
			sei();// To enable Global interrupt bit I
  ee:	78 94       	sei
			INTERRUPT_SENSE_CONTROL(digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN), INTERRUPT_SENSE);//this function set the interrupt sense mode(LOW,CHAGNE,RISING,FALLING)
  f0:	c7 df       	rcall	.-114    	; 0x80 <digitalPinToInterrupt>
  f2:	60 2f       	mov	r22, r16
  f4:	cf df       	rcall	.-98     	; 0x94 <INTERRUPT_SENSE_CONTROL>
			GIMSK |= (1<<digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN));// External interrupt pin select (INT0,INT1,INT2)//NB: dont take it before INTERRUPT_SENSE_CONTROL() function because when you will use pull down network initally it call ISR() to take main action.
  f6:	0b b7       	in	r16, 0x3b	; 59
  f8:	81 2f       	mov	r24, r17
  fa:	c2 df       	rcall	.-124    	; 0x80 <digitalPinToInterrupt>
  fc:	21 e0       	ldi	r18, 0x01	; 1
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	a9 01       	movw	r20, r18
 102:	02 c0       	rjmp	.+4      	; 0x108 <attachInterrupt+0x28>
 104:	44 0f       	add	r20, r20
 106:	55 1f       	adc	r21, r21
 108:	8a 95       	dec	r24
 10a:	e2 f7       	brpl	.-8      	; 0x104 <attachInterrupt+0x24>
 10c:	ca 01       	movw	r24, r20
 10e:	80 2b       	or	r24, r16
 110:	8b bf       	out	0x3b, r24	; 59
			pointer_of_received_function_pointer=received_function_pointer;//here we send the address of (received_function_pointer) from main file to (address_of_receive_function) which is a void type function pointer [NB: the purpose is to run the received function inside the ISR() ]
 112:	d0 93 8c 00 	sts	0x008C, r29
 116:	c0 93 8b 00 	sts	0x008B, r28
			
    #endif
	
}
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	1f 91       	pop	r17
 120:	0f 91       	pop	r16
 122:	08 95       	ret

00000124 <__vector_1>:
	|| defined(__AVR_ATtiny85__ )\
	|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
	|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
	|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
		ISR(INT0_vect)
		{
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	2f 93       	push	r18
 130:	3f 93       	push	r19
 132:	4f 93       	push	r20
 134:	5f 93       	push	r21
 136:	6f 93       	push	r22
 138:	7f 93       	push	r23
 13a:	8f 93       	push	r24
 13c:	9f 93       	push	r25
 13e:	af 93       	push	r26
 140:	bf 93       	push	r27
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
			pointer_of_received_function_pointer();
 146:	e0 91 8b 00 	lds	r30, 0x008B
 14a:	f0 91 8c 00 	lds	r31, 0x008C
 14e:	09 95       	icall
		}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	0f 90       	pop	r0
 16a:	0f be       	out	0x3f, r0	; 63
 16c:	0f 90       	pop	r0
 16e:	1f 90       	pop	r1
 170:	18 95       	reti

00000172 <printf>:
 172:	a0 e0       	ldi	r26, 0x00	; 0
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	ee eb       	ldi	r30, 0xBE	; 190
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	90 c2       	rjmp	.+1312   	; 0x69c <__prologue_saves__+0x20>
 17c:	fe 01       	movw	r30, r28
 17e:	35 96       	adiw	r30, 0x05	; 5
 180:	61 91       	ld	r22, Z+
 182:	71 91       	ld	r23, Z+
 184:	af 01       	movw	r20, r30
 186:	80 91 8f 00 	lds	r24, 0x008F
 18a:	90 91 90 00 	lds	r25, 0x0090
 18e:	02 d0       	rcall	.+4      	; 0x194 <vfprintf>
 190:	e2 e0       	ldi	r30, 0x02	; 2
 192:	9b c2       	rjmp	.+1334   	; 0x6ca <__epilogue_restores__+0x20>

00000194 <vfprintf>:
 194:	ac e0       	ldi	r26, 0x0C	; 12
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	ef ec       	ldi	r30, 0xCF	; 207
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	6f c2       	rjmp	.+1246   	; 0x67c <__prologue_saves__>
 19e:	7c 01       	movw	r14, r24
 1a0:	6b 01       	movw	r12, r22
 1a2:	8a 01       	movw	r16, r20
 1a4:	fc 01       	movw	r30, r24
 1a6:	17 82       	std	Z+7, r1	; 0x07
 1a8:	16 82       	std	Z+6, r1	; 0x06
 1aa:	83 81       	ldd	r24, Z+3	; 0x03
 1ac:	81 ff       	sbrs	r24, 1
 1ae:	b0 c1       	rjmp	.+864    	; 0x510 <vfprintf+0x37c>
 1b0:	ce 01       	movw	r24, r28
 1b2:	01 96       	adiw	r24, 0x01	; 1
 1b4:	4c 01       	movw	r8, r24
 1b6:	f7 01       	movw	r30, r14
 1b8:	93 81       	ldd	r25, Z+3	; 0x03
 1ba:	f6 01       	movw	r30, r12
 1bc:	93 fd       	sbrc	r25, 3
 1be:	85 91       	lpm	r24, Z+
 1c0:	93 ff       	sbrs	r25, 3
 1c2:	81 91       	ld	r24, Z+
 1c4:	6f 01       	movw	r12, r30
 1c6:	88 23       	and	r24, r24
 1c8:	09 f4       	brne	.+2      	; 0x1cc <vfprintf+0x38>
 1ca:	9e c1       	rjmp	.+828    	; 0x508 <vfprintf+0x374>
 1cc:	85 32       	cpi	r24, 0x25	; 37
 1ce:	39 f4       	brne	.+14     	; 0x1de <vfprintf+0x4a>
 1d0:	93 fd       	sbrc	r25, 3
 1d2:	85 91       	lpm	r24, Z+
 1d4:	93 ff       	sbrs	r25, 3
 1d6:	81 91       	ld	r24, Z+
 1d8:	6f 01       	movw	r12, r30
 1da:	85 32       	cpi	r24, 0x25	; 37
 1dc:	21 f4       	brne	.+8      	; 0x1e6 <vfprintf+0x52>
 1de:	b7 01       	movw	r22, r14
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	b1 d1       	rcall	.+866    	; 0x546 <fputc>
 1e4:	e8 cf       	rjmp	.-48     	; 0x1b6 <vfprintf+0x22>
 1e6:	51 2c       	mov	r5, r1
 1e8:	31 2c       	mov	r3, r1
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	20 32       	cpi	r18, 0x20	; 32
 1ee:	a0 f4       	brcc	.+40     	; 0x218 <vfprintf+0x84>
 1f0:	8b 32       	cpi	r24, 0x2B	; 43
 1f2:	69 f0       	breq	.+26     	; 0x20e <vfprintf+0x7a>
 1f4:	30 f4       	brcc	.+12     	; 0x202 <vfprintf+0x6e>
 1f6:	80 32       	cpi	r24, 0x20	; 32
 1f8:	59 f0       	breq	.+22     	; 0x210 <vfprintf+0x7c>
 1fa:	83 32       	cpi	r24, 0x23	; 35
 1fc:	69 f4       	brne	.+26     	; 0x218 <vfprintf+0x84>
 1fe:	20 61       	ori	r18, 0x10	; 16
 200:	2c c0       	rjmp	.+88     	; 0x25a <vfprintf+0xc6>
 202:	8d 32       	cpi	r24, 0x2D	; 45
 204:	39 f0       	breq	.+14     	; 0x214 <vfprintf+0x80>
 206:	80 33       	cpi	r24, 0x30	; 48
 208:	39 f4       	brne	.+14     	; 0x218 <vfprintf+0x84>
 20a:	21 60       	ori	r18, 0x01	; 1
 20c:	26 c0       	rjmp	.+76     	; 0x25a <vfprintf+0xc6>
 20e:	22 60       	ori	r18, 0x02	; 2
 210:	24 60       	ori	r18, 0x04	; 4
 212:	23 c0       	rjmp	.+70     	; 0x25a <vfprintf+0xc6>
 214:	28 60       	ori	r18, 0x08	; 8
 216:	21 c0       	rjmp	.+66     	; 0x25a <vfprintf+0xc6>
 218:	27 fd       	sbrc	r18, 7
 21a:	27 c0       	rjmp	.+78     	; 0x26a <vfprintf+0xd6>
 21c:	30 ed       	ldi	r19, 0xD0	; 208
 21e:	38 0f       	add	r19, r24
 220:	3a 30       	cpi	r19, 0x0A	; 10
 222:	78 f4       	brcc	.+30     	; 0x242 <vfprintf+0xae>
 224:	26 ff       	sbrs	r18, 6
 226:	06 c0       	rjmp	.+12     	; 0x234 <vfprintf+0xa0>
 228:	85 2d       	mov	r24, r5
 22a:	6a e0       	ldi	r22, 0x0A	; 10
 22c:	1e d2       	rcall	.+1084   	; 0x66a <__mulqi3>
 22e:	58 2e       	mov	r5, r24
 230:	53 0e       	add	r5, r19
 232:	13 c0       	rjmp	.+38     	; 0x25a <vfprintf+0xc6>
 234:	83 2d       	mov	r24, r3
 236:	6a e0       	ldi	r22, 0x0A	; 10
 238:	18 d2       	rcall	.+1072   	; 0x66a <__mulqi3>
 23a:	38 2e       	mov	r3, r24
 23c:	33 0e       	add	r3, r19
 23e:	20 62       	ori	r18, 0x20	; 32
 240:	0c c0       	rjmp	.+24     	; 0x25a <vfprintf+0xc6>
 242:	8e 32       	cpi	r24, 0x2E	; 46
 244:	21 f4       	brne	.+8      	; 0x24e <vfprintf+0xba>
 246:	26 fd       	sbrc	r18, 6
 248:	5f c1       	rjmp	.+702    	; 0x508 <vfprintf+0x374>
 24a:	20 64       	ori	r18, 0x40	; 64
 24c:	06 c0       	rjmp	.+12     	; 0x25a <vfprintf+0xc6>
 24e:	8c 36       	cpi	r24, 0x6C	; 108
 250:	11 f4       	brne	.+4      	; 0x256 <vfprintf+0xc2>
 252:	20 68       	ori	r18, 0x80	; 128
 254:	02 c0       	rjmp	.+4      	; 0x25a <vfprintf+0xc6>
 256:	88 36       	cpi	r24, 0x68	; 104
 258:	41 f4       	brne	.+16     	; 0x26a <vfprintf+0xd6>
 25a:	f6 01       	movw	r30, r12
 25c:	93 fd       	sbrc	r25, 3
 25e:	85 91       	lpm	r24, Z+
 260:	93 ff       	sbrs	r25, 3
 262:	81 91       	ld	r24, Z+
 264:	6f 01       	movw	r12, r30
 266:	81 11       	cpse	r24, r1
 268:	c1 cf       	rjmp	.-126    	; 0x1ec <vfprintf+0x58>
 26a:	98 2f       	mov	r25, r24
 26c:	9f 7d       	andi	r25, 0xDF	; 223
 26e:	95 54       	subi	r25, 0x45	; 69
 270:	93 30       	cpi	r25, 0x03	; 3
 272:	28 f4       	brcc	.+10     	; 0x27e <vfprintf+0xea>
 274:	0c 5f       	subi	r16, 0xFC	; 252
 276:	1f 4f       	sbci	r17, 0xFF	; 255
 278:	ff e3       	ldi	r31, 0x3F	; 63
 27a:	f9 83       	std	Y+1, r31	; 0x01
 27c:	0d c0       	rjmp	.+26     	; 0x298 <vfprintf+0x104>
 27e:	83 36       	cpi	r24, 0x63	; 99
 280:	31 f0       	breq	.+12     	; 0x28e <vfprintf+0xfa>
 282:	83 37       	cpi	r24, 0x73	; 115
 284:	71 f0       	breq	.+28     	; 0x2a2 <vfprintf+0x10e>
 286:	83 35       	cpi	r24, 0x53	; 83
 288:	09 f0       	breq	.+2      	; 0x28c <vfprintf+0xf8>
 28a:	57 c0       	rjmp	.+174    	; 0x33a <vfprintf+0x1a6>
 28c:	21 c0       	rjmp	.+66     	; 0x2d0 <vfprintf+0x13c>
 28e:	f8 01       	movw	r30, r16
 290:	80 81       	ld	r24, Z
 292:	89 83       	std	Y+1, r24	; 0x01
 294:	0e 5f       	subi	r16, 0xFE	; 254
 296:	1f 4f       	sbci	r17, 0xFF	; 255
 298:	44 24       	eor	r4, r4
 29a:	43 94       	inc	r4
 29c:	51 2c       	mov	r5, r1
 29e:	54 01       	movw	r10, r8
 2a0:	14 c0       	rjmp	.+40     	; 0x2ca <vfprintf+0x136>
 2a2:	38 01       	movw	r6, r16
 2a4:	f2 e0       	ldi	r31, 0x02	; 2
 2a6:	6f 0e       	add	r6, r31
 2a8:	71 1c       	adc	r7, r1
 2aa:	f8 01       	movw	r30, r16
 2ac:	a0 80       	ld	r10, Z
 2ae:	b1 80       	ldd	r11, Z+1	; 0x01
 2b0:	26 ff       	sbrs	r18, 6
 2b2:	03 c0       	rjmp	.+6      	; 0x2ba <vfprintf+0x126>
 2b4:	65 2d       	mov	r22, r5
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <vfprintf+0x12a>
 2ba:	6f ef       	ldi	r22, 0xFF	; 255
 2bc:	7f ef       	ldi	r23, 0xFF	; 255
 2be:	c5 01       	movw	r24, r10
 2c0:	2c 87       	std	Y+12, r18	; 0x0c
 2c2:	36 d1       	rcall	.+620    	; 0x530 <strnlen>
 2c4:	2c 01       	movw	r4, r24
 2c6:	83 01       	movw	r16, r6
 2c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 2ca:	2f 77       	andi	r18, 0x7F	; 127
 2cc:	22 2e       	mov	r2, r18
 2ce:	16 c0       	rjmp	.+44     	; 0x2fc <vfprintf+0x168>
 2d0:	38 01       	movw	r6, r16
 2d2:	f2 e0       	ldi	r31, 0x02	; 2
 2d4:	6f 0e       	add	r6, r31
 2d6:	71 1c       	adc	r7, r1
 2d8:	f8 01       	movw	r30, r16
 2da:	a0 80       	ld	r10, Z
 2dc:	b1 80       	ldd	r11, Z+1	; 0x01
 2de:	26 ff       	sbrs	r18, 6
 2e0:	03 c0       	rjmp	.+6      	; 0x2e8 <vfprintf+0x154>
 2e2:	65 2d       	mov	r22, r5
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <vfprintf+0x158>
 2e8:	6f ef       	ldi	r22, 0xFF	; 255
 2ea:	7f ef       	ldi	r23, 0xFF	; 255
 2ec:	c5 01       	movw	r24, r10
 2ee:	2c 87       	std	Y+12, r18	; 0x0c
 2f0:	14 d1       	rcall	.+552    	; 0x51a <strnlen_P>
 2f2:	2c 01       	movw	r4, r24
 2f4:	2c 85       	ldd	r18, Y+12	; 0x0c
 2f6:	20 68       	ori	r18, 0x80	; 128
 2f8:	22 2e       	mov	r2, r18
 2fa:	83 01       	movw	r16, r6
 2fc:	23 fc       	sbrc	r2, 3
 2fe:	19 c0       	rjmp	.+50     	; 0x332 <vfprintf+0x19e>
 300:	83 2d       	mov	r24, r3
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	48 16       	cp	r4, r24
 306:	59 06       	cpc	r5, r25
 308:	a0 f4       	brcc	.+40     	; 0x332 <vfprintf+0x19e>
 30a:	b7 01       	movw	r22, r14
 30c:	80 e2       	ldi	r24, 0x20	; 32
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	1a d1       	rcall	.+564    	; 0x546 <fputc>
 312:	3a 94       	dec	r3
 314:	f5 cf       	rjmp	.-22     	; 0x300 <vfprintf+0x16c>
 316:	f5 01       	movw	r30, r10
 318:	27 fc       	sbrc	r2, 7
 31a:	85 91       	lpm	r24, Z+
 31c:	27 fe       	sbrs	r2, 7
 31e:	81 91       	ld	r24, Z+
 320:	5f 01       	movw	r10, r30
 322:	b7 01       	movw	r22, r14
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	0f d1       	rcall	.+542    	; 0x546 <fputc>
 328:	31 10       	cpse	r3, r1
 32a:	3a 94       	dec	r3
 32c:	f1 e0       	ldi	r31, 0x01	; 1
 32e:	4f 1a       	sub	r4, r31
 330:	51 08       	sbc	r5, r1
 332:	41 14       	cp	r4, r1
 334:	51 04       	cpc	r5, r1
 336:	79 f7       	brne	.-34     	; 0x316 <vfprintf+0x182>
 338:	de c0       	rjmp	.+444    	; 0x4f6 <vfprintf+0x362>
 33a:	84 36       	cpi	r24, 0x64	; 100
 33c:	11 f0       	breq	.+4      	; 0x342 <vfprintf+0x1ae>
 33e:	89 36       	cpi	r24, 0x69	; 105
 340:	31 f5       	brne	.+76     	; 0x38e <vfprintf+0x1fa>
 342:	f8 01       	movw	r30, r16
 344:	27 ff       	sbrs	r18, 7
 346:	07 c0       	rjmp	.+14     	; 0x356 <vfprintf+0x1c2>
 348:	60 81       	ld	r22, Z
 34a:	71 81       	ldd	r23, Z+1	; 0x01
 34c:	82 81       	ldd	r24, Z+2	; 0x02
 34e:	93 81       	ldd	r25, Z+3	; 0x03
 350:	0c 5f       	subi	r16, 0xFC	; 252
 352:	1f 4f       	sbci	r17, 0xFF	; 255
 354:	08 c0       	rjmp	.+16     	; 0x366 <vfprintf+0x1d2>
 356:	60 81       	ld	r22, Z
 358:	71 81       	ldd	r23, Z+1	; 0x01
 35a:	88 27       	eor	r24, r24
 35c:	77 fd       	sbrc	r23, 7
 35e:	80 95       	com	r24
 360:	98 2f       	mov	r25, r24
 362:	0e 5f       	subi	r16, 0xFE	; 254
 364:	1f 4f       	sbci	r17, 0xFF	; 255
 366:	2f 76       	andi	r18, 0x6F	; 111
 368:	b2 2e       	mov	r11, r18
 36a:	97 ff       	sbrs	r25, 7
 36c:	09 c0       	rjmp	.+18     	; 0x380 <vfprintf+0x1ec>
 36e:	90 95       	com	r25
 370:	80 95       	com	r24
 372:	70 95       	com	r23
 374:	61 95       	neg	r22
 376:	7f 4f       	sbci	r23, 0xFF	; 255
 378:	8f 4f       	sbci	r24, 0xFF	; 255
 37a:	9f 4f       	sbci	r25, 0xFF	; 255
 37c:	20 68       	ori	r18, 0x80	; 128
 37e:	b2 2e       	mov	r11, r18
 380:	2a e0       	ldi	r18, 0x0A	; 10
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	a4 01       	movw	r20, r8
 386:	11 d1       	rcall	.+546    	; 0x5aa <__ultoa_invert>
 388:	a8 2e       	mov	r10, r24
 38a:	a8 18       	sub	r10, r8
 38c:	43 c0       	rjmp	.+134    	; 0x414 <vfprintf+0x280>
 38e:	85 37       	cpi	r24, 0x75	; 117
 390:	29 f4       	brne	.+10     	; 0x39c <vfprintf+0x208>
 392:	2f 7e       	andi	r18, 0xEF	; 239
 394:	b2 2e       	mov	r11, r18
 396:	2a e0       	ldi	r18, 0x0A	; 10
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	25 c0       	rjmp	.+74     	; 0x3e6 <vfprintf+0x252>
 39c:	f2 2f       	mov	r31, r18
 39e:	f9 7f       	andi	r31, 0xF9	; 249
 3a0:	bf 2e       	mov	r11, r31
 3a2:	8f 36       	cpi	r24, 0x6F	; 111
 3a4:	c1 f0       	breq	.+48     	; 0x3d6 <vfprintf+0x242>
 3a6:	18 f4       	brcc	.+6      	; 0x3ae <vfprintf+0x21a>
 3a8:	88 35       	cpi	r24, 0x58	; 88
 3aa:	79 f0       	breq	.+30     	; 0x3ca <vfprintf+0x236>
 3ac:	ad c0       	rjmp	.+346    	; 0x508 <vfprintf+0x374>
 3ae:	80 37       	cpi	r24, 0x70	; 112
 3b0:	19 f0       	breq	.+6      	; 0x3b8 <vfprintf+0x224>
 3b2:	88 37       	cpi	r24, 0x78	; 120
 3b4:	21 f0       	breq	.+8      	; 0x3be <vfprintf+0x22a>
 3b6:	a8 c0       	rjmp	.+336    	; 0x508 <vfprintf+0x374>
 3b8:	2f 2f       	mov	r18, r31
 3ba:	20 61       	ori	r18, 0x10	; 16
 3bc:	b2 2e       	mov	r11, r18
 3be:	b4 fe       	sbrs	r11, 4
 3c0:	0d c0       	rjmp	.+26     	; 0x3dc <vfprintf+0x248>
 3c2:	8b 2d       	mov	r24, r11
 3c4:	84 60       	ori	r24, 0x04	; 4
 3c6:	b8 2e       	mov	r11, r24
 3c8:	09 c0       	rjmp	.+18     	; 0x3dc <vfprintf+0x248>
 3ca:	24 ff       	sbrs	r18, 4
 3cc:	0a c0       	rjmp	.+20     	; 0x3e2 <vfprintf+0x24e>
 3ce:	9f 2f       	mov	r25, r31
 3d0:	96 60       	ori	r25, 0x06	; 6
 3d2:	b9 2e       	mov	r11, r25
 3d4:	06 c0       	rjmp	.+12     	; 0x3e2 <vfprintf+0x24e>
 3d6:	28 e0       	ldi	r18, 0x08	; 8
 3d8:	30 e0       	ldi	r19, 0x00	; 0
 3da:	05 c0       	rjmp	.+10     	; 0x3e6 <vfprintf+0x252>
 3dc:	20 e1       	ldi	r18, 0x10	; 16
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x252>
 3e2:	20 e1       	ldi	r18, 0x10	; 16
 3e4:	32 e0       	ldi	r19, 0x02	; 2
 3e6:	f8 01       	movw	r30, r16
 3e8:	b7 fe       	sbrs	r11, 7
 3ea:	07 c0       	rjmp	.+14     	; 0x3fa <vfprintf+0x266>
 3ec:	60 81       	ld	r22, Z
 3ee:	71 81       	ldd	r23, Z+1	; 0x01
 3f0:	82 81       	ldd	r24, Z+2	; 0x02
 3f2:	93 81       	ldd	r25, Z+3	; 0x03
 3f4:	0c 5f       	subi	r16, 0xFC	; 252
 3f6:	1f 4f       	sbci	r17, 0xFF	; 255
 3f8:	06 c0       	rjmp	.+12     	; 0x406 <vfprintf+0x272>
 3fa:	60 81       	ld	r22, Z
 3fc:	71 81       	ldd	r23, Z+1	; 0x01
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 5f       	subi	r16, 0xFE	; 254
 404:	1f 4f       	sbci	r17, 0xFF	; 255
 406:	a4 01       	movw	r20, r8
 408:	d0 d0       	rcall	.+416    	; 0x5aa <__ultoa_invert>
 40a:	a8 2e       	mov	r10, r24
 40c:	a8 18       	sub	r10, r8
 40e:	fb 2d       	mov	r31, r11
 410:	ff 77       	andi	r31, 0x7F	; 127
 412:	bf 2e       	mov	r11, r31
 414:	b6 fe       	sbrs	r11, 6
 416:	0b c0       	rjmp	.+22     	; 0x42e <vfprintf+0x29a>
 418:	2b 2d       	mov	r18, r11
 41a:	2e 7f       	andi	r18, 0xFE	; 254
 41c:	a5 14       	cp	r10, r5
 41e:	50 f4       	brcc	.+20     	; 0x434 <vfprintf+0x2a0>
 420:	b4 fe       	sbrs	r11, 4
 422:	0a c0       	rjmp	.+20     	; 0x438 <vfprintf+0x2a4>
 424:	b2 fc       	sbrc	r11, 2
 426:	08 c0       	rjmp	.+16     	; 0x438 <vfprintf+0x2a4>
 428:	2b 2d       	mov	r18, r11
 42a:	2e 7e       	andi	r18, 0xEE	; 238
 42c:	05 c0       	rjmp	.+10     	; 0x438 <vfprintf+0x2a4>
 42e:	7a 2c       	mov	r7, r10
 430:	2b 2d       	mov	r18, r11
 432:	03 c0       	rjmp	.+6      	; 0x43a <vfprintf+0x2a6>
 434:	7a 2c       	mov	r7, r10
 436:	01 c0       	rjmp	.+2      	; 0x43a <vfprintf+0x2a6>
 438:	75 2c       	mov	r7, r5
 43a:	24 ff       	sbrs	r18, 4
 43c:	0d c0       	rjmp	.+26     	; 0x458 <vfprintf+0x2c4>
 43e:	fe 01       	movw	r30, r28
 440:	ea 0d       	add	r30, r10
 442:	f1 1d       	adc	r31, r1
 444:	80 81       	ld	r24, Z
 446:	80 33       	cpi	r24, 0x30	; 48
 448:	11 f4       	brne	.+4      	; 0x44e <vfprintf+0x2ba>
 44a:	29 7e       	andi	r18, 0xE9	; 233
 44c:	09 c0       	rjmp	.+18     	; 0x460 <vfprintf+0x2cc>
 44e:	22 ff       	sbrs	r18, 2
 450:	06 c0       	rjmp	.+12     	; 0x45e <vfprintf+0x2ca>
 452:	73 94       	inc	r7
 454:	73 94       	inc	r7
 456:	04 c0       	rjmp	.+8      	; 0x460 <vfprintf+0x2cc>
 458:	82 2f       	mov	r24, r18
 45a:	86 78       	andi	r24, 0x86	; 134
 45c:	09 f0       	breq	.+2      	; 0x460 <vfprintf+0x2cc>
 45e:	73 94       	inc	r7
 460:	23 fd       	sbrc	r18, 3
 462:	12 c0       	rjmp	.+36     	; 0x488 <vfprintf+0x2f4>
 464:	20 ff       	sbrs	r18, 0
 466:	06 c0       	rjmp	.+12     	; 0x474 <vfprintf+0x2e0>
 468:	5a 2c       	mov	r5, r10
 46a:	73 14       	cp	r7, r3
 46c:	18 f4       	brcc	.+6      	; 0x474 <vfprintf+0x2e0>
 46e:	53 0c       	add	r5, r3
 470:	57 18       	sub	r5, r7
 472:	73 2c       	mov	r7, r3
 474:	73 14       	cp	r7, r3
 476:	60 f4       	brcc	.+24     	; 0x490 <vfprintf+0x2fc>
 478:	b7 01       	movw	r22, r14
 47a:	80 e2       	ldi	r24, 0x20	; 32
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	2c 87       	std	Y+12, r18	; 0x0c
 480:	62 d0       	rcall	.+196    	; 0x546 <fputc>
 482:	73 94       	inc	r7
 484:	2c 85       	ldd	r18, Y+12	; 0x0c
 486:	f6 cf       	rjmp	.-20     	; 0x474 <vfprintf+0x2e0>
 488:	73 14       	cp	r7, r3
 48a:	10 f4       	brcc	.+4      	; 0x490 <vfprintf+0x2fc>
 48c:	37 18       	sub	r3, r7
 48e:	01 c0       	rjmp	.+2      	; 0x492 <vfprintf+0x2fe>
 490:	31 2c       	mov	r3, r1
 492:	24 ff       	sbrs	r18, 4
 494:	11 c0       	rjmp	.+34     	; 0x4b8 <vfprintf+0x324>
 496:	b7 01       	movw	r22, r14
 498:	80 e3       	ldi	r24, 0x30	; 48
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	2c 87       	std	Y+12, r18	; 0x0c
 49e:	53 d0       	rcall	.+166    	; 0x546 <fputc>
 4a0:	2c 85       	ldd	r18, Y+12	; 0x0c
 4a2:	22 ff       	sbrs	r18, 2
 4a4:	16 c0       	rjmp	.+44     	; 0x4d2 <vfprintf+0x33e>
 4a6:	21 ff       	sbrs	r18, 1
 4a8:	03 c0       	rjmp	.+6      	; 0x4b0 <vfprintf+0x31c>
 4aa:	88 e5       	ldi	r24, 0x58	; 88
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <vfprintf+0x320>
 4b0:	88 e7       	ldi	r24, 0x78	; 120
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	b7 01       	movw	r22, r14
 4b6:	0c c0       	rjmp	.+24     	; 0x4d0 <vfprintf+0x33c>
 4b8:	82 2f       	mov	r24, r18
 4ba:	86 78       	andi	r24, 0x86	; 134
 4bc:	51 f0       	breq	.+20     	; 0x4d2 <vfprintf+0x33e>
 4be:	21 fd       	sbrc	r18, 1
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <vfprintf+0x332>
 4c2:	80 e2       	ldi	r24, 0x20	; 32
 4c4:	01 c0       	rjmp	.+2      	; 0x4c8 <vfprintf+0x334>
 4c6:	8b e2       	ldi	r24, 0x2B	; 43
 4c8:	27 fd       	sbrc	r18, 7
 4ca:	8d e2       	ldi	r24, 0x2D	; 45
 4cc:	b7 01       	movw	r22, r14
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	3a d0       	rcall	.+116    	; 0x546 <fputc>
 4d2:	a5 14       	cp	r10, r5
 4d4:	30 f4       	brcc	.+12     	; 0x4e2 <vfprintf+0x34e>
 4d6:	b7 01       	movw	r22, r14
 4d8:	80 e3       	ldi	r24, 0x30	; 48
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	34 d0       	rcall	.+104    	; 0x546 <fputc>
 4de:	5a 94       	dec	r5
 4e0:	f8 cf       	rjmp	.-16     	; 0x4d2 <vfprintf+0x33e>
 4e2:	aa 94       	dec	r10
 4e4:	f4 01       	movw	r30, r8
 4e6:	ea 0d       	add	r30, r10
 4e8:	f1 1d       	adc	r31, r1
 4ea:	80 81       	ld	r24, Z
 4ec:	b7 01       	movw	r22, r14
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	2a d0       	rcall	.+84     	; 0x546 <fputc>
 4f2:	a1 10       	cpse	r10, r1
 4f4:	f6 cf       	rjmp	.-20     	; 0x4e2 <vfprintf+0x34e>
 4f6:	33 20       	and	r3, r3
 4f8:	09 f4       	brne	.+2      	; 0x4fc <vfprintf+0x368>
 4fa:	5d ce       	rjmp	.-838    	; 0x1b6 <vfprintf+0x22>
 4fc:	b7 01       	movw	r22, r14
 4fe:	80 e2       	ldi	r24, 0x20	; 32
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	21 d0       	rcall	.+66     	; 0x546 <fputc>
 504:	3a 94       	dec	r3
 506:	f7 cf       	rjmp	.-18     	; 0x4f6 <vfprintf+0x362>
 508:	f7 01       	movw	r30, r14
 50a:	86 81       	ldd	r24, Z+6	; 0x06
 50c:	97 81       	ldd	r25, Z+7	; 0x07
 50e:	02 c0       	rjmp	.+4      	; 0x514 <vfprintf+0x380>
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	9f ef       	ldi	r25, 0xFF	; 255
 514:	2c 96       	adiw	r28, 0x0c	; 12
 516:	e2 e1       	ldi	r30, 0x12	; 18
 518:	c8 c0       	rjmp	.+400    	; 0x6aa <__epilogue_restores__>

0000051a <strnlen_P>:
 51a:	fc 01       	movw	r30, r24
 51c:	05 90       	lpm	r0, Z+
 51e:	61 50       	subi	r22, 0x01	; 1
 520:	70 40       	sbci	r23, 0x00	; 0
 522:	01 10       	cpse	r0, r1
 524:	d8 f7       	brcc	.-10     	; 0x51c <strnlen_P+0x2>
 526:	80 95       	com	r24
 528:	90 95       	com	r25
 52a:	8e 0f       	add	r24, r30
 52c:	9f 1f       	adc	r25, r31
 52e:	08 95       	ret

00000530 <strnlen>:
 530:	fc 01       	movw	r30, r24
 532:	61 50       	subi	r22, 0x01	; 1
 534:	70 40       	sbci	r23, 0x00	; 0
 536:	01 90       	ld	r0, Z+
 538:	01 10       	cpse	r0, r1
 53a:	d8 f7       	brcc	.-10     	; 0x532 <strnlen+0x2>
 53c:	80 95       	com	r24
 53e:	90 95       	com	r25
 540:	8e 0f       	add	r24, r30
 542:	9f 1f       	adc	r25, r31
 544:	08 95       	ret

00000546 <fputc>:
 546:	0f 93       	push	r16
 548:	1f 93       	push	r17
 54a:	cf 93       	push	r28
 54c:	df 93       	push	r29
 54e:	18 2f       	mov	r17, r24
 550:	09 2f       	mov	r16, r25
 552:	eb 01       	movw	r28, r22
 554:	8b 81       	ldd	r24, Y+3	; 0x03
 556:	81 fd       	sbrc	r24, 1
 558:	03 c0       	rjmp	.+6      	; 0x560 <fputc+0x1a>
 55a:	8f ef       	ldi	r24, 0xFF	; 255
 55c:	9f ef       	ldi	r25, 0xFF	; 255
 55e:	20 c0       	rjmp	.+64     	; 0x5a0 <fputc+0x5a>
 560:	82 ff       	sbrs	r24, 2
 562:	10 c0       	rjmp	.+32     	; 0x584 <fputc+0x3e>
 564:	4e 81       	ldd	r20, Y+6	; 0x06
 566:	5f 81       	ldd	r21, Y+7	; 0x07
 568:	2c 81       	ldd	r18, Y+4	; 0x04
 56a:	3d 81       	ldd	r19, Y+5	; 0x05
 56c:	42 17       	cp	r20, r18
 56e:	53 07       	cpc	r21, r19
 570:	7c f4       	brge	.+30     	; 0x590 <fputc+0x4a>
 572:	e8 81       	ld	r30, Y
 574:	f9 81       	ldd	r31, Y+1	; 0x01
 576:	9f 01       	movw	r18, r30
 578:	2f 5f       	subi	r18, 0xFF	; 255
 57a:	3f 4f       	sbci	r19, 0xFF	; 255
 57c:	39 83       	std	Y+1, r19	; 0x01
 57e:	28 83       	st	Y, r18
 580:	10 83       	st	Z, r17
 582:	06 c0       	rjmp	.+12     	; 0x590 <fputc+0x4a>
 584:	e8 85       	ldd	r30, Y+8	; 0x08
 586:	f9 85       	ldd	r31, Y+9	; 0x09
 588:	81 2f       	mov	r24, r17
 58a:	09 95       	icall
 58c:	89 2b       	or	r24, r25
 58e:	29 f7       	brne	.-54     	; 0x55a <fputc+0x14>
 590:	2e 81       	ldd	r18, Y+6	; 0x06
 592:	3f 81       	ldd	r19, Y+7	; 0x07
 594:	2f 5f       	subi	r18, 0xFF	; 255
 596:	3f 4f       	sbci	r19, 0xFF	; 255
 598:	3f 83       	std	Y+7, r19	; 0x07
 59a:	2e 83       	std	Y+6, r18	; 0x06
 59c:	81 2f       	mov	r24, r17
 59e:	90 2f       	mov	r25, r16
 5a0:	df 91       	pop	r29
 5a2:	cf 91       	pop	r28
 5a4:	1f 91       	pop	r17
 5a6:	0f 91       	pop	r16
 5a8:	08 95       	ret

000005aa <__ultoa_invert>:
 5aa:	fa 01       	movw	r30, r20
 5ac:	aa 27       	eor	r26, r26
 5ae:	28 30       	cpi	r18, 0x08	; 8
 5b0:	61 f1       	breq	.+88     	; 0x60a <__ultoa_invert+0x60>
 5b2:	20 31       	cpi	r18, 0x10	; 16
 5b4:	91 f1       	breq	.+100    	; 0x61a <__ultoa_invert+0x70>
 5b6:	e8 94       	clt
 5b8:	6f 93       	push	r22
 5ba:	6e 7f       	andi	r22, 0xFE	; 254
 5bc:	6e 5f       	subi	r22, 0xFE	; 254
 5be:	7f 4f       	sbci	r23, 0xFF	; 255
 5c0:	8f 4f       	sbci	r24, 0xFF	; 255
 5c2:	9f 4f       	sbci	r25, 0xFF	; 255
 5c4:	af 4f       	sbci	r26, 0xFF	; 255
 5c6:	b1 e0       	ldi	r27, 0x01	; 1
 5c8:	40 d0       	rcall	.+128    	; 0x64a <__ultoa_invert+0xa0>
 5ca:	b4 e0       	ldi	r27, 0x04	; 4
 5cc:	3e d0       	rcall	.+124    	; 0x64a <__ultoa_invert+0xa0>
 5ce:	67 0f       	add	r22, r23
 5d0:	78 1f       	adc	r23, r24
 5d2:	89 1f       	adc	r24, r25
 5d4:	9a 1f       	adc	r25, r26
 5d6:	a1 1d       	adc	r26, r1
 5d8:	68 0f       	add	r22, r24
 5da:	79 1f       	adc	r23, r25
 5dc:	8a 1f       	adc	r24, r26
 5de:	91 1d       	adc	r25, r1
 5e0:	a1 1d       	adc	r26, r1
 5e2:	6a 0f       	add	r22, r26
 5e4:	71 1d       	adc	r23, r1
 5e6:	81 1d       	adc	r24, r1
 5e8:	91 1d       	adc	r25, r1
 5ea:	a1 1d       	adc	r26, r1
 5ec:	22 d0       	rcall	.+68     	; 0x632 <__ultoa_invert+0x88>
 5ee:	09 f4       	brne	.+2      	; 0x5f2 <__ultoa_invert+0x48>
 5f0:	68 94       	set
 5f2:	3f 91       	pop	r19
 5f4:	06 2e       	mov	r0, r22
 5f6:	00 0c       	add	r0, r0
 5f8:	30 19       	sub	r19, r0
 5fa:	00 0c       	add	r0, r0
 5fc:	00 0c       	add	r0, r0
 5fe:	30 19       	sub	r19, r0
 600:	30 5d       	subi	r19, 0xD0	; 208
 602:	31 93       	st	Z+, r19
 604:	ce f6       	brtc	.-78     	; 0x5b8 <__ultoa_invert+0xe>
 606:	cf 01       	movw	r24, r30
 608:	08 95       	ret
 60a:	46 2f       	mov	r20, r22
 60c:	47 70       	andi	r20, 0x07	; 7
 60e:	40 5d       	subi	r20, 0xD0	; 208
 610:	41 93       	st	Z+, r20
 612:	b3 e0       	ldi	r27, 0x03	; 3
 614:	0f d0       	rcall	.+30     	; 0x634 <__ultoa_invert+0x8a>
 616:	c9 f7       	brne	.-14     	; 0x60a <__ultoa_invert+0x60>
 618:	f6 cf       	rjmp	.-20     	; 0x606 <__ultoa_invert+0x5c>
 61a:	46 2f       	mov	r20, r22
 61c:	4f 70       	andi	r20, 0x0F	; 15
 61e:	40 5d       	subi	r20, 0xD0	; 208
 620:	4a 33       	cpi	r20, 0x3A	; 58
 622:	18 f0       	brcs	.+6      	; 0x62a <__ultoa_invert+0x80>
 624:	49 5d       	subi	r20, 0xD9	; 217
 626:	31 fd       	sbrc	r19, 1
 628:	40 52       	subi	r20, 0x20	; 32
 62a:	41 93       	st	Z+, r20
 62c:	02 d0       	rcall	.+4      	; 0x632 <__ultoa_invert+0x88>
 62e:	a9 f7       	brne	.-22     	; 0x61a <__ultoa_invert+0x70>
 630:	ea cf       	rjmp	.-44     	; 0x606 <__ultoa_invert+0x5c>
 632:	b4 e0       	ldi	r27, 0x04	; 4
 634:	a6 95       	lsr	r26
 636:	97 95       	ror	r25
 638:	87 95       	ror	r24
 63a:	77 95       	ror	r23
 63c:	67 95       	ror	r22
 63e:	ba 95       	dec	r27
 640:	c9 f7       	brne	.-14     	; 0x634 <__ultoa_invert+0x8a>
 642:	00 97       	sbiw	r24, 0x00	; 0
 644:	61 05       	cpc	r22, r1
 646:	71 05       	cpc	r23, r1
 648:	08 95       	ret
 64a:	9b 01       	movw	r18, r22
 64c:	ac 01       	movw	r20, r24
 64e:	0a 2e       	mov	r0, r26
 650:	06 94       	lsr	r0
 652:	57 95       	ror	r21
 654:	47 95       	ror	r20
 656:	37 95       	ror	r19
 658:	27 95       	ror	r18
 65a:	ba 95       	dec	r27
 65c:	c9 f7       	brne	.-14     	; 0x650 <__ultoa_invert+0xa6>
 65e:	62 0f       	add	r22, r18
 660:	73 1f       	adc	r23, r19
 662:	84 1f       	adc	r24, r20
 664:	95 1f       	adc	r25, r21
 666:	a0 1d       	adc	r26, r0
 668:	08 95       	ret

0000066a <__mulqi3>:
 66a:	00 24       	eor	r0, r0

0000066c <__mulqi3_loop>:
 66c:	80 fd       	sbrc	r24, 0
 66e:	06 0e       	add	r0, r22
 670:	66 0f       	add	r22, r22
 672:	11 f0       	breq	.+4      	; 0x678 <__mulqi3_exit>
 674:	86 95       	lsr	r24
 676:	d1 f7       	brne	.-12     	; 0x66c <__mulqi3_loop>

00000678 <__mulqi3_exit>:
 678:	80 2d       	mov	r24, r0
 67a:	08 95       	ret

0000067c <__prologue_saves__>:
 67c:	2f 92       	push	r2
 67e:	3f 92       	push	r3
 680:	4f 92       	push	r4
 682:	5f 92       	push	r5
 684:	6f 92       	push	r6
 686:	7f 92       	push	r7
 688:	8f 92       	push	r8
 68a:	9f 92       	push	r9
 68c:	af 92       	push	r10
 68e:	bf 92       	push	r11
 690:	cf 92       	push	r12
 692:	df 92       	push	r13
 694:	ef 92       	push	r14
 696:	ff 92       	push	r15
 698:	0f 93       	push	r16
 69a:	1f 93       	push	r17
 69c:	cf 93       	push	r28
 69e:	df 93       	push	r29
 6a0:	cd b7       	in	r28, 0x3d	; 61
 6a2:	ca 1b       	sub	r28, r26
 6a4:	cd bf       	out	0x3d, r28	; 61
 6a6:	dd 27       	eor	r29, r29
 6a8:	09 94       	ijmp

000006aa <__epilogue_restores__>:
 6aa:	2a 88       	ldd	r2, Y+18	; 0x12
 6ac:	39 88       	ldd	r3, Y+17	; 0x11
 6ae:	48 88       	ldd	r4, Y+16	; 0x10
 6b0:	5f 84       	ldd	r5, Y+15	; 0x0f
 6b2:	6e 84       	ldd	r6, Y+14	; 0x0e
 6b4:	7d 84       	ldd	r7, Y+13	; 0x0d
 6b6:	8c 84       	ldd	r8, Y+12	; 0x0c
 6b8:	9b 84       	ldd	r9, Y+11	; 0x0b
 6ba:	aa 84       	ldd	r10, Y+10	; 0x0a
 6bc:	b9 84       	ldd	r11, Y+9	; 0x09
 6be:	c8 84       	ldd	r12, Y+8	; 0x08
 6c0:	df 80       	ldd	r13, Y+7	; 0x07
 6c2:	ee 80       	ldd	r14, Y+6	; 0x06
 6c4:	fd 80       	ldd	r15, Y+5	; 0x05
 6c6:	0c 81       	ldd	r16, Y+4	; 0x04
 6c8:	1b 81       	ldd	r17, Y+3	; 0x03
 6ca:	aa 81       	ldd	r26, Y+2	; 0x02
 6cc:	d9 81       	ldd	r29, Y+1	; 0x01
 6ce:	ce 0f       	add	r28, r30
 6d0:	cd bf       	out	0x3d, r28	; 61
 6d2:	ca 2f       	mov	r28, r26
 6d4:	08 95       	ret

000006d6 <_exit>:
 6d6:	f8 94       	cli

000006d8 <__stop_program>:
 6d8:	ff cf       	rjmp	.-2      	; 0x6d8 <__stop_program>
