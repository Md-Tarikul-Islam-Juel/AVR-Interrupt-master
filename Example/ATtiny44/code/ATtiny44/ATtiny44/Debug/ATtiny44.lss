
ATtiny44.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  000006f2  00000786  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080008a  0080008a  000007b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000007b0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  0000080c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002d4  00000000  00000000  0000086c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000208  00000000  00000000  00000b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000203  00000000  00000000  00000d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00000f4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000240  00000000  00000000  0000103c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000026c  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  000014e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	92 c0       	rjmp	.+292    	; 0x128 <__vector_1>
   4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
   6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
   8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
   a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
   c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
   e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
  10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
  12:	22 c0       	rjmp	.+68     	; 0x58 <__bad_interrupt>
  14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
  16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
  18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
  1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
  1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
  20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d1 e0       	ldi	r29, 0x01	; 1
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	e2 ef       	ldi	r30, 0xF2	; 242
  36:	f6 e0       	ldi	r31, 0x06	; 6
  38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0
  3e:	aa 38       	cpi	r26, 0x8A	; 138
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <__do_copy_data+0xc>

00000044 <__do_clear_bss>:
  44:	20 e0       	ldi	r18, 0x00	; 0
  46:	aa e8       	ldi	r26, 0x8A	; 138
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
  4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
  4e:	a3 39       	cpi	r26, 0x93	; 147
  50:	b2 07       	cpc	r27, r18
  52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
  54:	09 d0       	rcall	.+18     	; 0x68 <main>
  56:	4b c3       	rjmp	.+1686   	; 0x6ee <_exit>

00000058 <__bad_interrupt>:
  58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <JUEL_ISR>:
    }
}

void JUEL_ISR(void)
{
	state ^=(1<<0);
  5a:	90 91 8a 00 	lds	r25, 0x008A
  5e:	81 e0       	ldi	r24, 0x01	; 1
  60:	89 27       	eor	r24, r25
  62:	80 93 8a 00 	sts	0x008A, r24
  66:	08 95       	ret

00000068 <main>:
void JUEL_ISR(void);//declaration of JUEL_ISR function

uint8_t state=0x00;
int main(void)
{
	attachInterrupt(INT0,JUEL_ISR,RISING);
  68:	44 e3       	ldi	r20, 0x34	; 52
  6a:	6d e2       	ldi	r22, 0x2D	; 45
  6c:	70 e0       	ldi	r23, 0x00	; 0
  6e:	86 e0       	ldi	r24, 0x06	; 6
  70:	39 d0       	rcall	.+114    	; 0xe4 <attachInterrupt>
	DDRA|=(1<<PA0);// OUTPUT bit set
  72:	d0 9a       	sbi	0x1a, 0	; 26

    while(1)
    {
        if(state)
  74:	80 91 8a 00 	lds	r24, 0x008A
  78:	88 23       	and	r24, r24
  7a:	11 f0       	breq	.+4      	; 0x80 <main+0x18>
		{
			PORTA |=(1<<PA0);
  7c:	d8 9a       	sbi	0x1b, 0	; 27
  7e:	fa cf       	rjmp	.-12     	; 0x74 <main+0xc>
		}
		else
		{
			PORTA &=~(1<<PA0);
  80:	d8 98       	cbi	0x1b, 0	; 27
  82:	f8 cf       	rjmp	.-16     	; 0x74 <main+0xc>

00000084 <digitalPinToInterrupt>:
		|| defined(__AVR_ATtiny45__ )\
		|| defined(__AVR_ATtiny85__ )\
		|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
		|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
		|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
	switch(pin)
  84:	86 30       	cpi	r24, 0x06	; 6
  86:	39 f0       	breq	.+14     	; 0x96 <digitalPinToInterrupt+0x12>
	{
		case INT0: return INT0;  //by default for ATtiny25,45,85=INT0=6
		break;
		default: printf("Error: please choose the right sense mode");
  88:	80 e6       	ldi	r24, 0x60	; 96
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	9f 93       	push	r25
  8e:	8f 93       	push	r24
  90:	72 d0       	rcall	.+228    	; 0x176 <printf>
  92:	0f 90       	pop	r0
  94:	0f 90       	pop	r0
	}
	#endif
}
  96:	08 95       	ret

00000098 <INTERRUPT_SENSE_CONTROL>:
		|| defined(__AVR_ATtiny45__ )\
		|| defined(__AVR_ATtiny85__ )\
		|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
		|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
		|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
			if(pin==INT0)
  98:	86 30       	cpi	r24, 0x06	; 6
  9a:	19 f5       	brne	.+70     	; 0xe2 <INTERRUPT_SENSE_CONTROL+0x4a>
			{
				if(DETECT_SENSE==LOW)
  9c:	61 11       	cpse	r22, r1
  9e:	07 c0       	rjmp	.+14     	; 0xae <INTERRUPT_SENSE_CONTROL+0x16>
				{
					MCUCR &= ~(1<<ISC01);
  a0:	85 b7       	in	r24, 0x35	; 53
  a2:	8d 7f       	andi	r24, 0xFD	; 253
  a4:	85 bf       	out	0x35, r24	; 53
					MCUCR &= ~(1<<ISC00);
  a6:	85 b7       	in	r24, 0x35	; 53
  a8:	8e 7f       	andi	r24, 0xFE	; 254
  aa:	85 bf       	out	0x35, r24	; 53
  ac:	08 95       	ret
				}
				else if(DETECT_SENSE==CHANGE)
  ae:	63 33       	cpi	r22, 0x33	; 51
  b0:	39 f4       	brne	.+14     	; 0xc0 <INTERRUPT_SENSE_CONTROL+0x28>
				{
					MCUCR &= ~(1<<ISC01);
  b2:	85 b7       	in	r24, 0x35	; 53
  b4:	8d 7f       	andi	r24, 0xFD	; 253
  b6:	85 bf       	out	0x35, r24	; 53
					MCUCR |= (1<<ISC00);
  b8:	85 b7       	in	r24, 0x35	; 53
  ba:	81 60       	ori	r24, 0x01	; 1
  bc:	85 bf       	out	0x35, r24	; 53
  be:	08 95       	ret
				}
				else if(DETECT_SENSE==FALLING)
  c0:	65 33       	cpi	r22, 0x35	; 53
  c2:	39 f4       	brne	.+14     	; 0xd2 <INTERRUPT_SENSE_CONTROL+0x3a>
				{
					MCUCR |= (1<<ISC01);
  c4:	85 b7       	in	r24, 0x35	; 53
  c6:	82 60       	ori	r24, 0x02	; 2
  c8:	85 bf       	out	0x35, r24	; 53
					MCUCR &= ~(1<<ISC00);
  ca:	85 b7       	in	r24, 0x35	; 53
  cc:	8e 7f       	andi	r24, 0xFE	; 254
  ce:	85 bf       	out	0x35, r24	; 53
  d0:	08 95       	ret
				}
				else if(DETECT_SENSE==RISING)
  d2:	64 33       	cpi	r22, 0x34	; 52
  d4:	31 f4       	brne	.+12     	; 0xe2 <INTERRUPT_SENSE_CONTROL+0x4a>
				{
					MCUCR |= (1<<ISC01);
  d6:	85 b7       	in	r24, 0x35	; 53
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	85 bf       	out	0x35, r24	; 53
					MCUCR |= (1<<ISC00);
  dc:	85 b7       	in	r24, 0x35	; 53
  de:	81 60       	ori	r24, 0x01	; 1
  e0:	85 bf       	out	0x35, r24	; 53
  e2:	08 95       	ret

000000e4 <attachInterrupt>:
//
//     Atmega25,45,85,24,44,84 :
//     		   		       INT0(LOW,CHANGE,RISING,FALLING)

void attachInterrupt(uint8_t EXTERNAL_INTERRUPT_PIN, void (*received_function_pointer)(), uint8_t INTERRUPT_SENSE)
{	
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	18 2f       	mov	r17, r24
  ee:	eb 01       	movw	r28, r22
  f0:	04 2f       	mov	r16, r20
		|| defined(__AVR_ATtiny45__ )\
	    || defined(__AVR_ATtiny85__ )\
		|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
		|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
		|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
			sei();// To enable Global interrupt bit I
  f2:	78 94       	sei
			INTERRUPT_SENSE_CONTROL(digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN), INTERRUPT_SENSE);//this function set the interrupt sense mode(LOW,CHAGNE,RISING,FALLING)
  f4:	c7 df       	rcall	.-114    	; 0x84 <digitalPinToInterrupt>
  f6:	60 2f       	mov	r22, r16
  f8:	cf df       	rcall	.-98     	; 0x98 <INTERRUPT_SENSE_CONTROL>
			GIMSK |= (1<<digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN));// External interrupt pin select (INT0,INT1,INT2)//NB: dont take it before INTERRUPT_SENSE_CONTROL() function because when you will use pull down network initally it call ISR() to take main action.
  fa:	0b b7       	in	r16, 0x3b	; 59
  fc:	81 2f       	mov	r24, r17
  fe:	c2 df       	rcall	.-124    	; 0x84 <digitalPinToInterrupt>
 100:	21 e0       	ldi	r18, 0x01	; 1
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	a9 01       	movw	r20, r18
 106:	02 c0       	rjmp	.+4      	; 0x10c <attachInterrupt+0x28>
 108:	44 0f       	add	r20, r20
 10a:	55 1f       	adc	r21, r21
 10c:	8a 95       	dec	r24
 10e:	e2 f7       	brpl	.-8      	; 0x108 <attachInterrupt+0x24>
 110:	ca 01       	movw	r24, r20
 112:	80 2b       	or	r24, r16
 114:	8b bf       	out	0x3b, r24	; 59
			pointer_of_received_function_pointer=received_function_pointer;//here we send the address of (received_function_pointer) from main file to (address_of_receive_function) which is a void type function pointer [NB: the purpose is to run the received function inside the ISR() ]
 116:	d0 93 8c 00 	sts	0x008C, r29
 11a:	c0 93 8b 00 	sts	0x008B, r28
			
    #endif
	
}
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	1f 91       	pop	r17
 124:	0f 91       	pop	r16
 126:	08 95       	ret

00000128 <__vector_1>:
	|| defined(__AVR_ATtiny85__ )\
	|| defined(__AVR_ATtiny24__ ) || defined(__AVR_ATtiny24A__ )\
	|| defined(__AVR_ATtiny44__ ) || defined(__AVR_ATtiny44A__ )\
	|| defined(__AVR_ATtiny84__ ) || defined(__AVR_ATtiny84A__ )
		ISR(INT0_vect)
		{
 128:	1f 92       	push	r1
 12a:	0f 92       	push	r0
 12c:	0f b6       	in	r0, 0x3f	; 63
 12e:	0f 92       	push	r0
 130:	11 24       	eor	r1, r1
 132:	2f 93       	push	r18
 134:	3f 93       	push	r19
 136:	4f 93       	push	r20
 138:	5f 93       	push	r21
 13a:	6f 93       	push	r22
 13c:	7f 93       	push	r23
 13e:	8f 93       	push	r24
 140:	9f 93       	push	r25
 142:	af 93       	push	r26
 144:	bf 93       	push	r27
 146:	ef 93       	push	r30
 148:	ff 93       	push	r31
			pointer_of_received_function_pointer();
 14a:	e0 91 8b 00 	lds	r30, 0x008B
 14e:	f0 91 8c 00 	lds	r31, 0x008C
 152:	09 95       	icall
		}
 154:	ff 91       	pop	r31
 156:	ef 91       	pop	r30
 158:	bf 91       	pop	r27
 15a:	af 91       	pop	r26
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	7f 91       	pop	r23
 162:	6f 91       	pop	r22
 164:	5f 91       	pop	r21
 166:	4f 91       	pop	r20
 168:	3f 91       	pop	r19
 16a:	2f 91       	pop	r18
 16c:	0f 90       	pop	r0
 16e:	0f be       	out	0x3f, r0	; 63
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <printf>:
 176:	a0 e0       	ldi	r26, 0x00	; 0
 178:	b0 e0       	ldi	r27, 0x00	; 0
 17a:	e0 ec       	ldi	r30, 0xC0	; 192
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	90 c2       	rjmp	.+1312   	; 0x6a0 <__prologue_saves__+0x20>
 180:	fe 01       	movw	r30, r28
 182:	35 96       	adiw	r30, 0x05	; 5
 184:	61 91       	ld	r22, Z+
 186:	71 91       	ld	r23, Z+
 188:	af 01       	movw	r20, r30
 18a:	80 91 8f 00 	lds	r24, 0x008F
 18e:	90 91 90 00 	lds	r25, 0x0090
 192:	02 d0       	rcall	.+4      	; 0x198 <vfprintf>
 194:	e2 e0       	ldi	r30, 0x02	; 2
 196:	a0 c2       	rjmp	.+1344   	; 0x6d8 <__epilogue_restores__+0x20>

00000198 <vfprintf>:
 198:	ac e0       	ldi	r26, 0x0C	; 12
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	e1 ed       	ldi	r30, 0xD1	; 209
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	6f c2       	rjmp	.+1246   	; 0x680 <__prologue_saves__>
 1a2:	7c 01       	movw	r14, r24
 1a4:	6b 01       	movw	r12, r22
 1a6:	8a 01       	movw	r16, r20
 1a8:	fc 01       	movw	r30, r24
 1aa:	17 82       	std	Z+7, r1	; 0x07
 1ac:	16 82       	std	Z+6, r1	; 0x06
 1ae:	83 81       	ldd	r24, Z+3	; 0x03
 1b0:	81 ff       	sbrs	r24, 1
 1b2:	b0 c1       	rjmp	.+864    	; 0x514 <vfprintf+0x37c>
 1b4:	ce 01       	movw	r24, r28
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	4c 01       	movw	r8, r24
 1ba:	f7 01       	movw	r30, r14
 1bc:	93 81       	ldd	r25, Z+3	; 0x03
 1be:	f6 01       	movw	r30, r12
 1c0:	93 fd       	sbrc	r25, 3
 1c2:	85 91       	lpm	r24, Z+
 1c4:	93 ff       	sbrs	r25, 3
 1c6:	81 91       	ld	r24, Z+
 1c8:	6f 01       	movw	r12, r30
 1ca:	88 23       	and	r24, r24
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <vfprintf+0x38>
 1ce:	9e c1       	rjmp	.+828    	; 0x50c <vfprintf+0x374>
 1d0:	85 32       	cpi	r24, 0x25	; 37
 1d2:	39 f4       	brne	.+14     	; 0x1e2 <vfprintf+0x4a>
 1d4:	93 fd       	sbrc	r25, 3
 1d6:	85 91       	lpm	r24, Z+
 1d8:	93 ff       	sbrs	r25, 3
 1da:	81 91       	ld	r24, Z+
 1dc:	6f 01       	movw	r12, r30
 1de:	85 32       	cpi	r24, 0x25	; 37
 1e0:	21 f4       	brne	.+8      	; 0x1ea <vfprintf+0x52>
 1e2:	b7 01       	movw	r22, r14
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	b1 d1       	rcall	.+866    	; 0x54a <fputc>
 1e8:	e8 cf       	rjmp	.-48     	; 0x1ba <vfprintf+0x22>
 1ea:	51 2c       	mov	r5, r1
 1ec:	31 2c       	mov	r3, r1
 1ee:	20 e0       	ldi	r18, 0x00	; 0
 1f0:	20 32       	cpi	r18, 0x20	; 32
 1f2:	a0 f4       	brcc	.+40     	; 0x21c <vfprintf+0x84>
 1f4:	8b 32       	cpi	r24, 0x2B	; 43
 1f6:	69 f0       	breq	.+26     	; 0x212 <vfprintf+0x7a>
 1f8:	30 f4       	brcc	.+12     	; 0x206 <vfprintf+0x6e>
 1fa:	80 32       	cpi	r24, 0x20	; 32
 1fc:	59 f0       	breq	.+22     	; 0x214 <vfprintf+0x7c>
 1fe:	83 32       	cpi	r24, 0x23	; 35
 200:	69 f4       	brne	.+26     	; 0x21c <vfprintf+0x84>
 202:	20 61       	ori	r18, 0x10	; 16
 204:	2c c0       	rjmp	.+88     	; 0x25e <vfprintf+0xc6>
 206:	8d 32       	cpi	r24, 0x2D	; 45
 208:	39 f0       	breq	.+14     	; 0x218 <vfprintf+0x80>
 20a:	80 33       	cpi	r24, 0x30	; 48
 20c:	39 f4       	brne	.+14     	; 0x21c <vfprintf+0x84>
 20e:	21 60       	ori	r18, 0x01	; 1
 210:	26 c0       	rjmp	.+76     	; 0x25e <vfprintf+0xc6>
 212:	22 60       	ori	r18, 0x02	; 2
 214:	24 60       	ori	r18, 0x04	; 4
 216:	23 c0       	rjmp	.+70     	; 0x25e <vfprintf+0xc6>
 218:	28 60       	ori	r18, 0x08	; 8
 21a:	21 c0       	rjmp	.+66     	; 0x25e <vfprintf+0xc6>
 21c:	27 fd       	sbrc	r18, 7
 21e:	27 c0       	rjmp	.+78     	; 0x26e <vfprintf+0xd6>
 220:	30 ed       	ldi	r19, 0xD0	; 208
 222:	38 0f       	add	r19, r24
 224:	3a 30       	cpi	r19, 0x0A	; 10
 226:	78 f4       	brcc	.+30     	; 0x246 <vfprintf+0xae>
 228:	26 ff       	sbrs	r18, 6
 22a:	06 c0       	rjmp	.+12     	; 0x238 <vfprintf+0xa0>
 22c:	85 2d       	mov	r24, r5
 22e:	6a e0       	ldi	r22, 0x0A	; 10
 230:	1e d2       	rcall	.+1084   	; 0x66e <__mulqi3>
 232:	58 2e       	mov	r5, r24
 234:	53 0e       	add	r5, r19
 236:	13 c0       	rjmp	.+38     	; 0x25e <vfprintf+0xc6>
 238:	83 2d       	mov	r24, r3
 23a:	6a e0       	ldi	r22, 0x0A	; 10
 23c:	18 d2       	rcall	.+1072   	; 0x66e <__mulqi3>
 23e:	38 2e       	mov	r3, r24
 240:	33 0e       	add	r3, r19
 242:	20 62       	ori	r18, 0x20	; 32
 244:	0c c0       	rjmp	.+24     	; 0x25e <vfprintf+0xc6>
 246:	8e 32       	cpi	r24, 0x2E	; 46
 248:	21 f4       	brne	.+8      	; 0x252 <vfprintf+0xba>
 24a:	26 fd       	sbrc	r18, 6
 24c:	5f c1       	rjmp	.+702    	; 0x50c <vfprintf+0x374>
 24e:	20 64       	ori	r18, 0x40	; 64
 250:	06 c0       	rjmp	.+12     	; 0x25e <vfprintf+0xc6>
 252:	8c 36       	cpi	r24, 0x6C	; 108
 254:	11 f4       	brne	.+4      	; 0x25a <vfprintf+0xc2>
 256:	20 68       	ori	r18, 0x80	; 128
 258:	02 c0       	rjmp	.+4      	; 0x25e <vfprintf+0xc6>
 25a:	88 36       	cpi	r24, 0x68	; 104
 25c:	41 f4       	brne	.+16     	; 0x26e <vfprintf+0xd6>
 25e:	f6 01       	movw	r30, r12
 260:	93 fd       	sbrc	r25, 3
 262:	85 91       	lpm	r24, Z+
 264:	93 ff       	sbrs	r25, 3
 266:	81 91       	ld	r24, Z+
 268:	6f 01       	movw	r12, r30
 26a:	81 11       	cpse	r24, r1
 26c:	c1 cf       	rjmp	.-126    	; 0x1f0 <vfprintf+0x58>
 26e:	98 2f       	mov	r25, r24
 270:	9f 7d       	andi	r25, 0xDF	; 223
 272:	95 54       	subi	r25, 0x45	; 69
 274:	93 30       	cpi	r25, 0x03	; 3
 276:	28 f4       	brcc	.+10     	; 0x282 <vfprintf+0xea>
 278:	0c 5f       	subi	r16, 0xFC	; 252
 27a:	1f 4f       	sbci	r17, 0xFF	; 255
 27c:	ff e3       	ldi	r31, 0x3F	; 63
 27e:	f9 83       	std	Y+1, r31	; 0x01
 280:	0d c0       	rjmp	.+26     	; 0x29c <vfprintf+0x104>
 282:	83 36       	cpi	r24, 0x63	; 99
 284:	31 f0       	breq	.+12     	; 0x292 <vfprintf+0xfa>
 286:	83 37       	cpi	r24, 0x73	; 115
 288:	71 f0       	breq	.+28     	; 0x2a6 <vfprintf+0x10e>
 28a:	83 35       	cpi	r24, 0x53	; 83
 28c:	09 f0       	breq	.+2      	; 0x290 <vfprintf+0xf8>
 28e:	57 c0       	rjmp	.+174    	; 0x33e <vfprintf+0x1a6>
 290:	21 c0       	rjmp	.+66     	; 0x2d4 <vfprintf+0x13c>
 292:	f8 01       	movw	r30, r16
 294:	80 81       	ld	r24, Z
 296:	89 83       	std	Y+1, r24	; 0x01
 298:	0e 5f       	subi	r16, 0xFE	; 254
 29a:	1f 4f       	sbci	r17, 0xFF	; 255
 29c:	44 24       	eor	r4, r4
 29e:	43 94       	inc	r4
 2a0:	51 2c       	mov	r5, r1
 2a2:	54 01       	movw	r10, r8
 2a4:	14 c0       	rjmp	.+40     	; 0x2ce <vfprintf+0x136>
 2a6:	38 01       	movw	r6, r16
 2a8:	f2 e0       	ldi	r31, 0x02	; 2
 2aa:	6f 0e       	add	r6, r31
 2ac:	71 1c       	adc	r7, r1
 2ae:	f8 01       	movw	r30, r16
 2b0:	a0 80       	ld	r10, Z
 2b2:	b1 80       	ldd	r11, Z+1	; 0x01
 2b4:	26 ff       	sbrs	r18, 6
 2b6:	03 c0       	rjmp	.+6      	; 0x2be <vfprintf+0x126>
 2b8:	65 2d       	mov	r22, r5
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <vfprintf+0x12a>
 2be:	6f ef       	ldi	r22, 0xFF	; 255
 2c0:	7f ef       	ldi	r23, 0xFF	; 255
 2c2:	c5 01       	movw	r24, r10
 2c4:	2c 87       	std	Y+12, r18	; 0x0c
 2c6:	36 d1       	rcall	.+620    	; 0x534 <strnlen>
 2c8:	2c 01       	movw	r4, r24
 2ca:	83 01       	movw	r16, r6
 2cc:	2c 85       	ldd	r18, Y+12	; 0x0c
 2ce:	2f 77       	andi	r18, 0x7F	; 127
 2d0:	22 2e       	mov	r2, r18
 2d2:	16 c0       	rjmp	.+44     	; 0x300 <vfprintf+0x168>
 2d4:	38 01       	movw	r6, r16
 2d6:	f2 e0       	ldi	r31, 0x02	; 2
 2d8:	6f 0e       	add	r6, r31
 2da:	71 1c       	adc	r7, r1
 2dc:	f8 01       	movw	r30, r16
 2de:	a0 80       	ld	r10, Z
 2e0:	b1 80       	ldd	r11, Z+1	; 0x01
 2e2:	26 ff       	sbrs	r18, 6
 2e4:	03 c0       	rjmp	.+6      	; 0x2ec <vfprintf+0x154>
 2e6:	65 2d       	mov	r22, r5
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <vfprintf+0x158>
 2ec:	6f ef       	ldi	r22, 0xFF	; 255
 2ee:	7f ef       	ldi	r23, 0xFF	; 255
 2f0:	c5 01       	movw	r24, r10
 2f2:	2c 87       	std	Y+12, r18	; 0x0c
 2f4:	14 d1       	rcall	.+552    	; 0x51e <strnlen_P>
 2f6:	2c 01       	movw	r4, r24
 2f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 2fa:	20 68       	ori	r18, 0x80	; 128
 2fc:	22 2e       	mov	r2, r18
 2fe:	83 01       	movw	r16, r6
 300:	23 fc       	sbrc	r2, 3
 302:	19 c0       	rjmp	.+50     	; 0x336 <vfprintf+0x19e>
 304:	83 2d       	mov	r24, r3
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	48 16       	cp	r4, r24
 30a:	59 06       	cpc	r5, r25
 30c:	a0 f4       	brcc	.+40     	; 0x336 <vfprintf+0x19e>
 30e:	b7 01       	movw	r22, r14
 310:	80 e2       	ldi	r24, 0x20	; 32
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	1a d1       	rcall	.+564    	; 0x54a <fputc>
 316:	3a 94       	dec	r3
 318:	f5 cf       	rjmp	.-22     	; 0x304 <vfprintf+0x16c>
 31a:	f5 01       	movw	r30, r10
 31c:	27 fc       	sbrc	r2, 7
 31e:	85 91       	lpm	r24, Z+
 320:	27 fe       	sbrs	r2, 7
 322:	81 91       	ld	r24, Z+
 324:	5f 01       	movw	r10, r30
 326:	b7 01       	movw	r22, r14
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0f d1       	rcall	.+542    	; 0x54a <fputc>
 32c:	31 10       	cpse	r3, r1
 32e:	3a 94       	dec	r3
 330:	f1 e0       	ldi	r31, 0x01	; 1
 332:	4f 1a       	sub	r4, r31
 334:	51 08       	sbc	r5, r1
 336:	41 14       	cp	r4, r1
 338:	51 04       	cpc	r5, r1
 33a:	79 f7       	brne	.-34     	; 0x31a <vfprintf+0x182>
 33c:	de c0       	rjmp	.+444    	; 0x4fa <vfprintf+0x362>
 33e:	84 36       	cpi	r24, 0x64	; 100
 340:	11 f0       	breq	.+4      	; 0x346 <vfprintf+0x1ae>
 342:	89 36       	cpi	r24, 0x69	; 105
 344:	31 f5       	brne	.+76     	; 0x392 <vfprintf+0x1fa>
 346:	f8 01       	movw	r30, r16
 348:	27 ff       	sbrs	r18, 7
 34a:	07 c0       	rjmp	.+14     	; 0x35a <vfprintf+0x1c2>
 34c:	60 81       	ld	r22, Z
 34e:	71 81       	ldd	r23, Z+1	; 0x01
 350:	82 81       	ldd	r24, Z+2	; 0x02
 352:	93 81       	ldd	r25, Z+3	; 0x03
 354:	0c 5f       	subi	r16, 0xFC	; 252
 356:	1f 4f       	sbci	r17, 0xFF	; 255
 358:	08 c0       	rjmp	.+16     	; 0x36a <vfprintf+0x1d2>
 35a:	60 81       	ld	r22, Z
 35c:	71 81       	ldd	r23, Z+1	; 0x01
 35e:	88 27       	eor	r24, r24
 360:	77 fd       	sbrc	r23, 7
 362:	80 95       	com	r24
 364:	98 2f       	mov	r25, r24
 366:	0e 5f       	subi	r16, 0xFE	; 254
 368:	1f 4f       	sbci	r17, 0xFF	; 255
 36a:	2f 76       	andi	r18, 0x6F	; 111
 36c:	b2 2e       	mov	r11, r18
 36e:	97 ff       	sbrs	r25, 7
 370:	09 c0       	rjmp	.+18     	; 0x384 <vfprintf+0x1ec>
 372:	90 95       	com	r25
 374:	80 95       	com	r24
 376:	70 95       	com	r23
 378:	61 95       	neg	r22
 37a:	7f 4f       	sbci	r23, 0xFF	; 255
 37c:	8f 4f       	sbci	r24, 0xFF	; 255
 37e:	9f 4f       	sbci	r25, 0xFF	; 255
 380:	20 68       	ori	r18, 0x80	; 128
 382:	b2 2e       	mov	r11, r18
 384:	2a e0       	ldi	r18, 0x0A	; 10
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	a4 01       	movw	r20, r8
 38a:	11 d1       	rcall	.+546    	; 0x5ae <__ultoa_invert>
 38c:	a8 2e       	mov	r10, r24
 38e:	a8 18       	sub	r10, r8
 390:	43 c0       	rjmp	.+134    	; 0x418 <vfprintf+0x280>
 392:	85 37       	cpi	r24, 0x75	; 117
 394:	29 f4       	brne	.+10     	; 0x3a0 <vfprintf+0x208>
 396:	2f 7e       	andi	r18, 0xEF	; 239
 398:	b2 2e       	mov	r11, r18
 39a:	2a e0       	ldi	r18, 0x0A	; 10
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	25 c0       	rjmp	.+74     	; 0x3ea <vfprintf+0x252>
 3a0:	f2 2f       	mov	r31, r18
 3a2:	f9 7f       	andi	r31, 0xF9	; 249
 3a4:	bf 2e       	mov	r11, r31
 3a6:	8f 36       	cpi	r24, 0x6F	; 111
 3a8:	c1 f0       	breq	.+48     	; 0x3da <vfprintf+0x242>
 3aa:	18 f4       	brcc	.+6      	; 0x3b2 <vfprintf+0x21a>
 3ac:	88 35       	cpi	r24, 0x58	; 88
 3ae:	79 f0       	breq	.+30     	; 0x3ce <vfprintf+0x236>
 3b0:	ad c0       	rjmp	.+346    	; 0x50c <vfprintf+0x374>
 3b2:	80 37       	cpi	r24, 0x70	; 112
 3b4:	19 f0       	breq	.+6      	; 0x3bc <vfprintf+0x224>
 3b6:	88 37       	cpi	r24, 0x78	; 120
 3b8:	21 f0       	breq	.+8      	; 0x3c2 <vfprintf+0x22a>
 3ba:	a8 c0       	rjmp	.+336    	; 0x50c <vfprintf+0x374>
 3bc:	2f 2f       	mov	r18, r31
 3be:	20 61       	ori	r18, 0x10	; 16
 3c0:	b2 2e       	mov	r11, r18
 3c2:	b4 fe       	sbrs	r11, 4
 3c4:	0d c0       	rjmp	.+26     	; 0x3e0 <vfprintf+0x248>
 3c6:	8b 2d       	mov	r24, r11
 3c8:	84 60       	ori	r24, 0x04	; 4
 3ca:	b8 2e       	mov	r11, r24
 3cc:	09 c0       	rjmp	.+18     	; 0x3e0 <vfprintf+0x248>
 3ce:	24 ff       	sbrs	r18, 4
 3d0:	0a c0       	rjmp	.+20     	; 0x3e6 <vfprintf+0x24e>
 3d2:	9f 2f       	mov	r25, r31
 3d4:	96 60       	ori	r25, 0x06	; 6
 3d6:	b9 2e       	mov	r11, r25
 3d8:	06 c0       	rjmp	.+12     	; 0x3e6 <vfprintf+0x24e>
 3da:	28 e0       	ldi	r18, 0x08	; 8
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	05 c0       	rjmp	.+10     	; 0x3ea <vfprintf+0x252>
 3e0:	20 e1       	ldi	r18, 0x10	; 16
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <vfprintf+0x252>
 3e6:	20 e1       	ldi	r18, 0x10	; 16
 3e8:	32 e0       	ldi	r19, 0x02	; 2
 3ea:	f8 01       	movw	r30, r16
 3ec:	b7 fe       	sbrs	r11, 7
 3ee:	07 c0       	rjmp	.+14     	; 0x3fe <vfprintf+0x266>
 3f0:	60 81       	ld	r22, Z
 3f2:	71 81       	ldd	r23, Z+1	; 0x01
 3f4:	82 81       	ldd	r24, Z+2	; 0x02
 3f6:	93 81       	ldd	r25, Z+3	; 0x03
 3f8:	0c 5f       	subi	r16, 0xFC	; 252
 3fa:	1f 4f       	sbci	r17, 0xFF	; 255
 3fc:	06 c0       	rjmp	.+12     	; 0x40a <vfprintf+0x272>
 3fe:	60 81       	ld	r22, Z
 400:	71 81       	ldd	r23, Z+1	; 0x01
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 5f       	subi	r16, 0xFE	; 254
 408:	1f 4f       	sbci	r17, 0xFF	; 255
 40a:	a4 01       	movw	r20, r8
 40c:	d0 d0       	rcall	.+416    	; 0x5ae <__ultoa_invert>
 40e:	a8 2e       	mov	r10, r24
 410:	a8 18       	sub	r10, r8
 412:	fb 2d       	mov	r31, r11
 414:	ff 77       	andi	r31, 0x7F	; 127
 416:	bf 2e       	mov	r11, r31
 418:	b6 fe       	sbrs	r11, 6
 41a:	0b c0       	rjmp	.+22     	; 0x432 <vfprintf+0x29a>
 41c:	2b 2d       	mov	r18, r11
 41e:	2e 7f       	andi	r18, 0xFE	; 254
 420:	a5 14       	cp	r10, r5
 422:	50 f4       	brcc	.+20     	; 0x438 <vfprintf+0x2a0>
 424:	b4 fe       	sbrs	r11, 4
 426:	0a c0       	rjmp	.+20     	; 0x43c <vfprintf+0x2a4>
 428:	b2 fc       	sbrc	r11, 2
 42a:	08 c0       	rjmp	.+16     	; 0x43c <vfprintf+0x2a4>
 42c:	2b 2d       	mov	r18, r11
 42e:	2e 7e       	andi	r18, 0xEE	; 238
 430:	05 c0       	rjmp	.+10     	; 0x43c <vfprintf+0x2a4>
 432:	7a 2c       	mov	r7, r10
 434:	2b 2d       	mov	r18, r11
 436:	03 c0       	rjmp	.+6      	; 0x43e <vfprintf+0x2a6>
 438:	7a 2c       	mov	r7, r10
 43a:	01 c0       	rjmp	.+2      	; 0x43e <vfprintf+0x2a6>
 43c:	75 2c       	mov	r7, r5
 43e:	24 ff       	sbrs	r18, 4
 440:	0d c0       	rjmp	.+26     	; 0x45c <vfprintf+0x2c4>
 442:	fe 01       	movw	r30, r28
 444:	ea 0d       	add	r30, r10
 446:	f1 1d       	adc	r31, r1
 448:	80 81       	ld	r24, Z
 44a:	80 33       	cpi	r24, 0x30	; 48
 44c:	11 f4       	brne	.+4      	; 0x452 <vfprintf+0x2ba>
 44e:	29 7e       	andi	r18, 0xE9	; 233
 450:	09 c0       	rjmp	.+18     	; 0x464 <vfprintf+0x2cc>
 452:	22 ff       	sbrs	r18, 2
 454:	06 c0       	rjmp	.+12     	; 0x462 <vfprintf+0x2ca>
 456:	73 94       	inc	r7
 458:	73 94       	inc	r7
 45a:	04 c0       	rjmp	.+8      	; 0x464 <vfprintf+0x2cc>
 45c:	82 2f       	mov	r24, r18
 45e:	86 78       	andi	r24, 0x86	; 134
 460:	09 f0       	breq	.+2      	; 0x464 <vfprintf+0x2cc>
 462:	73 94       	inc	r7
 464:	23 fd       	sbrc	r18, 3
 466:	12 c0       	rjmp	.+36     	; 0x48c <vfprintf+0x2f4>
 468:	20 ff       	sbrs	r18, 0
 46a:	06 c0       	rjmp	.+12     	; 0x478 <vfprintf+0x2e0>
 46c:	5a 2c       	mov	r5, r10
 46e:	73 14       	cp	r7, r3
 470:	18 f4       	brcc	.+6      	; 0x478 <vfprintf+0x2e0>
 472:	53 0c       	add	r5, r3
 474:	57 18       	sub	r5, r7
 476:	73 2c       	mov	r7, r3
 478:	73 14       	cp	r7, r3
 47a:	60 f4       	brcc	.+24     	; 0x494 <vfprintf+0x2fc>
 47c:	b7 01       	movw	r22, r14
 47e:	80 e2       	ldi	r24, 0x20	; 32
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	2c 87       	std	Y+12, r18	; 0x0c
 484:	62 d0       	rcall	.+196    	; 0x54a <fputc>
 486:	73 94       	inc	r7
 488:	2c 85       	ldd	r18, Y+12	; 0x0c
 48a:	f6 cf       	rjmp	.-20     	; 0x478 <vfprintf+0x2e0>
 48c:	73 14       	cp	r7, r3
 48e:	10 f4       	brcc	.+4      	; 0x494 <vfprintf+0x2fc>
 490:	37 18       	sub	r3, r7
 492:	01 c0       	rjmp	.+2      	; 0x496 <vfprintf+0x2fe>
 494:	31 2c       	mov	r3, r1
 496:	24 ff       	sbrs	r18, 4
 498:	11 c0       	rjmp	.+34     	; 0x4bc <vfprintf+0x324>
 49a:	b7 01       	movw	r22, r14
 49c:	80 e3       	ldi	r24, 0x30	; 48
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	2c 87       	std	Y+12, r18	; 0x0c
 4a2:	53 d0       	rcall	.+166    	; 0x54a <fputc>
 4a4:	2c 85       	ldd	r18, Y+12	; 0x0c
 4a6:	22 ff       	sbrs	r18, 2
 4a8:	16 c0       	rjmp	.+44     	; 0x4d6 <vfprintf+0x33e>
 4aa:	21 ff       	sbrs	r18, 1
 4ac:	03 c0       	rjmp	.+6      	; 0x4b4 <vfprintf+0x31c>
 4ae:	88 e5       	ldi	r24, 0x58	; 88
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <vfprintf+0x320>
 4b4:	88 e7       	ldi	r24, 0x78	; 120
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	b7 01       	movw	r22, r14
 4ba:	0c c0       	rjmp	.+24     	; 0x4d4 <vfprintf+0x33c>
 4bc:	82 2f       	mov	r24, r18
 4be:	86 78       	andi	r24, 0x86	; 134
 4c0:	51 f0       	breq	.+20     	; 0x4d6 <vfprintf+0x33e>
 4c2:	21 fd       	sbrc	r18, 1
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <vfprintf+0x332>
 4c6:	80 e2       	ldi	r24, 0x20	; 32
 4c8:	01 c0       	rjmp	.+2      	; 0x4cc <vfprintf+0x334>
 4ca:	8b e2       	ldi	r24, 0x2B	; 43
 4cc:	27 fd       	sbrc	r18, 7
 4ce:	8d e2       	ldi	r24, 0x2D	; 45
 4d0:	b7 01       	movw	r22, r14
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	3a d0       	rcall	.+116    	; 0x54a <fputc>
 4d6:	a5 14       	cp	r10, r5
 4d8:	30 f4       	brcc	.+12     	; 0x4e6 <vfprintf+0x34e>
 4da:	b7 01       	movw	r22, r14
 4dc:	80 e3       	ldi	r24, 0x30	; 48
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	34 d0       	rcall	.+104    	; 0x54a <fputc>
 4e2:	5a 94       	dec	r5
 4e4:	f8 cf       	rjmp	.-16     	; 0x4d6 <vfprintf+0x33e>
 4e6:	aa 94       	dec	r10
 4e8:	f4 01       	movw	r30, r8
 4ea:	ea 0d       	add	r30, r10
 4ec:	f1 1d       	adc	r31, r1
 4ee:	80 81       	ld	r24, Z
 4f0:	b7 01       	movw	r22, r14
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	2a d0       	rcall	.+84     	; 0x54a <fputc>
 4f6:	a1 10       	cpse	r10, r1
 4f8:	f6 cf       	rjmp	.-20     	; 0x4e6 <vfprintf+0x34e>
 4fa:	33 20       	and	r3, r3
 4fc:	09 f4       	brne	.+2      	; 0x500 <vfprintf+0x368>
 4fe:	5d ce       	rjmp	.-838    	; 0x1ba <vfprintf+0x22>
 500:	b7 01       	movw	r22, r14
 502:	80 e2       	ldi	r24, 0x20	; 32
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	21 d0       	rcall	.+66     	; 0x54a <fputc>
 508:	3a 94       	dec	r3
 50a:	f7 cf       	rjmp	.-18     	; 0x4fa <vfprintf+0x362>
 50c:	f7 01       	movw	r30, r14
 50e:	86 81       	ldd	r24, Z+6	; 0x06
 510:	97 81       	ldd	r25, Z+7	; 0x07
 512:	02 c0       	rjmp	.+4      	; 0x518 <vfprintf+0x380>
 514:	8f ef       	ldi	r24, 0xFF	; 255
 516:	9f ef       	ldi	r25, 0xFF	; 255
 518:	2c 96       	adiw	r28, 0x0c	; 12
 51a:	e2 e1       	ldi	r30, 0x12	; 18
 51c:	cd c0       	rjmp	.+410    	; 0x6b8 <__epilogue_restores__>

0000051e <strnlen_P>:
 51e:	fc 01       	movw	r30, r24
 520:	05 90       	lpm	r0, Z+
 522:	61 50       	subi	r22, 0x01	; 1
 524:	70 40       	sbci	r23, 0x00	; 0
 526:	01 10       	cpse	r0, r1
 528:	d8 f7       	brcc	.-10     	; 0x520 <strnlen_P+0x2>
 52a:	80 95       	com	r24
 52c:	90 95       	com	r25
 52e:	8e 0f       	add	r24, r30
 530:	9f 1f       	adc	r25, r31
 532:	08 95       	ret

00000534 <strnlen>:
 534:	fc 01       	movw	r30, r24
 536:	61 50       	subi	r22, 0x01	; 1
 538:	70 40       	sbci	r23, 0x00	; 0
 53a:	01 90       	ld	r0, Z+
 53c:	01 10       	cpse	r0, r1
 53e:	d8 f7       	brcc	.-10     	; 0x536 <strnlen+0x2>
 540:	80 95       	com	r24
 542:	90 95       	com	r25
 544:	8e 0f       	add	r24, r30
 546:	9f 1f       	adc	r25, r31
 548:	08 95       	ret

0000054a <fputc>:
 54a:	0f 93       	push	r16
 54c:	1f 93       	push	r17
 54e:	cf 93       	push	r28
 550:	df 93       	push	r29
 552:	18 2f       	mov	r17, r24
 554:	09 2f       	mov	r16, r25
 556:	eb 01       	movw	r28, r22
 558:	8b 81       	ldd	r24, Y+3	; 0x03
 55a:	81 fd       	sbrc	r24, 1
 55c:	03 c0       	rjmp	.+6      	; 0x564 <fputc+0x1a>
 55e:	8f ef       	ldi	r24, 0xFF	; 255
 560:	9f ef       	ldi	r25, 0xFF	; 255
 562:	20 c0       	rjmp	.+64     	; 0x5a4 <fputc+0x5a>
 564:	82 ff       	sbrs	r24, 2
 566:	10 c0       	rjmp	.+32     	; 0x588 <fputc+0x3e>
 568:	4e 81       	ldd	r20, Y+6	; 0x06
 56a:	5f 81       	ldd	r21, Y+7	; 0x07
 56c:	2c 81       	ldd	r18, Y+4	; 0x04
 56e:	3d 81       	ldd	r19, Y+5	; 0x05
 570:	42 17       	cp	r20, r18
 572:	53 07       	cpc	r21, r19
 574:	7c f4       	brge	.+30     	; 0x594 <fputc+0x4a>
 576:	e8 81       	ld	r30, Y
 578:	f9 81       	ldd	r31, Y+1	; 0x01
 57a:	9f 01       	movw	r18, r30
 57c:	2f 5f       	subi	r18, 0xFF	; 255
 57e:	3f 4f       	sbci	r19, 0xFF	; 255
 580:	39 83       	std	Y+1, r19	; 0x01
 582:	28 83       	st	Y, r18
 584:	10 83       	st	Z, r17
 586:	06 c0       	rjmp	.+12     	; 0x594 <fputc+0x4a>
 588:	e8 85       	ldd	r30, Y+8	; 0x08
 58a:	f9 85       	ldd	r31, Y+9	; 0x09
 58c:	81 2f       	mov	r24, r17
 58e:	09 95       	icall
 590:	89 2b       	or	r24, r25
 592:	29 f7       	brne	.-54     	; 0x55e <fputc+0x14>
 594:	2e 81       	ldd	r18, Y+6	; 0x06
 596:	3f 81       	ldd	r19, Y+7	; 0x07
 598:	2f 5f       	subi	r18, 0xFF	; 255
 59a:	3f 4f       	sbci	r19, 0xFF	; 255
 59c:	3f 83       	std	Y+7, r19	; 0x07
 59e:	2e 83       	std	Y+6, r18	; 0x06
 5a0:	81 2f       	mov	r24, r17
 5a2:	90 2f       	mov	r25, r16
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	1f 91       	pop	r17
 5aa:	0f 91       	pop	r16
 5ac:	08 95       	ret

000005ae <__ultoa_invert>:
 5ae:	fa 01       	movw	r30, r20
 5b0:	aa 27       	eor	r26, r26
 5b2:	28 30       	cpi	r18, 0x08	; 8
 5b4:	61 f1       	breq	.+88     	; 0x60e <__ultoa_invert+0x60>
 5b6:	20 31       	cpi	r18, 0x10	; 16
 5b8:	91 f1       	breq	.+100    	; 0x61e <__ultoa_invert+0x70>
 5ba:	e8 94       	clt
 5bc:	6f 93       	push	r22
 5be:	6e 7f       	andi	r22, 0xFE	; 254
 5c0:	6e 5f       	subi	r22, 0xFE	; 254
 5c2:	7f 4f       	sbci	r23, 0xFF	; 255
 5c4:	8f 4f       	sbci	r24, 0xFF	; 255
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	af 4f       	sbci	r26, 0xFF	; 255
 5ca:	b1 e0       	ldi	r27, 0x01	; 1
 5cc:	40 d0       	rcall	.+128    	; 0x64e <__ultoa_invert+0xa0>
 5ce:	b4 e0       	ldi	r27, 0x04	; 4
 5d0:	3e d0       	rcall	.+124    	; 0x64e <__ultoa_invert+0xa0>
 5d2:	67 0f       	add	r22, r23
 5d4:	78 1f       	adc	r23, r24
 5d6:	89 1f       	adc	r24, r25
 5d8:	9a 1f       	adc	r25, r26
 5da:	a1 1d       	adc	r26, r1
 5dc:	68 0f       	add	r22, r24
 5de:	79 1f       	adc	r23, r25
 5e0:	8a 1f       	adc	r24, r26
 5e2:	91 1d       	adc	r25, r1
 5e4:	a1 1d       	adc	r26, r1
 5e6:	6a 0f       	add	r22, r26
 5e8:	71 1d       	adc	r23, r1
 5ea:	81 1d       	adc	r24, r1
 5ec:	91 1d       	adc	r25, r1
 5ee:	a1 1d       	adc	r26, r1
 5f0:	22 d0       	rcall	.+68     	; 0x636 <__ultoa_invert+0x88>
 5f2:	09 f4       	brne	.+2      	; 0x5f6 <__ultoa_invert+0x48>
 5f4:	68 94       	set
 5f6:	3f 91       	pop	r19
 5f8:	06 2e       	mov	r0, r22
 5fa:	00 0c       	add	r0, r0
 5fc:	30 19       	sub	r19, r0
 5fe:	00 0c       	add	r0, r0
 600:	00 0c       	add	r0, r0
 602:	30 19       	sub	r19, r0
 604:	30 5d       	subi	r19, 0xD0	; 208
 606:	31 93       	st	Z+, r19
 608:	ce f6       	brtc	.-78     	; 0x5bc <__ultoa_invert+0xe>
 60a:	cf 01       	movw	r24, r30
 60c:	08 95       	ret
 60e:	46 2f       	mov	r20, r22
 610:	47 70       	andi	r20, 0x07	; 7
 612:	40 5d       	subi	r20, 0xD0	; 208
 614:	41 93       	st	Z+, r20
 616:	b3 e0       	ldi	r27, 0x03	; 3
 618:	0f d0       	rcall	.+30     	; 0x638 <__ultoa_invert+0x8a>
 61a:	c9 f7       	brne	.-14     	; 0x60e <__ultoa_invert+0x60>
 61c:	f6 cf       	rjmp	.-20     	; 0x60a <__ultoa_invert+0x5c>
 61e:	46 2f       	mov	r20, r22
 620:	4f 70       	andi	r20, 0x0F	; 15
 622:	40 5d       	subi	r20, 0xD0	; 208
 624:	4a 33       	cpi	r20, 0x3A	; 58
 626:	18 f0       	brcs	.+6      	; 0x62e <__ultoa_invert+0x80>
 628:	49 5d       	subi	r20, 0xD9	; 217
 62a:	31 fd       	sbrc	r19, 1
 62c:	40 52       	subi	r20, 0x20	; 32
 62e:	41 93       	st	Z+, r20
 630:	02 d0       	rcall	.+4      	; 0x636 <__ultoa_invert+0x88>
 632:	a9 f7       	brne	.-22     	; 0x61e <__ultoa_invert+0x70>
 634:	ea cf       	rjmp	.-44     	; 0x60a <__ultoa_invert+0x5c>
 636:	b4 e0       	ldi	r27, 0x04	; 4
 638:	a6 95       	lsr	r26
 63a:	97 95       	ror	r25
 63c:	87 95       	ror	r24
 63e:	77 95       	ror	r23
 640:	67 95       	ror	r22
 642:	ba 95       	dec	r27
 644:	c9 f7       	brne	.-14     	; 0x638 <__ultoa_invert+0x8a>
 646:	00 97       	sbiw	r24, 0x00	; 0
 648:	61 05       	cpc	r22, r1
 64a:	71 05       	cpc	r23, r1
 64c:	08 95       	ret
 64e:	9b 01       	movw	r18, r22
 650:	ac 01       	movw	r20, r24
 652:	0a 2e       	mov	r0, r26
 654:	06 94       	lsr	r0
 656:	57 95       	ror	r21
 658:	47 95       	ror	r20
 65a:	37 95       	ror	r19
 65c:	27 95       	ror	r18
 65e:	ba 95       	dec	r27
 660:	c9 f7       	brne	.-14     	; 0x654 <__ultoa_invert+0xa6>
 662:	62 0f       	add	r22, r18
 664:	73 1f       	adc	r23, r19
 666:	84 1f       	adc	r24, r20
 668:	95 1f       	adc	r25, r21
 66a:	a0 1d       	adc	r26, r0
 66c:	08 95       	ret

0000066e <__mulqi3>:
 66e:	00 24       	eor	r0, r0

00000670 <__mulqi3_loop>:
 670:	80 fd       	sbrc	r24, 0
 672:	06 0e       	add	r0, r22
 674:	66 0f       	add	r22, r22
 676:	11 f0       	breq	.+4      	; 0x67c <__mulqi3_exit>
 678:	86 95       	lsr	r24
 67a:	d1 f7       	brne	.-12     	; 0x670 <__mulqi3_loop>

0000067c <__mulqi3_exit>:
 67c:	80 2d       	mov	r24, r0
 67e:	08 95       	ret

00000680 <__prologue_saves__>:
 680:	2f 92       	push	r2
 682:	3f 92       	push	r3
 684:	4f 92       	push	r4
 686:	5f 92       	push	r5
 688:	6f 92       	push	r6
 68a:	7f 92       	push	r7
 68c:	8f 92       	push	r8
 68e:	9f 92       	push	r9
 690:	af 92       	push	r10
 692:	bf 92       	push	r11
 694:	cf 92       	push	r12
 696:	df 92       	push	r13
 698:	ef 92       	push	r14
 69a:	ff 92       	push	r15
 69c:	0f 93       	push	r16
 69e:	1f 93       	push	r17
 6a0:	cf 93       	push	r28
 6a2:	df 93       	push	r29
 6a4:	cd b7       	in	r28, 0x3d	; 61
 6a6:	de b7       	in	r29, 0x3e	; 62
 6a8:	ca 1b       	sub	r28, r26
 6aa:	db 0b       	sbc	r29, r27
 6ac:	0f b6       	in	r0, 0x3f	; 63
 6ae:	f8 94       	cli
 6b0:	de bf       	out	0x3e, r29	; 62
 6b2:	0f be       	out	0x3f, r0	; 63
 6b4:	cd bf       	out	0x3d, r28	; 61
 6b6:	09 94       	ijmp

000006b8 <__epilogue_restores__>:
 6b8:	2a 88       	ldd	r2, Y+18	; 0x12
 6ba:	39 88       	ldd	r3, Y+17	; 0x11
 6bc:	48 88       	ldd	r4, Y+16	; 0x10
 6be:	5f 84       	ldd	r5, Y+15	; 0x0f
 6c0:	6e 84       	ldd	r6, Y+14	; 0x0e
 6c2:	7d 84       	ldd	r7, Y+13	; 0x0d
 6c4:	8c 84       	ldd	r8, Y+12	; 0x0c
 6c6:	9b 84       	ldd	r9, Y+11	; 0x0b
 6c8:	aa 84       	ldd	r10, Y+10	; 0x0a
 6ca:	b9 84       	ldd	r11, Y+9	; 0x09
 6cc:	c8 84       	ldd	r12, Y+8	; 0x08
 6ce:	df 80       	ldd	r13, Y+7	; 0x07
 6d0:	ee 80       	ldd	r14, Y+6	; 0x06
 6d2:	fd 80       	ldd	r15, Y+5	; 0x05
 6d4:	0c 81       	ldd	r16, Y+4	; 0x04
 6d6:	1b 81       	ldd	r17, Y+3	; 0x03
 6d8:	aa 81       	ldd	r26, Y+2	; 0x02
 6da:	b9 81       	ldd	r27, Y+1	; 0x01
 6dc:	ce 0f       	add	r28, r30
 6de:	d1 1d       	adc	r29, r1
 6e0:	0f b6       	in	r0, 0x3f	; 63
 6e2:	f8 94       	cli
 6e4:	de bf       	out	0x3e, r29	; 62
 6e6:	0f be       	out	0x3f, r0	; 63
 6e8:	cd bf       	out	0x3d, r28	; 61
 6ea:	ed 01       	movw	r28, r26
 6ec:	08 95       	ret

000006ee <_exit>:
 6ee:	f8 94       	cli

000006f0 <__stop_program>:
 6f0:	ff cf       	rjmp	.-2      	; 0x6f0 <__stop_program>
