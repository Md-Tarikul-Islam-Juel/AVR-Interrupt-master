
ATmega644.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000008d2  00000966  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008d2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  0080012a  0080012a  00000990  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000302  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000208  00000000  00000000  00000d5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000247  00000000  00000000  00000f66  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a0  00000000  00000000  000011b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000025b  00000000  00000000  00001350  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004fc  00000000  00000000  000015ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001aa7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 2f 01 	jmp	0x25e	; 0x25e <__vector_1>
   8:	0c 94 56 01 	jmp	0x2ac	; 0x2ac <__vector_2>
   c:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d0 e1       	ldi	r29, 0x10	; 16
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e2 ed       	ldi	r30, 0xD2	; 210
  84:	f8 e0       	ldi	r31, 0x08	; 8
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	aa 32       	cpi	r26, 0x2A	; 42
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	aa e2       	ldi	r26, 0x2A	; 42
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a3 33       	cpi	r26, 0x33	; 51
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  a6:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <JUEL_ISR>:
    }
}

void JUEL_ISR(void)
{
	state ^=(1<<0);
  ae:	90 91 2a 01 	lds	r25, 0x012A
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	89 27       	eor	r24, r25
  b6:	80 93 2a 01 	sts	0x012A, r24
  ba:	08 95       	ret

000000bc <main>:
void JUEL_ISR(void);//declaration of JUEL_ISR function

uint8_t state=0x00;
int main(void)
{
	attachInterrupt(INT1,JUEL_ISR,RISING);
  bc:	44 e3       	ldi	r20, 0x34	; 52
  be:	67 e5       	ldi	r22, 0x57	; 87
  c0:	70 e0       	ldi	r23, 0x00	; 0
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	0e 94 0a 01 	call	0x214	; 0x214 <attachInterrupt>
	DDRC|=(1<<PC0);// OUTPUT bit set
  c8:	38 9a       	sbi	0x07, 0	; 7

    while(1)
    {
        if(state)
  ca:	80 91 2a 01 	lds	r24, 0x012A
  ce:	88 23       	and	r24, r24
  d0:	11 f0       	breq	.+4      	; 0xd6 <main+0x1a>
		{
			PORTC |=(1<<PC0);
  d2:	40 9a       	sbi	0x08, 0	; 8
  d4:	fa cf       	rjmp	.-12     	; 0xca <main+0xe>
		}
		else
		{
			PORTC &=~(1<<PC0);
  d6:	40 98       	cbi	0x08, 0	; 8
  d8:	f8 cf       	rjmp	.-16     	; 0xca <main+0xe>

000000da <digitalPinToInterrupt>:
	    || defined(__AVR_ATmega164__) || defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || defined(__AVR_ATmega164PA__)\
	    || defined(__AVR_ATmega324__) || defined(__AVR_ATmega324A__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__)\
		|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
		|| defined(__AVR_ATmega8535__)
			switch(pin)
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	71 f0       	breq	.+28     	; 0xfa <digitalPinToInterrupt+0x20>
  de:	58 f0       	brcs	.+22     	; 0xf6 <digitalPinToInterrupt+0x1c>
  e0:	82 30       	cpi	r24, 0x02	; 2
  e2:	61 f0       	breq	.+24     	; 0xfc <digitalPinToInterrupt+0x22>
								break;
				case INT1: return INT1;  //by default for atmega16,32=INT1=7-----atmega164=INT1=1
								break;
				case INT2: return INT2;  //by default for atmega16,32=INT2=5-----atmega164=INT2=2
								break;
				default: printf("Error: please choose the right sense mode");
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	9f 93       	push	r25
  ea:	8f 93       	push	r24
  ec:	0e 94 a4 01 	call	0x348	; 0x348 <printf>
				case INT1: return INT1;  //by default for atmega8=INT1=7
						   break;
				default: printf("Error: please choose the right sense mode");
			}
	#endif
}
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	08 95       	ret
		|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
		|| defined(__AVR_ATmega8535__)
			switch(pin)
			{
				case INT0: return INT0;  //by default for atmega16,32=INT0=6-----atmega164=INT0=0
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	08 95       	ret
								break;
				case INT1: return INT1;  //by default for atmega16,32=INT1=7-----atmega164=INT1=1
  fa:	81 e0       	ldi	r24, 0x01	; 1
				case INT1: return INT1;  //by default for atmega8=INT1=7
						   break;
				default: printf("Error: please choose the right sense mode");
			}
	#endif
}
  fc:	08 95       	ret

000000fe <INTERRUPT_SENSE_CONTROL>:
	#if defined(__AVR_ATmega164__) || defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || defined(__AVR_ATmega164PA__)\
		|| defined(__AVR_ATmega324__) || defined(__AVR_ATmega324A__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__)\
		|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)
		
		if(pin==INT0)
  fe:	81 11       	cpse	r24, r1
 100:	2d c0       	rjmp	.+90     	; 0x15c <INTERRUPT_SENSE_CONTROL+0x5e>
		{
			if(DETECT_SENSE==LOW)
 102:	61 11       	cpse	r22, r1
 104:	09 c0       	rjmp	.+18     	; 0x118 <INTERRUPT_SENSE_CONTROL+0x1a>
			{
				EICRA &= ~(1<<ISC01);
 106:	e9 e6       	ldi	r30, 0x69	; 105
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	8d 7f       	andi	r24, 0xFD	; 253
 10e:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC00);
 110:	80 81       	ld	r24, Z
 112:	8e 7f       	andi	r24, 0xFE	; 254
 114:	80 83       	st	Z, r24
 116:	08 95       	ret
			}
			else if(DETECT_SENSE==CHANGE)
 118:	63 33       	cpi	r22, 0x33	; 51
 11a:	49 f4       	brne	.+18     	; 0x12e <INTERRUPT_SENSE_CONTROL+0x30>
			{
				EICRA &= ~(1<<ISC01);
 11c:	e9 e6       	ldi	r30, 0x69	; 105
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	8d 7f       	andi	r24, 0xFD	; 253
 124:	80 83       	st	Z, r24
				EICRA |= (1<<ISC00);
 126:	80 81       	ld	r24, Z
 128:	81 60       	ori	r24, 0x01	; 1
 12a:	80 83       	st	Z, r24
 12c:	08 95       	ret
			}
			else if(DETECT_SENSE==FALLING)
 12e:	65 33       	cpi	r22, 0x35	; 53
 130:	49 f4       	brne	.+18     	; 0x144 <INTERRUPT_SENSE_CONTROL+0x46>
			{
				EICRA |= (1<<ISC01);
 132:	e9 e6       	ldi	r30, 0x69	; 105
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	82 60       	ori	r24, 0x02	; 2
 13a:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC00);
 13c:	80 81       	ld	r24, Z
 13e:	8e 7f       	andi	r24, 0xFE	; 254
 140:	80 83       	st	Z, r24
 142:	08 95       	ret
			}
			else if(DETECT_SENSE==RISING)
 144:	64 33       	cpi	r22, 0x34	; 52
 146:	09 f0       	breq	.+2      	; 0x14a <INTERRUPT_SENSE_CONTROL+0x4c>
 148:	64 c0       	rjmp	.+200    	; 0x212 <INTERRUPT_SENSE_CONTROL+0x114>
			{
				EICRA |= (1<<ISC01);
 14a:	e9 e6       	ldi	r30, 0x69	; 105
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	82 60       	ori	r24, 0x02	; 2
 152:	80 83       	st	Z, r24
				EICRA |= (1<<ISC00);
 154:	80 81       	ld	r24, Z
 156:	81 60       	ori	r24, 0x01	; 1
 158:	80 83       	st	Z, r24
 15a:	08 95       	ret
			{
				//static_assert(0, "please choose the right sense mod");
			}
		}
		
		else if(pin==INT1)
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	61 f5       	brne	.+88     	; 0x1b8 <INTERRUPT_SENSE_CONTROL+0xba>
		{
			if(DETECT_SENSE==LOW)
 160:	61 11       	cpse	r22, r1
 162:	09 c0       	rjmp	.+18     	; 0x176 <INTERRUPT_SENSE_CONTROL+0x78>
			{
				EICRA &= ~(1<<ISC11);
 164:	e9 e6       	ldi	r30, 0x69	; 105
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	80 81       	ld	r24, Z
 16a:	87 7f       	andi	r24, 0xF7	; 247
 16c:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC10);
 16e:	80 81       	ld	r24, Z
 170:	8b 7f       	andi	r24, 0xFB	; 251
 172:	80 83       	st	Z, r24
 174:	08 95       	ret
			}
			else if(DETECT_SENSE==CHANGE)
 176:	63 33       	cpi	r22, 0x33	; 51
 178:	49 f4       	brne	.+18     	; 0x18c <INTERRUPT_SENSE_CONTROL+0x8e>
			{
				EICRA &= ~(1<<ISC11);
 17a:	e9 e6       	ldi	r30, 0x69	; 105
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	80 81       	ld	r24, Z
 180:	87 7f       	andi	r24, 0xF7	; 247
 182:	80 83       	st	Z, r24
				EICRA |= (1<<ISC10);
 184:	80 81       	ld	r24, Z
 186:	84 60       	ori	r24, 0x04	; 4
 188:	80 83       	st	Z, r24
 18a:	08 95       	ret
			}
			else if(DETECT_SENSE==FALLING)
 18c:	65 33       	cpi	r22, 0x35	; 53
 18e:	49 f4       	brne	.+18     	; 0x1a2 <INTERRUPT_SENSE_CONTROL+0xa4>
			{
				EICRA |= (1<<ISC11);
 190:	e9 e6       	ldi	r30, 0x69	; 105
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	88 60       	ori	r24, 0x08	; 8
 198:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC10);
 19a:	80 81       	ld	r24, Z
 19c:	8b 7f       	andi	r24, 0xFB	; 251
 19e:	80 83       	st	Z, r24
 1a0:	08 95       	ret
			}
			else if(DETECT_SENSE==RISING)
 1a2:	64 33       	cpi	r22, 0x34	; 52
 1a4:	b1 f5       	brne	.+108    	; 0x212 <INTERRUPT_SENSE_CONTROL+0x114>
			{
				EICRA |= (1<<ISC11);
 1a6:	e9 e6       	ldi	r30, 0x69	; 105
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	88 60       	ori	r24, 0x08	; 8
 1ae:	80 83       	st	Z, r24
				EICRA |= (1<<ISC10);
 1b0:	80 81       	ld	r24, Z
 1b2:	84 60       	ori	r24, 0x04	; 4
 1b4:	80 83       	st	Z, r24
 1b6:	08 95       	ret
			{
				//static_assert(0, "please choose the right sense mode");
			}
		}
		
		else if(pin==INT2)
 1b8:	82 30       	cpi	r24, 0x02	; 2
 1ba:	59 f5       	brne	.+86     	; 0x212 <INTERRUPT_SENSE_CONTROL+0x114>
		{
			if(DETECT_SENSE==LOW)
 1bc:	61 11       	cpse	r22, r1
 1be:	09 c0       	rjmp	.+18     	; 0x1d2 <INTERRUPT_SENSE_CONTROL+0xd4>
			{
				EICRA &= ~(1<<ISC21);
 1c0:	e9 e6       	ldi	r30, 0x69	; 105
 1c2:	f0 e0       	ldi	r31, 0x00	; 0
 1c4:	80 81       	ld	r24, Z
 1c6:	8f 7d       	andi	r24, 0xDF	; 223
 1c8:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC20);
 1ca:	80 81       	ld	r24, Z
 1cc:	8f 7e       	andi	r24, 0xEF	; 239
 1ce:	80 83       	st	Z, r24
 1d0:	08 95       	ret
			}
			else if(DETECT_SENSE==CHANGE)
 1d2:	63 33       	cpi	r22, 0x33	; 51
 1d4:	49 f4       	brne	.+18     	; 0x1e8 <INTERRUPT_SENSE_CONTROL+0xea>
			{
				EICRA &= ~(1<<ISC21);
 1d6:	e9 e6       	ldi	r30, 0x69	; 105
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	8f 7d       	andi	r24, 0xDF	; 223
 1de:	80 83       	st	Z, r24
				EICRA |= (1<<ISC20);
 1e0:	80 81       	ld	r24, Z
 1e2:	80 61       	ori	r24, 0x10	; 16
 1e4:	80 83       	st	Z, r24
 1e6:	08 95       	ret
			}
			else if(DETECT_SENSE==FALLING)
 1e8:	65 33       	cpi	r22, 0x35	; 53
 1ea:	49 f4       	brne	.+18     	; 0x1fe <INTERRUPT_SENSE_CONTROL+0x100>
			{
				EICRA |= (1<<ISC21);
 1ec:	e9 e6       	ldi	r30, 0x69	; 105
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	80 62       	ori	r24, 0x20	; 32
 1f4:	80 83       	st	Z, r24
				EICRA &= ~(1<<ISC20);
 1f6:	80 81       	ld	r24, Z
 1f8:	8f 7e       	andi	r24, 0xEF	; 239
 1fa:	80 83       	st	Z, r24
 1fc:	08 95       	ret
			}
			else if(DETECT_SENSE==RISING)
 1fe:	64 33       	cpi	r22, 0x34	; 52
 200:	41 f4       	brne	.+16     	; 0x212 <INTERRUPT_SENSE_CONTROL+0x114>
			{
				EICRA |= (1<<ISC21);
 202:	e9 e6       	ldi	r30, 0x69	; 105
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	80 81       	ld	r24, Z
 208:	80 62       	ori	r24, 0x20	; 32
 20a:	80 83       	st	Z, r24
				EICRA |= (1<<ISC20);
 20c:	80 81       	ld	r24, Z
 20e:	80 61       	ori	r24, 0x10	; 16
 210:	80 83       	st	Z, r24
 212:	08 95       	ret

00000214 <attachInterrupt>:
//     Atmega8,48,88,168 :
//  					   INT0(LOW,CHANGE,RISING,FALLING)
//  				   	   INT1(LOW,CHANGE,RISING,FALLING)

void attachInterrupt(uint8_t EXTERNAL_INTERRUPT_PIN, void (*received_function_pointer)(), uint8_t INTERRUPT_SENSE)
{	
 214:	0f 93       	push	r16
 216:	1f 93       	push	r17
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	18 2f       	mov	r17, r24
 21e:	eb 01       	movw	r28, r22
 220:	04 2f       	mov	r16, r20
		|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
		|| defined(__AVR_ATmega48__) || defined(__AVR_ATmega48A__) || defined(__AVR_ATmega48P__) || defined(__AVR_ATmega48PA__) || defined(__AVR_ATmega48PB__)\
		|| defined(__AVR_ATmega88__) || defined(__AVR_ATmega88A__) || defined(__AVR_ATmega88P__) || defined(__AVR_ATmega88PA__) || defined(__AVR_ATmega88PB__)\
		|| defined(__AVR_ATmega168__) || defined(__AVR_ATmega168P__) || defined(__AVR_ATmega168A__) || defined(__AVR_ATmega168PA__) || defined(__AVR_ATmega168PB__)\
		|| defined(__AVR_ATmega328__) || defined(__AVR_ATmega328P__)
		sei();// To enable Global interrupt bit I 
 222:	78 94       	sei
		INTERRUPT_SENSE_CONTROL(digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN), INTERRUPT_SENSE);//this function set the interrupt sense mode(LOW,CHAGNE,RISING,FALLING)
 224:	0e 94 6d 00 	call	0xda	; 0xda <digitalPinToInterrupt>
 228:	60 2f       	mov	r22, r16
 22a:	0e 94 7f 00 	call	0xfe	; 0xfe <INTERRUPT_SENSE_CONTROL>
		EIMSK |= (1<<digitalPinToInterrupt(EXTERNAL_INTERRUPT_PIN));// External interrupt pin select (INT0,INT1,INT2)//NB: dont take it before INTERRUPT_SENSE_CONTROL() function because when you will use pull down network initally it call ISR() to take main action. 
 22e:	0d b3       	in	r16, 0x1d	; 29
 230:	81 2f       	mov	r24, r17
 232:	0e 94 6d 00 	call	0xda	; 0xda <digitalPinToInterrupt>
 236:	21 e0       	ldi	r18, 0x01	; 1
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	a9 01       	movw	r20, r18
 23c:	02 c0       	rjmp	.+4      	; 0x242 <attachInterrupt+0x2e>
 23e:	44 0f       	add	r20, r20
 240:	55 1f       	adc	r21, r21
 242:	8a 95       	dec	r24
 244:	e2 f7       	brpl	.-8      	; 0x23e <attachInterrupt+0x2a>
 246:	ca 01       	movw	r24, r20
 248:	80 2b       	or	r24, r16
 24a:	8d bb       	out	0x1d, r24	; 29
		pointer_of_received_function_pointer=received_function_pointer;//here we send the address of (received_function_pointer) from main file to (address_of_receive_function) which is a void type function pointer [NB: the purpose is to run the received function inside the ISR() ]
 24c:	d0 93 2c 01 	sts	0x012C, r29
 250:	c0 93 2b 01 	sts	0x012B, r28
	#endif
	
}
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	1f 91       	pop	r17
 25a:	0f 91       	pop	r16
 25c:	08 95       	ret

0000025e <__vector_1>:
	|| defined(__AVR_ATmega324__) || defined(__AVR_ATmega324A__) || defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__)\
	|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644A__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega644PA__)\
	|| defined(__AVR_ATmega1284__) || defined(__AVR_ATmega1284P__)\
	|| defined(__AVR_ATmega8535__)
	ISR(INT0_vect)
	{
 25e:	1f 92       	push	r1
 260:	0f 92       	push	r0
 262:	0f b6       	in	r0, 0x3f	; 63
 264:	0f 92       	push	r0
 266:	11 24       	eor	r1, r1
 268:	2f 93       	push	r18
 26a:	3f 93       	push	r19
 26c:	4f 93       	push	r20
 26e:	5f 93       	push	r21
 270:	6f 93       	push	r22
 272:	7f 93       	push	r23
 274:	8f 93       	push	r24
 276:	9f 93       	push	r25
 278:	af 93       	push	r26
 27a:	bf 93       	push	r27
 27c:	ef 93       	push	r30
 27e:	ff 93       	push	r31
		pointer_of_received_function_pointer();
 280:	e0 91 2b 01 	lds	r30, 0x012B
 284:	f0 91 2c 01 	lds	r31, 0x012C
 288:	09 95       	icall
	}
 28a:	ff 91       	pop	r31
 28c:	ef 91       	pop	r30
 28e:	bf 91       	pop	r27
 290:	af 91       	pop	r26
 292:	9f 91       	pop	r25
 294:	8f 91       	pop	r24
 296:	7f 91       	pop	r23
 298:	6f 91       	pop	r22
 29a:	5f 91       	pop	r21
 29c:	4f 91       	pop	r20
 29e:	3f 91       	pop	r19
 2a0:	2f 91       	pop	r18
 2a2:	0f 90       	pop	r0
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	0f 90       	pop	r0
 2a8:	1f 90       	pop	r1
 2aa:	18 95       	reti

000002ac <__vector_2>:

	ISR(INT1_vect)
	{
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	2f 93       	push	r18
 2b8:	3f 93       	push	r19
 2ba:	4f 93       	push	r20
 2bc:	5f 93       	push	r21
 2be:	6f 93       	push	r22
 2c0:	7f 93       	push	r23
 2c2:	8f 93       	push	r24
 2c4:	9f 93       	push	r25
 2c6:	af 93       	push	r26
 2c8:	bf 93       	push	r27
 2ca:	ef 93       	push	r30
 2cc:	ff 93       	push	r31
		pointer_of_received_function_pointer();
 2ce:	e0 91 2b 01 	lds	r30, 0x012B
 2d2:	f0 91 2c 01 	lds	r31, 0x012C
 2d6:	09 95       	icall
	}
 2d8:	ff 91       	pop	r31
 2da:	ef 91       	pop	r30
 2dc:	bf 91       	pop	r27
 2de:	af 91       	pop	r26
 2e0:	9f 91       	pop	r25
 2e2:	8f 91       	pop	r24
 2e4:	7f 91       	pop	r23
 2e6:	6f 91       	pop	r22
 2e8:	5f 91       	pop	r21
 2ea:	4f 91       	pop	r20
 2ec:	3f 91       	pop	r19
 2ee:	2f 91       	pop	r18
 2f0:	0f 90       	pop	r0
 2f2:	0f be       	out	0x3f, r0	; 63
 2f4:	0f 90       	pop	r0
 2f6:	1f 90       	pop	r1
 2f8:	18 95       	reti

000002fa <__vector_3>:

	ISR(INT2_vect)
	{
 2fa:	1f 92       	push	r1
 2fc:	0f 92       	push	r0
 2fe:	0f b6       	in	r0, 0x3f	; 63
 300:	0f 92       	push	r0
 302:	11 24       	eor	r1, r1
 304:	2f 93       	push	r18
 306:	3f 93       	push	r19
 308:	4f 93       	push	r20
 30a:	5f 93       	push	r21
 30c:	6f 93       	push	r22
 30e:	7f 93       	push	r23
 310:	8f 93       	push	r24
 312:	9f 93       	push	r25
 314:	af 93       	push	r26
 316:	bf 93       	push	r27
 318:	ef 93       	push	r30
 31a:	ff 93       	push	r31
		pointer_of_received_function_pointer();
 31c:	e0 91 2b 01 	lds	r30, 0x012B
 320:	f0 91 2c 01 	lds	r31, 0x012C
 324:	09 95       	icall
	}
 326:	ff 91       	pop	r31
 328:	ef 91       	pop	r30
 32a:	bf 91       	pop	r27
 32c:	af 91       	pop	r26
 32e:	9f 91       	pop	r25
 330:	8f 91       	pop	r24
 332:	7f 91       	pop	r23
 334:	6f 91       	pop	r22
 336:	5f 91       	pop	r21
 338:	4f 91       	pop	r20
 33a:	3f 91       	pop	r19
 33c:	2f 91       	pop	r18
 33e:	0f 90       	pop	r0
 340:	0f be       	out	0x3f, r0	; 63
 342:	0f 90       	pop	r0
 344:	1f 90       	pop	r1
 346:	18 95       	reti

00000348 <printf>:
 348:	a0 e0       	ldi	r26, 0x00	; 0
 34a:	b0 e0       	ldi	r27, 0x00	; 0
 34c:	ea ea       	ldi	r30, 0xAA	; 170
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	0c 94 40 04 	jmp	0x880	; 0x880 <__prologue_saves__+0x20>
 354:	fe 01       	movw	r30, r28
 356:	35 96       	adiw	r30, 0x05	; 5
 358:	61 91       	ld	r22, Z+
 35a:	71 91       	ld	r23, Z+
 35c:	af 01       	movw	r20, r30
 35e:	80 91 2f 01 	lds	r24, 0x012F
 362:	90 91 30 01 	lds	r25, 0x0130
 366:	0e 94 b8 01 	call	0x370	; 0x370 <vfprintf>
 36a:	e2 e0       	ldi	r30, 0x02	; 2
 36c:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__epilogue_restores__+0x20>

00000370 <vfprintf>:
 370:	ac e0       	ldi	r26, 0x0C	; 12
 372:	b0 e0       	ldi	r27, 0x00	; 0
 374:	ee eb       	ldi	r30, 0xBE	; 190
 376:	f1 e0       	ldi	r31, 0x01	; 1
 378:	0c 94 30 04 	jmp	0x860	; 0x860 <__prologue_saves__>
 37c:	7c 01       	movw	r14, r24
 37e:	6b 01       	movw	r12, r22
 380:	8a 01       	movw	r16, r20
 382:	fc 01       	movw	r30, r24
 384:	17 82       	std	Z+7, r1	; 0x07
 386:	16 82       	std	Z+6, r1	; 0x06
 388:	83 81       	ldd	r24, Z+3	; 0x03
 38a:	81 ff       	sbrs	r24, 1
 38c:	bd c1       	rjmp	.+890    	; 0x708 <vfprintf+0x398>
 38e:	ce 01       	movw	r24, r28
 390:	01 96       	adiw	r24, 0x01	; 1
 392:	4c 01       	movw	r8, r24
 394:	f7 01       	movw	r30, r14
 396:	93 81       	ldd	r25, Z+3	; 0x03
 398:	f6 01       	movw	r30, r12
 39a:	93 fd       	sbrc	r25, 3
 39c:	85 91       	lpm	r24, Z+
 39e:	93 ff       	sbrs	r25, 3
 3a0:	81 91       	ld	r24, Z+
 3a2:	6f 01       	movw	r12, r30
 3a4:	88 23       	and	r24, r24
 3a6:	09 f4       	brne	.+2      	; 0x3aa <vfprintf+0x3a>
 3a8:	ab c1       	rjmp	.+854    	; 0x700 <vfprintf+0x390>
 3aa:	85 32       	cpi	r24, 0x25	; 37
 3ac:	39 f4       	brne	.+14     	; 0x3bc <vfprintf+0x4c>
 3ae:	93 fd       	sbrc	r25, 3
 3b0:	85 91       	lpm	r24, Z+
 3b2:	93 ff       	sbrs	r25, 3
 3b4:	81 91       	ld	r24, Z+
 3b6:	6f 01       	movw	r12, r30
 3b8:	85 32       	cpi	r24, 0x25	; 37
 3ba:	29 f4       	brne	.+10     	; 0x3c6 <vfprintf+0x56>
 3bc:	b7 01       	movw	r22, r14
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 3c4:	e7 cf       	rjmp	.-50     	; 0x394 <vfprintf+0x24>
 3c6:	51 2c       	mov	r5, r1
 3c8:	31 2c       	mov	r3, r1
 3ca:	20 e0       	ldi	r18, 0x00	; 0
 3cc:	20 32       	cpi	r18, 0x20	; 32
 3ce:	a0 f4       	brcc	.+40     	; 0x3f8 <vfprintf+0x88>
 3d0:	8b 32       	cpi	r24, 0x2B	; 43
 3d2:	69 f0       	breq	.+26     	; 0x3ee <vfprintf+0x7e>
 3d4:	30 f4       	brcc	.+12     	; 0x3e2 <vfprintf+0x72>
 3d6:	80 32       	cpi	r24, 0x20	; 32
 3d8:	59 f0       	breq	.+22     	; 0x3f0 <vfprintf+0x80>
 3da:	83 32       	cpi	r24, 0x23	; 35
 3dc:	69 f4       	brne	.+26     	; 0x3f8 <vfprintf+0x88>
 3de:	20 61       	ori	r18, 0x10	; 16
 3e0:	2c c0       	rjmp	.+88     	; 0x43a <vfprintf+0xca>
 3e2:	8d 32       	cpi	r24, 0x2D	; 45
 3e4:	39 f0       	breq	.+14     	; 0x3f4 <vfprintf+0x84>
 3e6:	80 33       	cpi	r24, 0x30	; 48
 3e8:	39 f4       	brne	.+14     	; 0x3f8 <vfprintf+0x88>
 3ea:	21 60       	ori	r18, 0x01	; 1
 3ec:	26 c0       	rjmp	.+76     	; 0x43a <vfprintf+0xca>
 3ee:	22 60       	ori	r18, 0x02	; 2
 3f0:	24 60       	ori	r18, 0x04	; 4
 3f2:	23 c0       	rjmp	.+70     	; 0x43a <vfprintf+0xca>
 3f4:	28 60       	ori	r18, 0x08	; 8
 3f6:	21 c0       	rjmp	.+66     	; 0x43a <vfprintf+0xca>
 3f8:	27 fd       	sbrc	r18, 7
 3fa:	27 c0       	rjmp	.+78     	; 0x44a <vfprintf+0xda>
 3fc:	30 ed       	ldi	r19, 0xD0	; 208
 3fe:	38 0f       	add	r19, r24
 400:	3a 30       	cpi	r19, 0x0A	; 10
 402:	78 f4       	brcc	.+30     	; 0x422 <vfprintf+0xb2>
 404:	26 ff       	sbrs	r18, 6
 406:	06 c0       	rjmp	.+12     	; 0x414 <vfprintf+0xa4>
 408:	fa e0       	ldi	r31, 0x0A	; 10
 40a:	5f 9e       	mul	r5, r31
 40c:	30 0d       	add	r19, r0
 40e:	11 24       	eor	r1, r1
 410:	53 2e       	mov	r5, r19
 412:	13 c0       	rjmp	.+38     	; 0x43a <vfprintf+0xca>
 414:	8a e0       	ldi	r24, 0x0A	; 10
 416:	38 9e       	mul	r3, r24
 418:	30 0d       	add	r19, r0
 41a:	11 24       	eor	r1, r1
 41c:	33 2e       	mov	r3, r19
 41e:	20 62       	ori	r18, 0x20	; 32
 420:	0c c0       	rjmp	.+24     	; 0x43a <vfprintf+0xca>
 422:	8e 32       	cpi	r24, 0x2E	; 46
 424:	21 f4       	brne	.+8      	; 0x42e <vfprintf+0xbe>
 426:	26 fd       	sbrc	r18, 6
 428:	6b c1       	rjmp	.+726    	; 0x700 <vfprintf+0x390>
 42a:	20 64       	ori	r18, 0x40	; 64
 42c:	06 c0       	rjmp	.+12     	; 0x43a <vfprintf+0xca>
 42e:	8c 36       	cpi	r24, 0x6C	; 108
 430:	11 f4       	brne	.+4      	; 0x436 <vfprintf+0xc6>
 432:	20 68       	ori	r18, 0x80	; 128
 434:	02 c0       	rjmp	.+4      	; 0x43a <vfprintf+0xca>
 436:	88 36       	cpi	r24, 0x68	; 104
 438:	41 f4       	brne	.+16     	; 0x44a <vfprintf+0xda>
 43a:	f6 01       	movw	r30, r12
 43c:	93 fd       	sbrc	r25, 3
 43e:	85 91       	lpm	r24, Z+
 440:	93 ff       	sbrs	r25, 3
 442:	81 91       	ld	r24, Z+
 444:	6f 01       	movw	r12, r30
 446:	81 11       	cpse	r24, r1
 448:	c1 cf       	rjmp	.-126    	; 0x3cc <vfprintf+0x5c>
 44a:	98 2f       	mov	r25, r24
 44c:	9f 7d       	andi	r25, 0xDF	; 223
 44e:	95 54       	subi	r25, 0x45	; 69
 450:	93 30       	cpi	r25, 0x03	; 3
 452:	28 f4       	brcc	.+10     	; 0x45e <vfprintf+0xee>
 454:	0c 5f       	subi	r16, 0xFC	; 252
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	ff e3       	ldi	r31, 0x3F	; 63
 45a:	f9 83       	std	Y+1, r31	; 0x01
 45c:	0d c0       	rjmp	.+26     	; 0x478 <vfprintf+0x108>
 45e:	83 36       	cpi	r24, 0x63	; 99
 460:	31 f0       	breq	.+12     	; 0x46e <vfprintf+0xfe>
 462:	83 37       	cpi	r24, 0x73	; 115
 464:	71 f0       	breq	.+28     	; 0x482 <vfprintf+0x112>
 466:	83 35       	cpi	r24, 0x53	; 83
 468:	09 f0       	breq	.+2      	; 0x46c <vfprintf+0xfc>
 46a:	5b c0       	rjmp	.+182    	; 0x522 <vfprintf+0x1b2>
 46c:	22 c0       	rjmp	.+68     	; 0x4b2 <vfprintf+0x142>
 46e:	f8 01       	movw	r30, r16
 470:	80 81       	ld	r24, Z
 472:	89 83       	std	Y+1, r24	; 0x01
 474:	0e 5f       	subi	r16, 0xFE	; 254
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	44 24       	eor	r4, r4
 47a:	43 94       	inc	r4
 47c:	51 2c       	mov	r5, r1
 47e:	54 01       	movw	r10, r8
 480:	15 c0       	rjmp	.+42     	; 0x4ac <vfprintf+0x13c>
 482:	38 01       	movw	r6, r16
 484:	f2 e0       	ldi	r31, 0x02	; 2
 486:	6f 0e       	add	r6, r31
 488:	71 1c       	adc	r7, r1
 48a:	f8 01       	movw	r30, r16
 48c:	a0 80       	ld	r10, Z
 48e:	b1 80       	ldd	r11, Z+1	; 0x01
 490:	26 ff       	sbrs	r18, 6
 492:	03 c0       	rjmp	.+6      	; 0x49a <vfprintf+0x12a>
 494:	65 2d       	mov	r22, r5
 496:	70 e0       	ldi	r23, 0x00	; 0
 498:	02 c0       	rjmp	.+4      	; 0x49e <vfprintf+0x12e>
 49a:	6f ef       	ldi	r22, 0xFF	; 255
 49c:	7f ef       	ldi	r23, 0xFF	; 255
 49e:	c5 01       	movw	r24, r10
 4a0:	2c 87       	std	Y+12, r18	; 0x0c
 4a2:	0e 94 95 03 	call	0x72a	; 0x72a <strnlen>
 4a6:	2c 01       	movw	r4, r24
 4a8:	83 01       	movw	r16, r6
 4aa:	2c 85       	ldd	r18, Y+12	; 0x0c
 4ac:	2f 77       	andi	r18, 0x7F	; 127
 4ae:	22 2e       	mov	r2, r18
 4b0:	17 c0       	rjmp	.+46     	; 0x4e0 <vfprintf+0x170>
 4b2:	38 01       	movw	r6, r16
 4b4:	f2 e0       	ldi	r31, 0x02	; 2
 4b6:	6f 0e       	add	r6, r31
 4b8:	71 1c       	adc	r7, r1
 4ba:	f8 01       	movw	r30, r16
 4bc:	a0 80       	ld	r10, Z
 4be:	b1 80       	ldd	r11, Z+1	; 0x01
 4c0:	26 ff       	sbrs	r18, 6
 4c2:	03 c0       	rjmp	.+6      	; 0x4ca <vfprintf+0x15a>
 4c4:	65 2d       	mov	r22, r5
 4c6:	70 e0       	ldi	r23, 0x00	; 0
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <vfprintf+0x15e>
 4ca:	6f ef       	ldi	r22, 0xFF	; 255
 4cc:	7f ef       	ldi	r23, 0xFF	; 255
 4ce:	c5 01       	movw	r24, r10
 4d0:	2c 87       	std	Y+12, r18	; 0x0c
 4d2:	0e 94 8a 03 	call	0x714	; 0x714 <strnlen_P>
 4d6:	2c 01       	movw	r4, r24
 4d8:	2c 85       	ldd	r18, Y+12	; 0x0c
 4da:	20 68       	ori	r18, 0x80	; 128
 4dc:	22 2e       	mov	r2, r18
 4de:	83 01       	movw	r16, r6
 4e0:	23 fc       	sbrc	r2, 3
 4e2:	1b c0       	rjmp	.+54     	; 0x51a <vfprintf+0x1aa>
 4e4:	83 2d       	mov	r24, r3
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	48 16       	cp	r4, r24
 4ea:	59 06       	cpc	r5, r25
 4ec:	b0 f4       	brcc	.+44     	; 0x51a <vfprintf+0x1aa>
 4ee:	b7 01       	movw	r22, r14
 4f0:	80 e2       	ldi	r24, 0x20	; 32
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 4f8:	3a 94       	dec	r3
 4fa:	f4 cf       	rjmp	.-24     	; 0x4e4 <vfprintf+0x174>
 4fc:	f5 01       	movw	r30, r10
 4fe:	27 fc       	sbrc	r2, 7
 500:	85 91       	lpm	r24, Z+
 502:	27 fe       	sbrs	r2, 7
 504:	81 91       	ld	r24, Z+
 506:	5f 01       	movw	r10, r30
 508:	b7 01       	movw	r22, r14
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 510:	31 10       	cpse	r3, r1
 512:	3a 94       	dec	r3
 514:	f1 e0       	ldi	r31, 0x01	; 1
 516:	4f 1a       	sub	r4, r31
 518:	51 08       	sbc	r5, r1
 51a:	41 14       	cp	r4, r1
 51c:	51 04       	cpc	r5, r1
 51e:	71 f7       	brne	.-36     	; 0x4fc <vfprintf+0x18c>
 520:	e5 c0       	rjmp	.+458    	; 0x6ec <vfprintf+0x37c>
 522:	84 36       	cpi	r24, 0x64	; 100
 524:	11 f0       	breq	.+4      	; 0x52a <vfprintf+0x1ba>
 526:	89 36       	cpi	r24, 0x69	; 105
 528:	39 f5       	brne	.+78     	; 0x578 <vfprintf+0x208>
 52a:	f8 01       	movw	r30, r16
 52c:	27 ff       	sbrs	r18, 7
 52e:	07 c0       	rjmp	.+14     	; 0x53e <vfprintf+0x1ce>
 530:	60 81       	ld	r22, Z
 532:	71 81       	ldd	r23, Z+1	; 0x01
 534:	82 81       	ldd	r24, Z+2	; 0x02
 536:	93 81       	ldd	r25, Z+3	; 0x03
 538:	0c 5f       	subi	r16, 0xFC	; 252
 53a:	1f 4f       	sbci	r17, 0xFF	; 255
 53c:	08 c0       	rjmp	.+16     	; 0x54e <vfprintf+0x1de>
 53e:	60 81       	ld	r22, Z
 540:	71 81       	ldd	r23, Z+1	; 0x01
 542:	88 27       	eor	r24, r24
 544:	77 fd       	sbrc	r23, 7
 546:	80 95       	com	r24
 548:	98 2f       	mov	r25, r24
 54a:	0e 5f       	subi	r16, 0xFE	; 254
 54c:	1f 4f       	sbci	r17, 0xFF	; 255
 54e:	2f 76       	andi	r18, 0x6F	; 111
 550:	b2 2e       	mov	r11, r18
 552:	97 ff       	sbrs	r25, 7
 554:	09 c0       	rjmp	.+18     	; 0x568 <vfprintf+0x1f8>
 556:	90 95       	com	r25
 558:	80 95       	com	r24
 55a:	70 95       	com	r23
 55c:	61 95       	neg	r22
 55e:	7f 4f       	sbci	r23, 0xFF	; 255
 560:	8f 4f       	sbci	r24, 0xFF	; 255
 562:	9f 4f       	sbci	r25, 0xFF	; 255
 564:	20 68       	ori	r18, 0x80	; 128
 566:	b2 2e       	mov	r11, r18
 568:	2a e0       	ldi	r18, 0x0A	; 10
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	a4 01       	movw	r20, r8
 56e:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__ultoa_invert>
 572:	a8 2e       	mov	r10, r24
 574:	a8 18       	sub	r10, r8
 576:	44 c0       	rjmp	.+136    	; 0x600 <vfprintf+0x290>
 578:	85 37       	cpi	r24, 0x75	; 117
 57a:	29 f4       	brne	.+10     	; 0x586 <vfprintf+0x216>
 57c:	2f 7e       	andi	r18, 0xEF	; 239
 57e:	b2 2e       	mov	r11, r18
 580:	2a e0       	ldi	r18, 0x0A	; 10
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	25 c0       	rjmp	.+74     	; 0x5d0 <vfprintf+0x260>
 586:	f2 2f       	mov	r31, r18
 588:	f9 7f       	andi	r31, 0xF9	; 249
 58a:	bf 2e       	mov	r11, r31
 58c:	8f 36       	cpi	r24, 0x6F	; 111
 58e:	c1 f0       	breq	.+48     	; 0x5c0 <vfprintf+0x250>
 590:	18 f4       	brcc	.+6      	; 0x598 <vfprintf+0x228>
 592:	88 35       	cpi	r24, 0x58	; 88
 594:	79 f0       	breq	.+30     	; 0x5b4 <vfprintf+0x244>
 596:	b4 c0       	rjmp	.+360    	; 0x700 <vfprintf+0x390>
 598:	80 37       	cpi	r24, 0x70	; 112
 59a:	19 f0       	breq	.+6      	; 0x5a2 <vfprintf+0x232>
 59c:	88 37       	cpi	r24, 0x78	; 120
 59e:	21 f0       	breq	.+8      	; 0x5a8 <vfprintf+0x238>
 5a0:	af c0       	rjmp	.+350    	; 0x700 <vfprintf+0x390>
 5a2:	2f 2f       	mov	r18, r31
 5a4:	20 61       	ori	r18, 0x10	; 16
 5a6:	b2 2e       	mov	r11, r18
 5a8:	b4 fe       	sbrs	r11, 4
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <vfprintf+0x256>
 5ac:	8b 2d       	mov	r24, r11
 5ae:	84 60       	ori	r24, 0x04	; 4
 5b0:	b8 2e       	mov	r11, r24
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <vfprintf+0x256>
 5b4:	24 ff       	sbrs	r18, 4
 5b6:	0a c0       	rjmp	.+20     	; 0x5cc <vfprintf+0x25c>
 5b8:	9f 2f       	mov	r25, r31
 5ba:	96 60       	ori	r25, 0x06	; 6
 5bc:	b9 2e       	mov	r11, r25
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <vfprintf+0x25c>
 5c0:	28 e0       	ldi	r18, 0x08	; 8
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <vfprintf+0x260>
 5c6:	20 e1       	ldi	r18, 0x10	; 16
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <vfprintf+0x260>
 5cc:	20 e1       	ldi	r18, 0x10	; 16
 5ce:	32 e0       	ldi	r19, 0x02	; 2
 5d0:	f8 01       	movw	r30, r16
 5d2:	b7 fe       	sbrs	r11, 7
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <vfprintf+0x274>
 5d6:	60 81       	ld	r22, Z
 5d8:	71 81       	ldd	r23, Z+1	; 0x01
 5da:	82 81       	ldd	r24, Z+2	; 0x02
 5dc:	93 81       	ldd	r25, Z+3	; 0x03
 5de:	0c 5f       	subi	r16, 0xFC	; 252
 5e0:	1f 4f       	sbci	r17, 0xFF	; 255
 5e2:	06 c0       	rjmp	.+12     	; 0x5f0 <vfprintf+0x280>
 5e4:	60 81       	ld	r22, Z
 5e6:	71 81       	ldd	r23, Z+1	; 0x01
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	a4 01       	movw	r20, r8
 5f2:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__ultoa_invert>
 5f6:	a8 2e       	mov	r10, r24
 5f8:	a8 18       	sub	r10, r8
 5fa:	fb 2d       	mov	r31, r11
 5fc:	ff 77       	andi	r31, 0x7F	; 127
 5fe:	bf 2e       	mov	r11, r31
 600:	b6 fe       	sbrs	r11, 6
 602:	0b c0       	rjmp	.+22     	; 0x61a <vfprintf+0x2aa>
 604:	2b 2d       	mov	r18, r11
 606:	2e 7f       	andi	r18, 0xFE	; 254
 608:	a5 14       	cp	r10, r5
 60a:	50 f4       	brcc	.+20     	; 0x620 <vfprintf+0x2b0>
 60c:	b4 fe       	sbrs	r11, 4
 60e:	0a c0       	rjmp	.+20     	; 0x624 <vfprintf+0x2b4>
 610:	b2 fc       	sbrc	r11, 2
 612:	08 c0       	rjmp	.+16     	; 0x624 <vfprintf+0x2b4>
 614:	2b 2d       	mov	r18, r11
 616:	2e 7e       	andi	r18, 0xEE	; 238
 618:	05 c0       	rjmp	.+10     	; 0x624 <vfprintf+0x2b4>
 61a:	7a 2c       	mov	r7, r10
 61c:	2b 2d       	mov	r18, r11
 61e:	03 c0       	rjmp	.+6      	; 0x626 <vfprintf+0x2b6>
 620:	7a 2c       	mov	r7, r10
 622:	01 c0       	rjmp	.+2      	; 0x626 <vfprintf+0x2b6>
 624:	75 2c       	mov	r7, r5
 626:	24 ff       	sbrs	r18, 4
 628:	0d c0       	rjmp	.+26     	; 0x644 <vfprintf+0x2d4>
 62a:	fe 01       	movw	r30, r28
 62c:	ea 0d       	add	r30, r10
 62e:	f1 1d       	adc	r31, r1
 630:	80 81       	ld	r24, Z
 632:	80 33       	cpi	r24, 0x30	; 48
 634:	11 f4       	brne	.+4      	; 0x63a <vfprintf+0x2ca>
 636:	29 7e       	andi	r18, 0xE9	; 233
 638:	09 c0       	rjmp	.+18     	; 0x64c <vfprintf+0x2dc>
 63a:	22 ff       	sbrs	r18, 2
 63c:	06 c0       	rjmp	.+12     	; 0x64a <vfprintf+0x2da>
 63e:	73 94       	inc	r7
 640:	73 94       	inc	r7
 642:	04 c0       	rjmp	.+8      	; 0x64c <vfprintf+0x2dc>
 644:	82 2f       	mov	r24, r18
 646:	86 78       	andi	r24, 0x86	; 134
 648:	09 f0       	breq	.+2      	; 0x64c <vfprintf+0x2dc>
 64a:	73 94       	inc	r7
 64c:	23 fd       	sbrc	r18, 3
 64e:	13 c0       	rjmp	.+38     	; 0x676 <vfprintf+0x306>
 650:	20 ff       	sbrs	r18, 0
 652:	06 c0       	rjmp	.+12     	; 0x660 <vfprintf+0x2f0>
 654:	5a 2c       	mov	r5, r10
 656:	73 14       	cp	r7, r3
 658:	18 f4       	brcc	.+6      	; 0x660 <vfprintf+0x2f0>
 65a:	53 0c       	add	r5, r3
 65c:	57 18       	sub	r5, r7
 65e:	73 2c       	mov	r7, r3
 660:	73 14       	cp	r7, r3
 662:	68 f4       	brcc	.+26     	; 0x67e <vfprintf+0x30e>
 664:	b7 01       	movw	r22, r14
 666:	80 e2       	ldi	r24, 0x20	; 32
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	2c 87       	std	Y+12, r18	; 0x0c
 66c:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 670:	73 94       	inc	r7
 672:	2c 85       	ldd	r18, Y+12	; 0x0c
 674:	f5 cf       	rjmp	.-22     	; 0x660 <vfprintf+0x2f0>
 676:	73 14       	cp	r7, r3
 678:	10 f4       	brcc	.+4      	; 0x67e <vfprintf+0x30e>
 67a:	37 18       	sub	r3, r7
 67c:	01 c0       	rjmp	.+2      	; 0x680 <vfprintf+0x310>
 67e:	31 2c       	mov	r3, r1
 680:	24 ff       	sbrs	r18, 4
 682:	12 c0       	rjmp	.+36     	; 0x6a8 <vfprintf+0x338>
 684:	b7 01       	movw	r22, r14
 686:	80 e3       	ldi	r24, 0x30	; 48
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	2c 87       	std	Y+12, r18	; 0x0c
 68c:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 690:	2c 85       	ldd	r18, Y+12	; 0x0c
 692:	22 ff       	sbrs	r18, 2
 694:	17 c0       	rjmp	.+46     	; 0x6c4 <vfprintf+0x354>
 696:	21 ff       	sbrs	r18, 1
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <vfprintf+0x330>
 69a:	88 e5       	ldi	r24, 0x58	; 88
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <vfprintf+0x334>
 6a0:	88 e7       	ldi	r24, 0x78	; 120
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	b7 01       	movw	r22, r14
 6a6:	0c c0       	rjmp	.+24     	; 0x6c0 <vfprintf+0x350>
 6a8:	82 2f       	mov	r24, r18
 6aa:	86 78       	andi	r24, 0x86	; 134
 6ac:	59 f0       	breq	.+22     	; 0x6c4 <vfprintf+0x354>
 6ae:	21 fd       	sbrc	r18, 1
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <vfprintf+0x346>
 6b2:	80 e2       	ldi	r24, 0x20	; 32
 6b4:	01 c0       	rjmp	.+2      	; 0x6b8 <vfprintf+0x348>
 6b6:	8b e2       	ldi	r24, 0x2B	; 43
 6b8:	27 fd       	sbrc	r18, 7
 6ba:	8d e2       	ldi	r24, 0x2D	; 45
 6bc:	b7 01       	movw	r22, r14
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 6c4:	a5 14       	cp	r10, r5
 6c6:	38 f4       	brcc	.+14     	; 0x6d6 <vfprintf+0x366>
 6c8:	b7 01       	movw	r22, r14
 6ca:	80 e3       	ldi	r24, 0x30	; 48
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 6d2:	5a 94       	dec	r5
 6d4:	f7 cf       	rjmp	.-18     	; 0x6c4 <vfprintf+0x354>
 6d6:	aa 94       	dec	r10
 6d8:	f4 01       	movw	r30, r8
 6da:	ea 0d       	add	r30, r10
 6dc:	f1 1d       	adc	r31, r1
 6de:	80 81       	ld	r24, Z
 6e0:	b7 01       	movw	r22, r14
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 6e8:	a1 10       	cpse	r10, r1
 6ea:	f5 cf       	rjmp	.-22     	; 0x6d6 <vfprintf+0x366>
 6ec:	33 20       	and	r3, r3
 6ee:	09 f4       	brne	.+2      	; 0x6f2 <vfprintf+0x382>
 6f0:	51 ce       	rjmp	.-862    	; 0x394 <vfprintf+0x24>
 6f2:	b7 01       	movw	r22, r14
 6f4:	80 e2       	ldi	r24, 0x20	; 32
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 94 a0 03 	call	0x740	; 0x740 <fputc>
 6fc:	3a 94       	dec	r3
 6fe:	f6 cf       	rjmp	.-20     	; 0x6ec <vfprintf+0x37c>
 700:	f7 01       	movw	r30, r14
 702:	86 81       	ldd	r24, Z+6	; 0x06
 704:	97 81       	ldd	r25, Z+7	; 0x07
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x39c>
 708:	8f ef       	ldi	r24, 0xFF	; 255
 70a:	9f ef       	ldi	r25, 0xFF	; 255
 70c:	2c 96       	adiw	r28, 0x0c	; 12
 70e:	e2 e1       	ldi	r30, 0x12	; 18
 710:	0c 94 4c 04 	jmp	0x898	; 0x898 <__epilogue_restores__>

00000714 <strnlen_P>:
 714:	fc 01       	movw	r30, r24
 716:	05 90       	lpm	r0, Z+
 718:	61 50       	subi	r22, 0x01	; 1
 71a:	70 40       	sbci	r23, 0x00	; 0
 71c:	01 10       	cpse	r0, r1
 71e:	d8 f7       	brcc	.-10     	; 0x716 <strnlen_P+0x2>
 720:	80 95       	com	r24
 722:	90 95       	com	r25
 724:	8e 0f       	add	r24, r30
 726:	9f 1f       	adc	r25, r31
 728:	08 95       	ret

0000072a <strnlen>:
 72a:	fc 01       	movw	r30, r24
 72c:	61 50       	subi	r22, 0x01	; 1
 72e:	70 40       	sbci	r23, 0x00	; 0
 730:	01 90       	ld	r0, Z+
 732:	01 10       	cpse	r0, r1
 734:	d8 f7       	brcc	.-10     	; 0x72c <strnlen+0x2>
 736:	80 95       	com	r24
 738:	90 95       	com	r25
 73a:	8e 0f       	add	r24, r30
 73c:	9f 1f       	adc	r25, r31
 73e:	08 95       	ret

00000740 <fputc>:
 740:	0f 93       	push	r16
 742:	1f 93       	push	r17
 744:	cf 93       	push	r28
 746:	df 93       	push	r29
 748:	18 2f       	mov	r17, r24
 74a:	09 2f       	mov	r16, r25
 74c:	eb 01       	movw	r28, r22
 74e:	8b 81       	ldd	r24, Y+3	; 0x03
 750:	81 fd       	sbrc	r24, 1
 752:	03 c0       	rjmp	.+6      	; 0x75a <fputc+0x1a>
 754:	8f ef       	ldi	r24, 0xFF	; 255
 756:	9f ef       	ldi	r25, 0xFF	; 255
 758:	20 c0       	rjmp	.+64     	; 0x79a <fputc+0x5a>
 75a:	82 ff       	sbrs	r24, 2
 75c:	10 c0       	rjmp	.+32     	; 0x77e <fputc+0x3e>
 75e:	4e 81       	ldd	r20, Y+6	; 0x06
 760:	5f 81       	ldd	r21, Y+7	; 0x07
 762:	2c 81       	ldd	r18, Y+4	; 0x04
 764:	3d 81       	ldd	r19, Y+5	; 0x05
 766:	42 17       	cp	r20, r18
 768:	53 07       	cpc	r21, r19
 76a:	7c f4       	brge	.+30     	; 0x78a <fputc+0x4a>
 76c:	e8 81       	ld	r30, Y
 76e:	f9 81       	ldd	r31, Y+1	; 0x01
 770:	9f 01       	movw	r18, r30
 772:	2f 5f       	subi	r18, 0xFF	; 255
 774:	3f 4f       	sbci	r19, 0xFF	; 255
 776:	39 83       	std	Y+1, r19	; 0x01
 778:	28 83       	st	Y, r18
 77a:	10 83       	st	Z, r17
 77c:	06 c0       	rjmp	.+12     	; 0x78a <fputc+0x4a>
 77e:	e8 85       	ldd	r30, Y+8	; 0x08
 780:	f9 85       	ldd	r31, Y+9	; 0x09
 782:	81 2f       	mov	r24, r17
 784:	09 95       	icall
 786:	89 2b       	or	r24, r25
 788:	29 f7       	brne	.-54     	; 0x754 <fputc+0x14>
 78a:	2e 81       	ldd	r18, Y+6	; 0x06
 78c:	3f 81       	ldd	r19, Y+7	; 0x07
 78e:	2f 5f       	subi	r18, 0xFF	; 255
 790:	3f 4f       	sbci	r19, 0xFF	; 255
 792:	3f 83       	std	Y+7, r19	; 0x07
 794:	2e 83       	std	Y+6, r18	; 0x06
 796:	81 2f       	mov	r24, r17
 798:	90 2f       	mov	r25, r16
 79a:	df 91       	pop	r29
 79c:	cf 91       	pop	r28
 79e:	1f 91       	pop	r17
 7a0:	0f 91       	pop	r16
 7a2:	08 95       	ret

000007a4 <__ultoa_invert>:
 7a4:	fa 01       	movw	r30, r20
 7a6:	aa 27       	eor	r26, r26
 7a8:	28 30       	cpi	r18, 0x08	; 8
 7aa:	51 f1       	breq	.+84     	; 0x800 <__ultoa_invert+0x5c>
 7ac:	20 31       	cpi	r18, 0x10	; 16
 7ae:	81 f1       	breq	.+96     	; 0x810 <__ultoa_invert+0x6c>
 7b0:	e8 94       	clt
 7b2:	6f 93       	push	r22
 7b4:	6e 7f       	andi	r22, 0xFE	; 254
 7b6:	6e 5f       	subi	r22, 0xFE	; 254
 7b8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ba:	8f 4f       	sbci	r24, 0xFF	; 255
 7bc:	9f 4f       	sbci	r25, 0xFF	; 255
 7be:	af 4f       	sbci	r26, 0xFF	; 255
 7c0:	b1 e0       	ldi	r27, 0x01	; 1
 7c2:	3e d0       	rcall	.+124    	; 0x840 <__ultoa_invert+0x9c>
 7c4:	b4 e0       	ldi	r27, 0x04	; 4
 7c6:	3c d0       	rcall	.+120    	; 0x840 <__ultoa_invert+0x9c>
 7c8:	67 0f       	add	r22, r23
 7ca:	78 1f       	adc	r23, r24
 7cc:	89 1f       	adc	r24, r25
 7ce:	9a 1f       	adc	r25, r26
 7d0:	a1 1d       	adc	r26, r1
 7d2:	68 0f       	add	r22, r24
 7d4:	79 1f       	adc	r23, r25
 7d6:	8a 1f       	adc	r24, r26
 7d8:	91 1d       	adc	r25, r1
 7da:	a1 1d       	adc	r26, r1
 7dc:	6a 0f       	add	r22, r26
 7de:	71 1d       	adc	r23, r1
 7e0:	81 1d       	adc	r24, r1
 7e2:	91 1d       	adc	r25, r1
 7e4:	a1 1d       	adc	r26, r1
 7e6:	20 d0       	rcall	.+64     	; 0x828 <__ultoa_invert+0x84>
 7e8:	09 f4       	brne	.+2      	; 0x7ec <__ultoa_invert+0x48>
 7ea:	68 94       	set
 7ec:	3f 91       	pop	r19
 7ee:	2a e0       	ldi	r18, 0x0A	; 10
 7f0:	26 9f       	mul	r18, r22
 7f2:	11 24       	eor	r1, r1
 7f4:	30 19       	sub	r19, r0
 7f6:	30 5d       	subi	r19, 0xD0	; 208
 7f8:	31 93       	st	Z+, r19
 7fa:	de f6       	brtc	.-74     	; 0x7b2 <__ultoa_invert+0xe>
 7fc:	cf 01       	movw	r24, r30
 7fe:	08 95       	ret
 800:	46 2f       	mov	r20, r22
 802:	47 70       	andi	r20, 0x07	; 7
 804:	40 5d       	subi	r20, 0xD0	; 208
 806:	41 93       	st	Z+, r20
 808:	b3 e0       	ldi	r27, 0x03	; 3
 80a:	0f d0       	rcall	.+30     	; 0x82a <__ultoa_invert+0x86>
 80c:	c9 f7       	brne	.-14     	; 0x800 <__ultoa_invert+0x5c>
 80e:	f6 cf       	rjmp	.-20     	; 0x7fc <__ultoa_invert+0x58>
 810:	46 2f       	mov	r20, r22
 812:	4f 70       	andi	r20, 0x0F	; 15
 814:	40 5d       	subi	r20, 0xD0	; 208
 816:	4a 33       	cpi	r20, 0x3A	; 58
 818:	18 f0       	brcs	.+6      	; 0x820 <__ultoa_invert+0x7c>
 81a:	49 5d       	subi	r20, 0xD9	; 217
 81c:	31 fd       	sbrc	r19, 1
 81e:	40 52       	subi	r20, 0x20	; 32
 820:	41 93       	st	Z+, r20
 822:	02 d0       	rcall	.+4      	; 0x828 <__ultoa_invert+0x84>
 824:	a9 f7       	brne	.-22     	; 0x810 <__ultoa_invert+0x6c>
 826:	ea cf       	rjmp	.-44     	; 0x7fc <__ultoa_invert+0x58>
 828:	b4 e0       	ldi	r27, 0x04	; 4
 82a:	a6 95       	lsr	r26
 82c:	97 95       	ror	r25
 82e:	87 95       	ror	r24
 830:	77 95       	ror	r23
 832:	67 95       	ror	r22
 834:	ba 95       	dec	r27
 836:	c9 f7       	brne	.-14     	; 0x82a <__ultoa_invert+0x86>
 838:	00 97       	sbiw	r24, 0x00	; 0
 83a:	61 05       	cpc	r22, r1
 83c:	71 05       	cpc	r23, r1
 83e:	08 95       	ret
 840:	9b 01       	movw	r18, r22
 842:	ac 01       	movw	r20, r24
 844:	0a 2e       	mov	r0, r26
 846:	06 94       	lsr	r0
 848:	57 95       	ror	r21
 84a:	47 95       	ror	r20
 84c:	37 95       	ror	r19
 84e:	27 95       	ror	r18
 850:	ba 95       	dec	r27
 852:	c9 f7       	brne	.-14     	; 0x846 <__ultoa_invert+0xa2>
 854:	62 0f       	add	r22, r18
 856:	73 1f       	adc	r23, r19
 858:	84 1f       	adc	r24, r20
 85a:	95 1f       	adc	r25, r21
 85c:	a0 1d       	adc	r26, r0
 85e:	08 95       	ret

00000860 <__prologue_saves__>:
 860:	2f 92       	push	r2
 862:	3f 92       	push	r3
 864:	4f 92       	push	r4
 866:	5f 92       	push	r5
 868:	6f 92       	push	r6
 86a:	7f 92       	push	r7
 86c:	8f 92       	push	r8
 86e:	9f 92       	push	r9
 870:	af 92       	push	r10
 872:	bf 92       	push	r11
 874:	cf 92       	push	r12
 876:	df 92       	push	r13
 878:	ef 92       	push	r14
 87a:	ff 92       	push	r15
 87c:	0f 93       	push	r16
 87e:	1f 93       	push	r17
 880:	cf 93       	push	r28
 882:	df 93       	push	r29
 884:	cd b7       	in	r28, 0x3d	; 61
 886:	de b7       	in	r29, 0x3e	; 62
 888:	ca 1b       	sub	r28, r26
 88a:	db 0b       	sbc	r29, r27
 88c:	0f b6       	in	r0, 0x3f	; 63
 88e:	f8 94       	cli
 890:	de bf       	out	0x3e, r29	; 62
 892:	0f be       	out	0x3f, r0	; 63
 894:	cd bf       	out	0x3d, r28	; 61
 896:	09 94       	ijmp

00000898 <__epilogue_restores__>:
 898:	2a 88       	ldd	r2, Y+18	; 0x12
 89a:	39 88       	ldd	r3, Y+17	; 0x11
 89c:	48 88       	ldd	r4, Y+16	; 0x10
 89e:	5f 84       	ldd	r5, Y+15	; 0x0f
 8a0:	6e 84       	ldd	r6, Y+14	; 0x0e
 8a2:	7d 84       	ldd	r7, Y+13	; 0x0d
 8a4:	8c 84       	ldd	r8, Y+12	; 0x0c
 8a6:	9b 84       	ldd	r9, Y+11	; 0x0b
 8a8:	aa 84       	ldd	r10, Y+10	; 0x0a
 8aa:	b9 84       	ldd	r11, Y+9	; 0x09
 8ac:	c8 84       	ldd	r12, Y+8	; 0x08
 8ae:	df 80       	ldd	r13, Y+7	; 0x07
 8b0:	ee 80       	ldd	r14, Y+6	; 0x06
 8b2:	fd 80       	ldd	r15, Y+5	; 0x05
 8b4:	0c 81       	ldd	r16, Y+4	; 0x04
 8b6:	1b 81       	ldd	r17, Y+3	; 0x03
 8b8:	aa 81       	ldd	r26, Y+2	; 0x02
 8ba:	b9 81       	ldd	r27, Y+1	; 0x01
 8bc:	ce 0f       	add	r28, r30
 8be:	d1 1d       	adc	r29, r1
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	ed 01       	movw	r28, r26
 8cc:	08 95       	ret

000008ce <_exit>:
 8ce:	f8 94       	cli

000008d0 <__stop_program>:
 8d0:	ff cf       	rjmp	.-2      	; 0x8d0 <__stop_program>
